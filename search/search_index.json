{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"MatDEM\u7b80\u4ecb","text":"<p>\u77e9\u9635\u79bb\u6563\u5143MatDEM Fast GPU Mat-rix computing of the D-iscrete E-lement M-ethod</p> <p>\u77e9\u9635\u79bb\u6563\u5143\uff08MatDEM\uff09\u4e3a\u62e5\u6709\u5b8c\u5168\u81ea\u4e3b\u77e5\u8bc6\u4ea7\u6743\u7684\u9ad8\u6027\u80fd\u79bb\u6563\u5143\u8f6f\u4ef6\uff0c\u91c7\u7528\u539f\u521b\u7684\u77e9\u9635\u79bb\u6563\u5143\u8ba1\u7b97\u6cd5\uff0c\u5b9e\u73b0\u4e86\u6570\u767e\u4e07\u9897\u7c92\u7684\u5feb\u901f\u79bb\u6563\u5143\u6a21\u62df\uff0c\u5728\u6570\u5c0f\u65f6\u5185\u5b8c\u6210\u5927\u89c4\u6a21\u4e09\u7ef4\u79bb\u6563\u5143\u6570\u503c\u6a21\u62df\u3002\u5bf9\u4e8e\u5b66\u672f\u548c\u6559\u5b66\u7528\u9014\uff0cMatDEM\u514d\u8d39\u4f7f\u7528\uff0c\u5e76\u53ef\u53d1\u8868\u8bba\u6587\u3002\u5546\u4e1a\u4f7f\u7528\uff0c\u8bf7\u4e0e\u7814\u53d1\u56e2\u961f\u8054\u7cfb\u3002</p> <p>\u57fa\u4e8e\u539f\u521b\u7684\u7406\u8bba\uff0c\u8f6f\u4ef6\u7a81\u7834\u6027\u5730\u5b9e\u73b0\u4e86\u79bb\u6563\u5143\u6750\u6599\u81ea\u52a8\u5efa\u6a21\uff0c\u4ee5\u53ca\u79bb\u6563\u5143\u7cfb\u7edf\u7684\u80fd\u91cf\u5b88\u6052\u8ba1\u7b97\uff0c\u7b49\u3002\u8f6f\u4ef6\u7efc\u5408\u4e86\u524d\u5904\u7406\u3001\u8ba1\u7b97\u3001\u540e\u5904\u7406\u548c\u5f3a\u5927\u7684\u4e8c\u6b21\u5f00\u53d1\uff0c\u63d0\u4f9b\u4e86\u5b8c\u5584\u7684\u51fd\u6570\u63a5\u53e3\u548c\u9ad8\u6548\u7684\u8ba1\u7b97\u5f15\u64ce\uff0c\u53ef\u901a\u8fc7\u4e8c\u6b21\u5f00\u53d1\u5b8c\u6210\u590d\u6742\u7684\u591a\u573a\u8026\u5408\u6a21\u62df\uff0c\u5e76\u5c01\u88c5\u65b0\u7684\u79bb\u6563\u5143\u8f6f\u4ef6\u3002\u76f8\u5173\u521b\u65b0\u6210\u679c\u5df2\u7533\u8bf7\u548c\u83b7\u5f97\u56fd\u5bb6\u53d1\u660e\u4e13\u5229\u548cPCT\u56fd\u9645\u4e13\u522910\u4f59\u9879\uff0c\u8f6f\u4ef6\u8457\u4f5c\u67436\u9879\u3002</p> <p>MatDEM\u5df2\u5e94\u7528\u4e8e\u6ed1\u5761\u3001\u5ca9\u7206\u3001\u649e\u51fb\u7834\u574f\u3001\u6869\u571f\u4f5c\u7528\u3001\u6eda\u5200\u7834\u5ca9\u548c\u6c34\u529b\u538b\u88c2\u7b49\u4e00\u7cfb\u5217\u95ee\u9898\u7684\u6a21\u62df\u3002\u8fdb\u4e00\u6b65\uff0c\u901a\u8fc7\u5b8c\u5584\u591a\u573a\u8026\u5408\u548c\u6d41\u56fa\u8026\u5408\u6a21\u62df\uff0c\u4e3a\u56fd\u5bb6\u5927\u89c4\u6a21\u5de5\u7a0b\u5efa\u8bbe\u63d0\u4f9b\u9ad8\u6548\u7684\u6570\u503c\u6a21\u62df\u4eff\u771f\u6280\u672f\u652f\u6301\u3002     </p>"},{"location":"#_1","title":"\u5e2e\u52a9\u6587\u4ef6","text":"<p>\u8f6f\u4ef6\u5b89\u88c5</p> <p>\u7a97\u53e3\u754c\u9762</p> <p>\u8f6f\u4ef6\u67b6\u6784</p> <p>\u540e\u5904\u7406</p> <p>\u793a\u4f8b</p> <p>API\u53c2\u8003</p>"},{"location":"#_2","title":"\u6559\u5b66\u8d44\u6e90","text":"<p>MOOC: </p> <ul> <li>\u79bb\u6563\u5143\u65b9\u6cd5\u4e0e\u5b9e\u8df5</li> </ul> <p>Videos:</p> <ul> <li>B\u7ad9</li> <li>\u4eff\u771f\u79c0</li> </ul> <p>Books:</p> <ul> <li>\u5730\u8d28\u4e0e\u5ca9\u571f\u5de5\u7a0b\u77e9\u9635\u79bb\u6563\u5143\u5206\u6790</li> <li>Matrix Discrete Element Analysis of Geological and Geotechnical Engineering</li> </ul> <p>Publications:</p> <ol> <li>Liu C., Pollard D.D., Shi B. 2013. Analytical solutions and numerical tests of elastic and failure behaviors of close-packed lattice for brittle rocks and crystals. Journal of Geophysical Research- Solid Earth, 118, 71-82. </li> <li>Liu C., Shi B., Pollard D. D., and Gu K. 2015. Mechanism of formation of wiggly compaction bands in porous sandstone: 2. Numerical simulation using discrete element method. Journal of Geophysical Research- Solid Earth, 120, 8153-8168. </li> <li>Liu C., Xu, Q., Shi, B., Deng, S., and Zhu, H. 2017. Mechanical properties and energy conversion of 3d close-packed lattice model for brittle rocks. Computers &amp; Geosciences, 103, 12-20. </li> <li>more</li> </ol>"},{"location":"#_3","title":"\u8054\u7cfb\u65b9\u5f0f","text":"<ul> <li>\u5218\u6625-\u5357\u4eac\u5927\u5b66\u5730\u7403\u79d1\u5b66\u4e0e\u5de5\u7a0b\u5b66\u9662\uff0c chunliu@nju.edu.cn</li> <li> \u77e9\u9635\u79bb\u6563\u5143\u5b98\u65b9\u7f51\u7ad9</li> <li> 668903775 </li> <li> \u77e9\u9635\u79bb\u6563\u5143MatDEM  </li> </ul>"},{"location":"install/","title":"\u5b89\u88c5","text":""},{"location":"install/#_2","title":"\u8f6f\u4ef6\u914d\u7f6e","text":"\u64cd\u4f5c\u7cfb\u7edf MatDEM\u91c7\u7528Matlab\u8bed\u8a00\u7f16\u5199\uff0c\u56e0\u6b64\u7406\u8bba\u4e0a\u53ea\u8981\u80fd\u8fd0\u884cMatlab\u7684\u64cd\u4f5c\u7cfb\u7edf\u5c31\u53ef\u8fd0\u884cMatDEM\uff0c\u5305\u62ecWindows\uff0cLinux\uff0cUnix\u4ee5\u53caMac OS\u7b49\u3002\u76ee\u524d\u7edd\u5927\u591a\u6570MatDEM\u7528\u6237\u4f7f\u7528Windows\u7cfb\u7edf\uff0c\u6545\u53ea\u7f16\u8bd1\u548c\u7ef4\u62a4Windows\u7248\u7684MatDEM\uff0c\u5982\u6709\u9700\u6c42\uff0c\u4eca\u540e\u4f1a\u589e\u52a0\u9488\u5bf9\u5176\u4ed6\u7cfb\u7edf\u7684\u7248\u672c\u3002 Matlab\u8fd0\u884c\u73af\u5883 <p>MatDEM\u4e8c\u6b21\u5f00\u53d1\u57fa\u4e8eMatlab \u8bed\u8a00\uff0c\u9700\u8981\u5b89\u88c5Matlab\u8fd0\u884c\u73af\u5883\uff08\u4e0d\u9700\u8981\u5b89\u88c5Matlab\u8f6f\u4ef6\uff09\uff0cMatDEM_v1.42\u53ca\u4ee5\u4e0a\u7248\u672c\u9700\u5b89\u88c5 R2019a (9.6)\u7248\u672c\u8fd0\u884c\u73af\u5883\u3002MatDEM_v2.50\u53ca\u4ee5\u4e0a\u7248\u672c\u9700\u5b89\u88c5R2021a (9.10)\u7248\u672c\u8fd0\u884c\u73af\u5883\u3002Matlab\u8fd0\u884c\u73af\u5883\u514d\u8d39\uff0c\u53ef\u81f3Matlab\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u3002</p> MatDEM\u8f6f\u4ef6\u8fd0\u884c <p>MatDEM\u8f6f\u4ef6\u89e3\u538b\u540e\uff0c\u6253\u5f00MatDEM\uff0c\u8fdb\u5165\u201c\u4e3b\u7a0b\u5e8f\u201d\uff0c\u5728\u5176\u53f3\u4fa7\u5de5\u4f5c\u6587\u4ef6\u5939\u4e2d\u53cc\u51fb\u6253\u5f00\u793a\u4f8b\u4ee3\u7801\uff08\u53f3\u56fe\uff09\uff0c\u901a\u5e38\u8fd0\u884c\u4ee3\u78011~3\u6b65\u5b8c\u6210\u6570\u503c\u6a21\u62df\uff08\u5982BoxCrash1~3\uff09\u3002\u6700\u65b0\u7248\u672cMatDEM\u4e0b\u8f7d\uff0c\u8bf7\u81f3\u7f51\u7ad9\uff1ahttp://matdem.com\u3002</p> GPU\u9a71\u52a8 <p>\u4ece\u4e13\u4e1a\u5382\u5bb6\u91c7\u8d2d\u7684GPU\u670d\u52a1\u5668\uff0c\u901a\u5e38\u4f1a\u5b89\u88c5\u597d Cuda \u8fd0\u884c\u5e93\u3002\u5982\u679c\u4e2a\u4eba\u7b14\u8bb0\u672c\u7535\u8111\u548c\u53f0\u5f0f\u673a\u51fa\u73b0GPU\u65e0\u6cd5\u8bc6\u522b\u548c\u4f7f\u7528\u7684\u63d0\u793a\uff0c\u9700\u8981\u5230\u82f1\u4f1f\u8fbe\u7f51\u7ad9\u4e0a\u4e0b\u8f7d\u5b89\u88c5\u6700\u65b0\u7684\u663e\u5361\u9a71\u52a8\u3002\u5982\u4ecd\u5b58\u5728\u95ee\u9898\uff0c\u518d\u5b89\u88c5cuda\u9a71\u52a8\u5373\u53ef</p>"},{"location":"install/#_3","title":"\u786c\u4ef6\u914d\u7f6e","text":"GPU <p>GPU\u8ba1\u7b97\u9700\u8981\u82f1\u4f1f\u8fbe\uff08Nvidia\uff09\u72ec\u7acb\u663e\u5361\uff0c\u4e00\u822c\u7b14\u8bb0\u672c\u4e5f\u53ef\u4ee5\u8ba1\u7b97\uff0c\u4f46\u6548\u7387\u4ec5\u63d0\u53475\u500d\u5de6\u53f3\uff0c\u8f83\u597d\u7684\u53f0\u5f0f\u673a\u663e\u5361\uff0c\u80fd\u63d0\u5347\u5341\u591a\u500d\u6548\u7387\u3002\u5982\u679c\u9700\u8981\u6570\u5341\u500d\u7684\u6548\u7387\u63d0\u5347\uff0c\u5219\u9700\u8981\u82f1\u4f1f\u8fbe\u751f\u4ea7\u7684\u4e13\u4e1aTesla GPU\u8ba1\u7b97\u5361\uff0c\u5982Tesla V100\u30021G\u7684\u663e\u5b58\u6700\u591a\u80fd\u8ba1\u7b97\u7ea610\u4e07\u4e2a\u4e09\u7ef4\u5355\u5143\uff0c\u5927\u89c4\u6a21\u8ba1\u7b97\u9700\u8981\u8f83\u5927\u7684\u663e\u5b58\u3002</p> CPU <p>GPU\u8ba1\u7b97\u9700\u8981CPU\u6765\u63a7\u5236\uff0c\u56e0\u6b64\u4e5f\u9700\u8981\u6709**\u8f83\u9ad8\u4e3b\u9891**\u7684CPU\u3002\u4e00\u4e2aGPU\u901a\u5e38\u9700\u8981\u4e24\u4e2aCPU\u6838\u5373\u53ef\uff0cMatDEM\u8ba1\u7b97\u5bf9CPU\u6838\u6570\u8981\u6c42\u4e0d\u9ad8\u3002\u5982\u53cc\u8defCPU\u81f3\u5f3aE5-2637v4\u6709\u6bd4\u8f83\u9ad8\u7684\u6027\u4ef7\u6bd4\uff0cGold CPU\u6027\u80fd\u901a\u5e38\u66f4\u9ad8\u3002\u5f53\u7136\uff0c\u66f4\u9ad8\u4e3b\u9891\u4e0e\u6838\u6570\u7684CPU\u5219\u6709\u66f4\u597d\u7684\u8ba1\u7b97\u8868\u73b0\u3002</p> \u663e\u5361 <p>MatDEM\u6a21\u62df\u7ed3\u679c\u7684\u4e09\u7ef4\u663e\u793a\u5bf9\u663e\u5361\u6709\u8f83\u9ad8\u7684\u8981\u6c42\uff08\u663e\u5b58\u5bb9\u91cf\u8981\u9ad8\uff09\u3002\u5982\u679c\u8981\u663e\u793a\u6570\u5341\u4e07\u7684\u4e09\u7ef4\u9897\u7c92\uff0c\u9700\u8981\u6709\u8f83\u597d\u7684\u4e13\u4e1a\u663e\u5361\u3002</p> \u5185\u5b58\u548c\u786c\u76d8 <p>\u7cfb\u7edf\u5185\u5b58\u5bb9\u91cf\u6700\u597d\u662fGPU\u663e\u5b58\u5bb9\u91cf\u76842\u500d\u4ee5\u4e0a\u3002\u5982\u9700\u8fdb\u884c\u5927\u89c4\u6a21\u8ba1\u7b97\uff0c\u53ef\u8d2d\u4e701T\u6216\u66f4\u591a\u7684SSD\u786c\u76d8\uff0c\u642d\u914d8T\u6216\u66f4\u591a\u7684\u673a\u68b0\u786c\u76d8\u3002</p> \u5176\u4ed6 <p>\u5982\u4f7f\u7528\u666e\u901a\u53f0\u5f0f\u673a\uff0c\u5efa\u8bae\u91c7\u8d2d\u5927\u663e\u5b58\u7684Nvidia\u72ec\u7acb\u663e\u5361\u548c\u9ad8\u4e3b\u9891\u7684CPU\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u9ad8\u6027\u80fd\u6e38\u620f\u4e3b\u673a\u7684\u914d\u7f6e\u5373\u53ef\u3002</p>"},{"location":"post/","title":"\u540e\u5904\u7406","text":""},{"location":"post/#_2","title":"\u7ed8\u56fe\u63a5\u53e3","text":"<code>d.show</code> \u8bf4\u660e \u663e\u793a\u6a21\u578b\u53c2\u6570\u3001\u6a21\u62df\u8fc7\u7a0b\u548c\u6a21\u62df\u7ed3\u679c \u8bed\u6cd5 <code>d.show()</code> <code>d.show(showType)</code> <code>d.show(showType1, showType2)</code> <code>d.show(showType1, showType2, showType3)</code> <code>d.show(showType1, showType2, showType3, showType4)</code> <code>figN = d.show(__)</code> \u53c2\u6570 <code>showType</code> <code>figN</code> \u793a\u4f8b <ul> <li><code>d.show('StressXX')</code>\uff0c\u663e\u793aX\u65b9\u5411\u6b63\u5e94\u529b</li> <li><code>d.show('StressXX','StressZZ')</code>\uff0c\u663e\u793aX\u65b9\u5411\u6b63\u5e94\u529b\u4e0eZ\u65b9\u5411\u6b63\u5e94\u529b</li> <li><code>d.show()</code>\uff0c\u663e\u793a<code>d.show('StressZZ','EnergyCurve','ForceCurve','HeatCurve')</code>\u7684\u7ed3\u679c</li> <li><code>d.show('-StressXX')</code>\uff0c\u540c\u65f6\u663e\u793a\u8fde\u63a5\u548c\u5e94\u529b\u72b6\u6001</li> </ul> \u53c2\u6570\u8bf4\u660e <ul> <li>\u6a21\u62df\u7ed3\u679c\uff0c\u6570\u636e\u6765\u6e90\uff1a<code>d.data.*</code> <code>showType: ['StressXX' | 'Displacement' ...]</code></li> <li>\u5355\u5143\u53c2\u6570\uff0c\u6570\u636e\u6765\u6e90\uff1a<code>d.mo.*</code> <code>showType: ['aX' | 'mGZ' ...]</code></li> <li>\u6a21\u62df\u8fc7\u7a0b\uff0c\u6570\u636e\u6765\u6e90\uff1a<code>d.status.*</code> <code>showType: ['ForceCurve' | 'EnergyCurve' ...]</code></li> <li>\u81ea\u5b9a\u4e49\u53c2\u6570\uff0c\u6570\u636e\u6765\u6e90\uff1a<code>d.mo.SET.*</code> </li> <li>\u4e00\u4e9b\u7279\u522b\u7684\u7ed8\u56fe <code>showType: ['--' | 'Id' | 'Crack' ...]</code></li> </ul> <code>d.showBall</code> \u8bed\u6cd5 <p><code>d.showBall(Id)</code> </p> \u8bf4\u660e <p>\u663e\u793a\u5355\u5143\u5728\u6a21\u578b\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u4e0e\u5468\u56f4\u5355\u5143\u7684\u4f5c\u7528\u529b\u56fe\u3002 \u8f93\u5165\u53c2\u6570\u4e3a\u5355\u5143\u7f16\u53f7\uff0c\u8fd4\u56de\u503c\u4e3a\u6b64\u5355\u5143\u6240\u53d7\u5e94\u529b</p> \u793a\u4f8b <p><code>d.showBall(111)</code> </p>"},{"location":"post/#_3","title":"\u7ed8\u56fe\u63a7\u5236","text":"<code>d.showFilter</code> \u8bf4\u660e <p>\u6839\u636e\u4e00\u5b9a\u7b5b\u9009\u89c4\u5219\uff08\u5750\u6807\u3001\u5355\u5143\u7ec4\u540d\u7b49\uff09\u9009\u62e9\u7279\u5b9a\u5355\u5143\u8fdb\u884c\u663e\u793a \u6b64\u51fd\u6570\u66f4\u65b0d.data.showFilter\u5c5e\u6027\uff0c\u4f9bd.show\u51fd\u6570\u67e5\u8be2\u63a7\u5236\u7ed8\u56fe \u6b64\u51fd\u6570\u7684\u6548\u679c \u53ef\u591a\u6b21\u53e0\u52a0</p> \u8bed\u6cd5 <p><code>d.showFilter(filterType, filterValue)</code> <code>d.showFilter(filterType, filterValue1, filterValue2)</code> <code>d.showFilter(__, showType)</code> <code>d.showFilter()</code> <code>showFilter = d.showFilter(__)</code></p> \u793a\u4f8b <p><code>filterType</code>: <code>['Slide' | 'SlideX' | 'SlideY' | 'SlideZ' | 'Group' | 'Filter' | 'BallId']</code> </p> <p><code>d.showFilter('Slide',0.5,'aR');</code> \u5728x,y,z\u65b9\u5411\u4e0a\u540c\u65f6\u5207\uff0c\u5f97\u5230\u4e00\u4e2a\u5757\uff0c\u7b2c2\u4e2a\u53c2\u6570<code>filterValue</code>\u4e3a\u5207\u5272\u5757\u6bd4\u7387</p> <p><code>d.showFilter('SlideX',0.2,0.6,'aR');</code> \u5728x\u65b9\u5411\u5207\u5272\uff0c\u7b2c2-3\u4e2a\u53c2\u6570<code>filterValue</code>\u4e3a\u8d77\u59cb\u4f4d\u7f6e\u548c\u539a\u5ea6\uff0c\u503c\u57280-1\u95f4\u3002</p> <p><code>'SlideY', 'SlideZ'</code>   \u540c<code>'SlideX'</code> </p> <p> </p> <p><code>d.showFilter('Material',1,'aR');</code> \u663e\u793a\u6307\u5b9a\u6750\u6599\u53f7\u7684\u5355\u5143, \u7b2c2\u4e2a\u53c2\u6570<code>filterValue</code>\u4e3a\u6750\u6599\u7f16\u53f7</p> <p><code>d.showFilter('BallId',[1,50,100],'aR');</code> \u663e\u793a\u6307\u5b9a\u7f16\u53f7\u7684\u5355\u5143, \u7b2c2\u4e2a\u53c2\u6570<code>filterValue</code>\u4e3a\u5355\u5143\u7f16\u53f7\u6570\u7ec4    </p> <p><code>d.showFilter('Group',{'sample','lefB'},'aR');</code> \u663e\u793a\u6307\u5b9a\u7ec4\u7684\u5355\u5143\uff0c\u7b2c2\u4e2a\u53c2\u6570<code>filterValue</code>\u4e3a\u7ec4\u540d\u7684cell\u6570\u7ec4   </p> <p><code>'Filter'</code> \u76f4\u63a5\u8d4b\u65b0\u7684<code>showFilter</code> \u7b2c2\u4e2a\u53c2\u6570<code>filterValue</code>\u4e3a<code>showFilter</code>\u5e03\u5c14\u77e9\u9635\uff0c\u957f\u5ea6\u4e3a<code>aNum</code></p> <code>d.showB</code> \u8bf4\u660e \u63a7\u5236\u663e\u793a\u8fb9\u754c\u53ca\u5899\u5355\u5143\u7684\u65b9\u5f0f\u3002 \u5899\u5355\u5143\u5728\u8ba1\u7b97\u65f6\u4e0d\u79fb\u52a8\uff0c\u9ed8\u8ba4\u516d\u4e2a\u8fb9\u754c\u4e3a\u5899\u5355\u5143\uff0c\u5176\u8fb9\u6846\u6839\u636e\u6a21\u578b\u7684\u516d\u4e2a\u8fb9\u754c\u4f4d\u7f6e\u6765\u5b9a\u4e49\u3002 \u5728\u663e\u793a\u8fb9\u754c\u5355\u5143\u65f6\uff0c<code>d.showB</code>\u5c5e\u6027\u548c<code>d.showFilter</code>\u51fd\u6570\u6548\u679c\u76f8\u53e0\u52a0   \u7528\u6cd5 <code>d.showB=0</code> \u4e0d\u663e\u793a\u56fa\u5b9a\u7684\u5899\u5355\u5143\uff08\u5305\u62ec\u8fb9\u754c\u5355\u5143\uff09\u548c\u8fb9\u6846\u7ebf <code>d.showB=1</code> \u4ec5\u663e\u793a\u8fb9\u6846\u7ebf <code>d.showB=2</code> \u663e\u793a\u6240\u6709\u56fa\u5b9a\u7684\u5899\u5355\u5143\uff08\u5305\u62ec\u8fb9\u754c\u5355\u5143\uff09 <code>d.showB=3</code> \u4e0d\u663e\u793a\u8fb9\u754c\u5355\u5143\uff0c\u4f46\u663e\u793a\u81ea\u5b9a\u4e49\u7684\u5899\u5355\u5143 <code>d.showB=4</code> \u5c06\u663e\u793a\u533a\u57df\u63a7\u5236\u5728d.mo.frame\u4e2d\uff0c\u7528\u4e8e[\u884c\u661f\u6848\u4f8b]\u663e\u793a <p> </p> <p> <code>d.showB=4</code> </p> <code>d.status.lengendLocation</code> \u8bf4\u660e \u63a7\u5236\u56fe\u4f8b\u4f4d\u7f6e, <code>['West' | 'East' | ...]</code> <code>d.figureNumber</code> \u8bf4\u660e \u63a7\u5236\u7ed8\u56fe\u7a97\u53e3 \u8fd0\u884c<code>ufs.simpleFigure('on');</code>\u540e\uff0c\u4f1a\u542f\u7528\u7b80\u5355\u7ed8\u56fe\uff0c\u4e0d\u663e\u793a\u56fe\u4f8b\u3002\u5177\u4f53\u89c1[roller3]\u793a\u4f8b"},{"location":"post/#_4","title":"\u56fe\u4ef6\u7ed8\u5236\u548c\u6570\u636e\u4fdd\u5b58","text":"<p>\u91c7\u7528\u4ee5\u4e0b\u547d\u4ee4\u5c06\u6570\u636e\u4fdd\u5b58\u5728excel\u6587\u6863\u4e2d <code>xlswrite('stress.xls',d.data.StressZZ);</code> </p>"},{"location":"post/#gif","title":"GIF\u52a8\u56fe\u751f\u6210","text":""},{"location":"structure/","title":"\u8f6f\u4ef6\u7ed3\u6784","text":""},{"location":"structure/#_2","title":"\u76ee\u5f55\u7ed3\u6784","text":"\u76ee\u5f55\u7ed3\u6784 <p>\u7cfb\u7edf\u6587\u4ef6\u5939\u4e0d\u53ef\u5220\u9664</p> data \u7cfb\u7edf\u6587\u4ef6\u5939, \u7528\u4e8e\u5b58\u50a8\u6a21\u62df\u6587\u4ef6, \u53ef\u5b9a\u671f\u6e05\u7406\u5176\u4e2d\u6587\u4ef6 data/step \u7cfb\u7edf\u6587\u4ef6\u5939, \u5b58\u50a8\u6a21\u62df\u4e2d\u95f4\u6587\u4ef6, \u53ef\u5b9a\u671f\u6e05\u7406\u5176\u4e2d\u6587\u4ef6 app \u81ea\u5b9a\u4e49\u7684app\u6587\u4ef6\u5939, \u7528\u4e8e\u5b58\u50a8app\u7684\u6e90\u6587\u4ef6, \u53ef\u589e\u52a0\u548c\u5220\u9664\u81ea\u5b9a\u4e49\u7684app examples**** \u81ea\u5b9a\u4e49\u7684\u793a\u4f8b\u6587\u4ef6\u5939, \u7528\u4e8e\u653e\u7f6eMatDEM\u7684\u793a\u4f8b, \u53ef\u589e\u52a0\u548c\u5220\u9664\u793a\u4f8b fun \u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u6587\u4ef6\u5939, \u5b58\u50a8\u51fd\u6570\u548cMatlab\u8f85\u52a9\u6587\u4ef6, \u53ef\u589e\u52a0\u548c\u5220\u9664\u81ea\u5b9a\u4e49\u7684\u51fd\u6570 gif \u7cfb\u7edf\u6587\u4ef6\u5939, \u5b58\u50a8\u52a8\u753b, <code>fs.makeGif</code>\u751f\u6210\u7684\u52a8\u753b\u5c06\u4fdd\u5b58\u4e8e\u6b64 Mats \u7cfb\u7edf\u6587\u4ef6\u5939, \u5b58\u50a8\u6750\u6599, \u53ef\u5220\u9664\u6216\u589e\u52a0\u65b0\u7684\u6750\u6599 Resources \u7cfb\u7edf\u6587\u4ef6\u5939\uff08\u91cd\u8981\uff09, \u5b58\u50a8\u7cfb\u7edf\u6587\u4ef6, \u4e0d\u53ef\u4fee\u6539\uff0c\u5426\u5219\u7a0b\u5e8f\u65e0\u6cd5\u8fd0\u884c slope \u81ea\u5b9a\u4e49\u7684\u6ed1\u5761\u5efa\u6a21\u6587\u4ef6\u5939, \u5b58\u50a8\u90e8\u5206\u9ad8\u7a0b\u6570\u636e, \u53ef\u589e\u52a0\u548c\u5220\u9664\u6587\u4ef6 TempModel \u7cfb\u7edf\u6587\u4ef6\u5939, \u5b58\u50a8\u8ba1\u7b97\u7684\u4e2d\u95f4\u6587\u4ef6, \u53ef\u5b9a\u671f\u6e05\u7406\u5176\u4e2d\u6587\u4ef6 XMLdata \u7cfb\u7edf\u6587\u4ef6\u5939\uff08\u91cd\u8981\uff09, \u8bb0\u5f55\u7a0b\u5e8f\u57fa\u672c\u8bbe\u7f6e, \u4e0d\u53ef\u4fee\u6539\uff0c\u5426\u5219\u7a0b\u5e8f\u65e0\u6cd5\u8fd0\u884c"},{"location":"structure/#_3","title":"\u7a0b\u5e8f\u7ed3\u6784\u4e0e\u57fa\u7840\u51fd\u6570","text":"\u4ee3\u7801\u5c42\u6b21\u7ed3\u6784\u7c7b\u4e0e\u51fd\u6570\u96c6\u53ca\u5176\u529f\u80fd \u5c42\u6b21 \u76f8\u5173\u4ee3\u7801 \u7528\u6237\u4e8c\u6b21\u5f00\u53d1\uff08\u9876\u5c42\uff09 \u4e8c\u6b21\u5f00\u53d1\u4ee3\u7801 MatDEM\u5efa\u6a21\u5668 obj_Box, obj_3Axial, material, Tool_Cut MatDEM\u6c42\u89e3\u548c\u63a7\u5236 build, model, modelStatus MatDEM\u51fd\u6570\u96c6 mfs, fs, bfs\u7b49 matlab\u51fd\u6570\uff08\u5e95\u5c42\uff09 \u77e9\u9635\u8ba1\u7b97 \u7c7b\u4e0e\u51fd\u6570\u96c6 \u529f\u80fd user_*** \u4e8c\u6b21\u5f00\u53d1\u811a\u672c UI_*** \u7528\u6237\u754c\u9762\u811a\u672c obj_Box \u6a21\u578b\u7bb1\u5efa\u6a21\u5668 obj_3Axial \u8bd5\u9a8c\u5ba4\u5efa\u6a21\u5668\uff08\u5c06\u88ab\u5e9f\u5f03\uff09 Tool_Cut \u6a21\u578b\u5207\u5272\u5668 build \u6a21\u62df\u548c\u6570\u636e\u63a7\u5236 model \u6c42\u89e3\u5668 modelStatus \u6a21\u62df\u8fc7\u7a0b\u8bb0\u5f55 material \u6750\u6599 mfs \u5efa\u6a21\u51fd\u6570 fs \u57fa\u672c\u51fd\u6570"},{"location":"structure/#_4","title":"\u7cfb\u7edf\u57fa\u672c\u51fd\u6570","text":"<code>MatDEMfile(FileName)</code> \u8fd0\u884c<code>FileName</code>\u6307\u5b9a\u7684\u811a\u672c \u4f8b: <code>MatDEMfile('user_3AxialNew1.m');</code> <code>f.run(FunctionName, parameter, \u2026)</code> \u5b9a\u4e49\u51fd\u6570\u5e76\u8fd0\u884c\uff08Matlab\u6807\u51c6\u51fd\u6570\uff09 Function:\u51fd\u6570\u540d\uff0cparameter\u53c2\u6570 k1=f.run('examples/funtest.m',1,2,3) \u89c1\u793a\u4f8buser_Function2Object.m f.define(FunStr) \u91cd\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 fs.disp(note) \u5728\u4e0b\u65b9\u63d0\u793a\u6846\u4e2d\u663e\u793anote\u5b57\u7b26\u4e32\u5185\u5bb9 a=1+1;fs.disp(['a is ' num2str(a)]); <code>gpuDevice(gpuIndex)</code> \u5f53\u6709\u591a\u4e2aGPU\u65f6\uff0c\u9009\u62e9\u6240\u4f7f\u7528\u7684GPU"},{"location":"structure/#_5","title":"\u81ea\u5b9a\u4e49\u51fd\u6570\u548c\u8f85\u52a9\u6587\u4ef6\u5939","text":"<p>MatDEM\u53ef\u8fd0\u884c\u6807\u51c6\u7684Matlab\u51fd\u6570\u3002\u901a\u5e38\u53ef\u5229\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u6765\u5efa\u6a21\uff0c\u5728fun\u6587\u4ef6\u5939\u91cc\u63d0\u4f9b\u4e86\u82e5\u5e72\u81ea\u5b9a\u4e49\u51fd\u6570\u793a\u4f8b\uff0c\u5305\u62ec\uff081\uff09\u5efa\u7acb\u5404\u7c7b\u7684\u7ec4\u4ef6\u5bf9\u8c61\uff0c\u5982\u4ee5\u4e0b\u4ee5make\u5f00\u5934\u7684\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u8fd4\u56de\u5305\u542bXYZR\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\uff1b\uff082\uff09\u5236\u4f5c\u8fc7\u6ee4\u5668\uff0c\u7528\u4ee5\u8fc7\u6ee4\u51fa\u7279\u5b9a\u7684\u5355\u5143\uff0c\u5e76\u5207\u5272\u548c\u5b9a\u4e49\u6a21\u578b\u3002\u5728fun\u6587\u4ef6\u5939\u4e2d\u7ed9\u51fa\u4e86\u51e0\u4e2a\u81ea\u5b9a\u4e49\u5efa\u6a21\u51fd\u6570\u793a\u4f8b\uff08\u5982\u4e0b\u65b9\uff09\u3002\u5229\u7528\u8fd9\u4e9b\u51fd\u6570\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5404\u7c7b\u7684\u57fa\u672c\u7ec4\u4ef6\u5bf9\u8c61\uff0c\u5e76\u901a\u8fc7\u5207\u5272\u548c\u62fc\u5408\u6784\u5efa\u590d\u6742\u7684\u51e0\u4f55\u6a21\u578b\u3002\u53c2\u89c1user_Function2Object.m\uff0cuser_modelExample.m fun\u6587\u4ef6\u5939\u4e2d\u63d0\u4f9b\u4e86Matlab\u8f85\u52a9\u6587\u4ef6\uff08*.p\uff09\u3002\u5f53\u5728Matlab\u4e2d\u8fdb\u5165\u6b64\u6587\u4ef6\u5939\uff0c\u5e76\u6253\u5f00MatDEM\u4fdd\u5b58\u7684.mat\uff0c\u53ef\u76f4\u63a5\u5728Matlab\u4e2d\u67e5\u770b\u548c\u4fee\u6539\u6570\u636e\uff0c\u5e76\u4e14\u53ef\u8c03\u7528mfs\u4e2d\u6240\u6709\u51fd\u6570\uff0c\u8bf7\u67e5\u770b\u8fd0\u884cfun\u6587\u4ef6\u5939\u4e2d\u7684RunInMatlab.m\u3002</p> <p>\u81ea\u5b9a\u4e49\u5efa\u6a21\u51fd\u6570\u793a\u4f8b   Matlab\u6570\u636e\u7ed3\u6784\u663e\u793a\u6587\u4ef6  Matlab\u5efa\u6a21\u8f85\u52a9\u51fd\u6570 makeDisc.m  build.p mfs.p\uff08\u5305\u62ec\u5168\u90e8\u51fd\u6570\uff0c\u53ef\u76f4\u63a5\u8c03\u7528\uff09 makeColumn.m    material.p  fs.p\uff08\u5c11\u91cf\u7528\u4e8emfs\u7684\u663e\u793a\u51fd\u6570\uff09 makeHob.m   model.p  makeRing.m  modelStatus.p  getColumnFilter.m   Obj_3AxialTester.p applyRegionFilter.m obj_Box.p  imageRegionFilter.m Tool_Cut.p  </p> MatDEM\u4e13\u5bb6\u7248 <p>MatDEM3.5\u53ca\u4ee5\u540e\u7248\u672c\u652f\u6301\u5728Matlab\u91cc\u7f16\u8f91\u548c\u8c03\u8bd5\u4ee3\u7801\uff0c\u4ee5\u53ca\u5236\u4f5cMatDEM\u7a97\u53e3\u8f6f\u4ef6\u3002\uff081\uff09\u5b89\u88c5\u4e13\u5bb6\u6a21\u5f0f\u3002\u5728\u8f6f\u4ef6\u6839\u76ee\u5f55\u4e2d\u53f3\u51fb\"MatDEM.exe\"\uff0c\u9009\u62e9\u201d\u4ee5\u7ba1\u7406\u5458\u6a21\u5f0f\u8fd0\u884c\u201c\u6253\u5f00\u8f6f\u4ef6\u3002\u8fdb\u5165\u201d\u8bbe\u7f6e\u201c\uff0c\u5b89\u88c5\u4e13\u5bb6\u6a21\u5f0f\u3002\uff082\uff09\u6253\u5f00Matlab\u6587\u4ef6\u5939\uff0c\u8fdb\u5165\u8f6f\u4ef6\u8981\u76ee\u5f55\uff0c\u8f93\u5165\"expert\"\u547d\u4ee4\uff0c\u51fa\u73b0\u201dMatDEM \u4e13\u5bb6\u6a21\u5f0f\u5df2\u542f\u7528\u201c\uff0c\u5219\u53ef\u5728Matlab\u91cc\u76f4\u63a5\u8fd0\u884cMatDEM\u7684\u4ee3\u7801\u3002\u6ce8\u610f\uff1a\u547d\u4ee4MatDEMfile\u5728Matlab\u91cc\u4e0d\u652f\u6301         </p>"},{"location":"structure/#_6","title":"\u6570\u636e\u7ed3\u6784","text":""},{"location":"structure/#_7","title":"\u5355\u5143\u7c7b\u578b\u548c\u6570\u636e","text":"<p>\u5728\u7a0b\u5e8f\u4e2d\u7684B\uff0cd\u548cd.mo\u7b49\u4e2d\u5747\u4f1a\u6709aNum\u548cmNum\u53c2\u6570\uff0c\u5176\u5206\u522b\u4ee3\u8868\u603b\u5355\u5143\u6570\u548c\u6a21\u578b\u6d3b\u52a8\u5355\u5143\u6570\u3002\u5728\u7a0b\u5e8f\u6570\u636e\u77e9\u9635\u4e2d\uff0c\u5355\u5143\u4ece1\u5f00\u59cb\u7f16\u53f7\u5230aNum\uff08\u77e9\u9635\u7684\u884c\u65b9\u5411\uff09\uff0c\u5176\u4e2d1\u5230mNum\u4e3a\u6a21\u578b\u6d3b\u52a8\u5355\u5143\uff0cmNum+1\u5230aNum-1\u4e3a\u6a21\u578b\u56fa\u5b9a\u5355\u5143\uff08\u5899\u5355\u5143\uff09\uff0caNum\u4e3a\u865a\u5355\u5143\u3002\u5728\u5bf9\u8c61\u53c2\u6570\u4e2d\uff0c\u5982\u53c2\u6570\u4ee5a\u5f00\u5934\uff08\u5982aX\uff0caBF\uff09\uff0c\u5219\u5176\u957f\u5ea6\u4e3aaNum\uff0c\u800c\u90e8\u5206\u53c2\u6570\u53ea\u6709\u6d3b\u52a8\u5355\u5143\u624d\u6709\uff0c\u5982mVX\uff08\u901f\u5ea6\uff09\uff0c\u5219\u4ee5m\u5f00\u5934\u3002           </p> <p>\u53d8\u91cf  \u8bf4\u660e  \u53d8\u91cf  \u8bf4\u660e B-&gt;Box  obj_Box\u5bf9\u8c61\uff0c\u4e8c\u6b21\u5f00\u53d1\u7684\u57fa\u7840\u6a21\u578b\u7bb1    aNum-&gt;number of all elements    \u6240\u6709\u7684\u5355\u5143\u6570 d-&gt;data center  build\u5bf9\u8c61\uff0c\u6570\u636e\u5904\u7406\u548c\u63a7\u5236\u5bf9\u8c61   mNum-&gt;number of model element   \u6a21\u578b\u6d3b\u52a8\u5355\u5143\u6570 mo-&gt;model   \u6a21\u578b\u5bf9\u8c61\uff0c\u8ba1\u7b97\u6a21\u5757      C-&gt;Cut  \u5c42\u9762\u5207\u5272\u5bf9\u8c61      </p>"},{"location":"structure/#_8","title":"\u8377\u8f7d\u548c\u8fb9\u754c\u6761\u4ef6","text":"<p>\u57fa\u4e8e\u725b\u987f\u529b\u5b66\uff0c\u79bb\u6563\u5143\u6cd5\u5728\u8ba1\u7b97\u673a\u4e2d\u6784\u5efa\u4e00\u4e2a\u7269\u7406\u4e16\u754c\u3002MatDEM\u53ef\u5b9e\u73b0\u5404\u7c7b\u8377\u8f7d\u548c\u8fb9\u754c\u7684\u65bd\u52a0\u3002\u7a0b\u5e8f\u4e2d\u62c9\u529b\u4e3a\u6b63\uff0c\u538b\u529b\u4e3a\u8d1f\u3002         \uff081\uff09\u4f4d\u79fb\u8fb9\u754c\uff1a\u79fb\u52a8boundary\u6765\u65bd\u52a0\u4f4d\u79fb\u8fb9\u754c\uff0c\u547d\u4ee4\u4e3ad.moveBoundary()\uff0c\u89c1build\u51fd\u6570         \uff082\uff09\u5e94\u529b\u8fb9\u754c\uff1a\u5bf9platen\u65bd\u52a0\u4f53\u529b\uff08mGX,mGY,mGZ\uff09\u6765\u5b9e\u73b0\u5bf9\u6837\u54c1\u7684\u538b\u529b\u4f5c\u7528\uff0c\u9700\u8981\u7b2c\u4e00\u6b65\u521d\u59cb\u5316\u65f6\u6dfb\u52a0\u8fb9\u754c\uff0cB.type='TriaxialCompression'\u65f6\u5305\u542b\u6240\u6709\u538b\u529b\u677f         \uff083\uff09\u632f\u52a8\u8fb9\u754c\uff1a\u5bf9boundary\u65bd\u52a0\u5468\u671f\u6027\u4f4d\u79fb\uff0cboundary\u4f5c\u7528\u529b\u5728platen\u4e0a\u5373\u8f6c\u5316\u4e3a\u6b63\u5f26\u5f0f\u632f\u52a8          \uff084\uff09\u8377\u8f7d\u4f5c\u7528\uff1a\u5404\u7c7b\u8377\u8f7d\u76f4\u63a5\u4f5c\u7528\u5728\u5355\u5143\u4e0a\uff0c\u5373\u901a\u8fc7\u5bf9d.mo\u4e2d\u7684\u53c2\u6570\u8fdb\u884c\u8d4b\u503c\uff0c\u5982d.mo.mGZ(:)=0\u5c06\u91cd\u529b\u8bbe\u4e3a\u96f6          </p>"},{"location":"structure/#_9","title":"\u63a5\u89e6\u6a21\u578b","text":"<p>\u63a5\u89e6\u6a21\u578b\u5728d.mo.FnCommand\u4e2d\u5b9a\u4e49\uff0c\u5982\u7ebf\u5f39\u6027\u6a21\u578b\u5219\u4e3a\uff1anFN0=obj.nKNe.*nIJXn;\u3002\u9ed8\u8ba4\u4e3a\u7ebf\u5f39\u6027\u6a21\u578b         \u7ebf\u5f39\u6027\u80f6\u7ed3\u63a5\u89e6\uff1a\u89c1\u4ee5\u4e0b\u56fe1 \uff0c\u4ee5\u53ca\u8bba\u65871           Hertz\u63a5\u89e6\uff1a\u5355\u5143\u4e4b\u95f4\u63a5\u89e6\u6309\u7403\u63a5\u89e6\u529b\u8ba1\u7b97\uff0c\u6b63\u5411\u529b\u91c7\u7528Hertz\u63a5\u89e6\uff0c        \u5c48\u670d\u7834\u574f\u63a5\u89e6\uff1a\u5355\u5143\u53ef\u88ab\u538b\u788e\uff08\u5c48\u670d\u7834\u574f\uff09\uff0c\u901a\u8fc7\u692d\u5706\u7684\u5c48\u670d\u5305\u7edc\u9762\uff08yeilding cap\uff09\u6765\u5b9a\u4e49\u8fd9\u7c7b\u7834\u574f\u3002d.mo.isFailure=1\u65f6\u542f\u7528\uff0c\u76ee\u524d\u65e0\u793a\u4f8b\u3002\u89c1\u4ee5\u4e0b\u56fe2\uff0c\u4ee5\u53ca\u8bba\u65872          \"\u81ea\u5b9a\u4e49\u63a5\u89e6\u6a21\u578b\uff1a\u79bb\u6563\u5143\u63a5\u89e6\u6a21\u578b\u548c\u5b8f\u5fae\u89c2\u5206\u6790\u662f\u79bb\u6563\u5143\u7814\u7a76\u548c\u5e94\u7528\u975e\u5e38\u91cd\u8981\u7684\u57fa\u7840\uff0c\u5176\u80fd\u4ece\u672c\u8d28\u4e0a\u63a2\u6c42\u5ca9\u571f\u6750\u6599\u590d\u6742\u5b8f\u89c2\u7279\u6027\u7684\u5fae\u7ec6\u89c2\u673a\u7406\u3002\u57fa\u4e8e\u5de5\u7a0b\u5c3a\u5ea6\u6570\u503c\u6a21\u62df\u7684\u8003\u8651\uff0cMatDEM\u4e00\u76f4\u91c7\u7528\u7ebf\u5f39\u6027\u7684\u7c98\u7ed3\u6a21\u578b\uff0c\u5e76\u63d0\u4f9bHertz\u63a5\u89e6\u6a21\u578b\u7528\u4e8e\u8f6f\u4ef6\u4e0e\u73bb\u7483\u73e0\u8bd5\u9a8c\u5bf9\u6bd4\u6d4b\u8bd5\u3002\u8fc7\u53bb\u4e00\u5e74\uff0cMatDEM\u56e2\u961f\u6536\u5230\u56fd\u5185\u5916\u5927\u91cf\u81ea\u5b9a\u4e49\u63a5\u89e6\u6a21\u578b\u7684\u9700\u6c42\u3002\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u8bbe\u8ba1\u548c\u7814\u53d1\uff0cMatDEM1.65\u7248\u63d0\u4f9b\u4e86\u81ea\u5b9a\u4e49\u63a5\u89e6\u6a21\u578b\u652f\u6301\u3002  \u5728BoxCrash1\u793a\u4f8b\u4e2d\uff0c\u4ee5\u4e0b\u547d\u4ee4\u5c06normalContact.m\u51fd\u6570\u8bbe\u5b9a\u4e3a\u8fed\u4ee3\u8ba1\u7b97\u51fd\u6570\uff0c\u5e76\u8fdb\u884c\u63a5\u89e6\u529b\u548c\u5355\u5143\u8fd0\u52a8\u8ba1\u7b97\uff08\u7ea6150\u884c\uff09\u3002 d.mo.setBalanceFunction('fun/normalContact.m'); \u5177\u4f53\u8bf7\u89c1Box_Crash1\u793a\u4f8b\u3002MatDEM\u56e2\u961f\u5c06\u7814\u53d1\u548c\u5171\u4eab\u66f4\u591a\u7684\u63a5\u89e6\u6a21\u578b\uff0c\u540c\u65f6\u4e5f\u6b22\u8fce\u5404\u9886\u57df\u4e13\u5bb6\u5b66\u8005\u5171\u540c\u7814\u53d1\u3002\"           </p>"},{"location":"ui/","title":"\u7528\u6237\u754c\u9762","text":"\u542f\u52a8\u7a97\u53e3 \u57fa\u4e8eMatDEM\u8ba1\u7b97\u5e73\u53f0\uff0c\u53ef\u4ee5\u8fc5\u901f\u6784\u5efa\u65b0\u7684\u79bb\u6563\u5143\u8f6f\u4ef6\u3002\u542f\u52a8\u9875\u9762\u5206\u4e3aA\u548cB\u4e24\u4e2a\u6a21\u5757\u3002A\u4e3a\u5f00\u53d1\u5e73\u53f0\uff0c\u53ef\u901a\u8fc7\u4fee\u6539\u548c\u7f16\u5199\u4e8c\u6b21\u5f00\u53d1\u4ee3\u7801\uff0c\u5b8c\u6210\u5404\u7c7b\u79bb\u6563\u5143\u6570\u503c\u6a21\u62df\uff0c\u5e76\u57fa\u4e8eMatDEM\u8ba1\u7b97\u5e73\u53f0\u5feb\u901f\u6784\u5efa\u5404\u7c7b\u4e13\u4e1a\u79bb\u6563\u5143\u7a97\u53e3\u5e94\u7528\uff08\u8f6f\u4ef6\uff09\u3002B\u6a21\u5757\u4e3aMatDEM\u5e94\u7528\uff08App\uff09\uff0c\u5176\u4e2d\u5df2\u63d0\u4f9b\u591a\u4e2a\u5e94\u7528\u7684\u793a\u4f8b\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9a\u5236\u548c\u5206\u4eab\u65b0\u7684\u8f6f\u4ef6\uff0c\u4f9b\u666e\u901a\u7528\u6237\u4f7f\u7528\u3002 \u7528\u6237\u6ce8\u518c\u7a97\u53e3 \u7528\u4e8e\u5411\u7814\u53d1\u56e2\u961f\u63d0\u4ea4\u4f7f\u7528\u53cd\u9988\u548c\u7814\u53d1\u5efa\u8bae \u8bbe\u7f6e\u7a97\u53e3 \u9009\u62e9GPU\u548c\u5bfc\u5165\u8f6f\u4ef6\u4f7f\u7528\u8bb8\u53ef\u8bc1 \u4e3b\u7a0b\u5e8f\u7a97\u53e3 \u70b9\u51fb\u6a21\u5757A\u4e2d\u7684\u4e3b\u7a0b\u5e8f\u6309\u94ae\uff0c\u6253\u5f00\u5982\u4e0a\u6240\u793a\u7684\u4e3b\u7a0b\u5e8f\u7a97\u53e3\u3002 \u5176\u4e2d\u95f4\u662f \u4ee3\u7801\u7f16\u8f91\u5668 \u548c \u6570\u636e\u67e5\u770b\u5668 \u3002\u5206\u522b\u7528\u4e8e\u4ee3\u7801\u67e5\u770b\u7f16\u8f91\u548c\u6a21\u62df\u6570\u636e\u7684\u67e5\u770b\uff0c\u53ef\u70b9\u51fb\u4e0a\u65b9\u6309\u94ae\u6765\u5207\u6362\u3002\u4f7f\u7528\u8005\u53ef\u76f4\u63a5\u5728\u547d\u4ee4\u7f16\u8f91\u5668\u4e2d\u8f93\u5165\u5e76\u8fd0\u884c\u4e8c\u6b21\u5f00\u53d1\u4ee3\u7801\u3002\u547d\u4ee4\u7f16\u8f91\u5668\u548c\u6570\u636e\u67e5\u770b\u5668\u4e2d\u5747\u53ef\u6253\u5f00\u591a\u4e2a\u6807\u7b7e\u9875\uff0c\u65b9\u4fbf\u4f7f\u7528\u8005\u5feb\u901f\u5207\u6362\u3002 \u5de6\u4fa7\u4e3a \u6570\u636e\u8868\u683c\u533a \u3002\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4ea7\u751f\u7684\u5404\u7c7b\u53d8\u91cf\u90fd\u4f1a\u5728\u5176\u4e2d\u663e\u793a\u3002\u5de6\u8fb9\u7684\u6570\u636e\u8868\u683c\u4e2d\u5305\u542bB\u548cd\u4e24\u4e2a\u5e38\u7528\u5bf9\u8c61\uff0c\u5355\u51fb\u53d8\u91cfd\uff0c\u5728\u4e2d\u95f4\u7684\u6570\u636e\u67e5\u770b\u5668\u4e2d\u663e\u793ad\u5bf9\u8c61\u4e2d\u7684\u53c2\u6570\uff0c\u518d\u70b9\u51fb\u53c2\u6570d.mo\uff0c\u5219\u4f1a\u51fa\u73b0\u65b0\u7684\u6807\u7b7e\u9875d.mo\uff0c\u5e76\u663e\u793a\u5176\u5185\u90e8\u7684\u53c2\u6570\u3002 \u53f3\u4fa7\u4e3a \u6587\u4ef6\u7ba1\u7406\u533a \uff0c\u53cc\u51fb\u5373\u53ef\u8f7d\u5165\u5b58\u653e\u4e8e\u6839\u76ee\u5f55\u4e4b\u4e0b\u7684\u5404\u4e2a\u4ee3\u7801\u6587\u4ef6\uff0c\u6587\u4ef6\u4f1a\u5728\u4e2d\u95f4\u7684\u547d\u4ee4\u7f16\u8f91\u5668\u4e2d\u663e\u793a\u3002\u5982\u679c\u53cc\u51fb\u5b50\u6587\u4ef6\u5939\u4f1a\u8fdb\u5165\u6b21\u7ea7\u76ee\u5f55\uff0c\u53cc\u51fb\u6570\u636e\u6587\u4ef6\u5219\u4f1a\u5c06\u6570\u636e\u8bfb\u5165\u81f3\u5de5\u4f5c\u7a7a\u95f4\u4e2d\u3002 \u7a97\u53e3\u7684\u4e0b\u90e8\u662f \u547d\u4ee4\u884c \u548c \u6d88\u606f\u8f93\u51fa\u680f \u3002\u4f7f\u7528\u8005\u53ef\u5728\u547d\u4ee4\u884c\u4e2d\u9010\u53e5\u8f93\u5165\u547d\u4ee4\uff0c\u5e76\u6309\u56de\u8f66\u6765\u6267\u884c\u3002\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u5404\u7c7b\u4fe1\u606f\u63d0\u793a\u5219\u4f1a\u663e\u793a\u5728\u4e0b\u65b9\u7684\u6d88\u606f\u8f93\u51fa\u680f\u4e2d\u3002 \u7a97\u53e3\u5de6\u4e0b\u89d2\u8fd8\u6709\u4e00\u4e2a\u56fe\u50cf\u663e\u793a\u533a\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u4e00\u5207\u56fe\u50cf\u90fd\u4f1a\u5728\u5176\u4e2d\u663e\u793a\uff0c\u4f7f\u7528\u8005\u4e5f\u53ef\u4ee5\u901a\u8fc7Matlab\u7684figure\u51fd\u6570\u751f\u6210\u65b0\u7a97\u53e3\u663e\u793a\u56fe\u50cf\u3002 \u5f53\u9700\u8981\u4fdd\u5b58\u56fe\u50cf\u6216\u5236\u4f5c\u52a8\u753b\u65f6\uff0c\u53ef\u70b9\u51fb\u53f3\u4e0b\u89d2\u7684\u201c\u540e\u5904\u7406\u6a21\u5757\u201d\uff08\u89c1\u4e0b\uff09\u3002\u7a97\u53e3\u53f3\u4e0b\u89d2\u7684\u201c\u5c0f\u7a97\u53e3\u201d\u7528\u4e8e\u7f29\u5c0f\u7a97\u53e3\u3002\u70b9\u51fb\u540e\uff0c\u6574\u4e2a\u7a97\u53e3\u5c06\u7f29\u5c0f\u4e3a\u547d\u4ee4\u884c\u548c\u6d88\u606f\u8f93\u51fa\u680f\u3002\u5f53\u540c\u65f6\u8fd0\u884c\u591a\u4e2aMatDEM\u7a0b\u5e8f\u65f6\uff0c\u53ef\u5c06\u7a97\u53e3\u7f29\u5c0f\uff0c\u4ee5\u76d1\u6d4b\u6a21\u62df\u7684\u8fd0\u884c\u72b6\u6001\u3002 \u540e\u5904\u7406\u7a97\u53e3 \u9664\u4e86\u53ef\u4ee5\u901a\u8fc7\u4e3b\u7a0b\u5e8f\u7a97\u53e3\u8fdb\u5165\u540e\u5904\u7406\u6a21\u5757\u5916\uff0c\u4f7f\u7528\u8005\u4e5f\u53ef\u4ee5\u5728\u542f\u52a8\u754c\u9762\u4e2d\u76f4\u63a5\u6253\u5f00\u540e\u5904\u7406\u7a97\u53e3\u3002\u540e\u5904\u7406\u7a97\u53e3\u540c\u65f6\u652f\u6301\u63a7\u4ef6\u4ea4\u4e92\u4e0e\u8f93\u5165\u547d\u4ee4\u4e24\u79cd\u65b9\u5f0f\u3002\u7a97\u53e3\u5de6\u4e0a\u65b9\u7684\u4e09\u4e2a\u4e0b\u62c9\u6846\u7ed9\u51fa\u4e86\u4e09\u7ec4\u540e\u5904\u7406\u663e\u793a\u7c7b\u578b\uff0c\u5305\u62ec\uff1a\u2460\u6a21\u62df\u7ed3\u679c\uff0c\u7528\u4e8e\u663e\u793ad.data\u4e2d\u7684\u8ba1\u7b97\u6570\u636e\uff1b\u2461\u6a21\u578b\u53c2\u6570\uff0c\u7528\u4e8e\u663e\u793ad.mo\u4e2d\u7684\u53c2\u6570\u6570\u636e\uff1b\u2462\u8fc7\u7a0b\u66f2\u7ebf\uff0c\u7528\u4e8e\u663e\u793ad.status\u4e2d\u7684\u8bb0\u5f55\u6570\u636e\u3002\u5728\u540e\u5904\u7406\u7a97\u53e3\u4e2d\u8fd8\u53ef\u4ee5\u5b9e\u73b0GIF\u52a8\u753b\u5236\u4f5c\u3002 \u6750\u6599\u7a97\u53e3 \u5982\u4e0a\u5de6\u56fe\u6240\u793a\uff0c\u8be5\u7a97\u53e3\u7528\u4e8e\u67e5\u770b\u548c\u7f16\u8f91\u6750\u6599\u5b8f\u5fae\u89c2\u529b\u5b66\u53c2\u6570\u3002\u4f7f\u7528\u8005\u53ef\u65b0\u5efa\u6750\u6599\uff0c\u6216\u5bfc\u5165\u5df2\u6709\u7684<code>.txt</code>\u6216<code>.mat</code>\u6750\u6599\u6587\u4ef6\uff0c\u8fdb\u884c\u5b8f\u5fae\u89c2\u529b\u5b66\u53c2\u6570\u7684\u7f16\u8f91\u4e0e\u8f6c\u6362\u3002\u5728\u672c\u7a97\u53e3\u4e2d\uff0c\u5404\u6750\u6599\u4ee5\u5143\u80de\u6570\u7ec4\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u663e\u793a\u5728\u7a97\u53e3\u5de6\u4fa7\u7684\u5217\u8868\u4e2d\u3002\u5728\u5b8c\u6210\u7f16\u8f91\u540e\uff0c\u53ef\u5c06\u5217\u8868\u4e2d\u7684\u6750\u6599\u4ee5<code>.mat</code>\u6587\u4ef6\u7684\u5f62\u5f0f\u4fdd\u5b58\u4e0b\u6765\uff0c\u7528\u4e8e\u540e\u7eed\u6570\u503c\u6a21\u62df\u3002\u79bb\u6563\u5143\u5efa\u6a21\u7684\u76ee\u6807\u662f\u8981\u5728\u8ba1\u7b97\u673a\u4e2d\u5236\u9020\u51fa\u63a5\u8fd1\u771f\u5b9e\u5ca9\u571f\u4f53\u7ed3\u6784\u548c\u529b\u5b66\u6027\u8d28\u7684\u79bb\u6563\u5143\u5806\u79ef\u4f53\uff0c\u76f8\u5e94\u7684\u5355\u5143\u95f4\u63a5\u89e6\u6a21\u578b\u548c\u53c2\u6570\u9009\u53d6\u95ee\u9898\u4e00\u76f4\u662f\u56fd\u5185\u5916\u7814\u7a76\u7684\u70ed\u70b9\u548c\u96be\u70b9\u3002MatDEM1.65\u7248\u4e4b\u540e\uff0c\u63d0\u4f9b\u4e86\u7ebf\u5f39\u6027\u6a21\u578b\u7684\u81ea\u52a8\u8bad\u7ec3\u5e94\u7528\uff0c\u53ef\u4ee5\u663e\u8457\u5730\u964d\u4f4e\u5efa\u6a21\u7684\u96be\u5ea6\uff0c\u63d0\u9ad8\u5efa\u6a21\u7684\u6548\u7387\u3002\u76ee\u524d\uff0cMatDEM\u7684\u6750\u6599\u81ea\u52a8\u8bad\u7ec3\u4ec5\u9650\u4e8e\u7ebf\u5f39\u6027\u63a5\u89e6\u6a21\u578b\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u63a5\u89e6\u6a21\u578b\uff0c\u8fd8\u4e9f\u5f85\u6df1\u5165\u7814\u7a76\u3002 \u53d1\u5e03\u7a97\u53e3 MatDEM1.70\u5b9e\u73b0\u4e86\u5411\u6307\u5b9a\u7528\u6237\u6388\u6743\u4f7f\u7528app\u7684\u529f\u80fd\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u5229\u7528MatDEM\u8ba1\u7b97\u5e73\u53f0\u5c01\u88c5\u4e13\u4e1a\u79bb\u6563\u5143\u8f6f\u4ef6\uff0c\u5e76\u6388\u6743\u7ed9\u6307\u5b9a\u7528\u6237\u4f7f\u7528\uff0c\u5f62\u6210\u65b0\u7684\u77e5\u8bc6\u4ea7\u6743\u3002\u5f53\u70b9\u51fb\u542f\u52a8\u7a97\u53e3\u201c\u53d1\u5e03\u201d\u6309\u94ae\u540e\uff0c\u6253\u5f00\u201c\u53d1\u5e03\u201d\u7a97\u53e3\uff0c\u5176\u5de6\u4e0a\u89d2\u663e\u793a\u5f53\u524d\u8f6f\u4ef6\u7684\u7528\u6237\u7f16\u540d\u3002\u5c06\u4ed6\u4eba\u7684\u7528\u6237\u7f16\u53f7\u7c98\u8d34\u5230\u6b64\u5904\uff0c\u7136\u540e\u6253\u5f00\u9700\u8981\u6388\u6743\u7684\u4ee3\u7801\uff08\u5982App\uff0c\u51fd\u6570\u6216\u6d41\u7a0b\u4ee3\u7801\uff09\uff0c\u5728\u4e0b\u65b9\u8f93\u5165\u4f5c\u8005\u4fe1\u606f\u540e\uff0c\u4fdd\u5b58\u65b0\u7684\u4ee3\u7801\u6587\u4ef6\u5373\u53ef\u3002\u65b0\u7684\u4ee3\u7801\u4ec5\u5728\u6388\u6743\u7684\u7535\u8111\u8f6f\u4ef6\u4e2d\u624d\u80fd\u4f7f\u7528\uff0c\u5176\u5b83\u7535\u8111\u4e0a\u4f1a\u8df3\u51fa\u7248\u6743\u6240\u6709\u4fe1\u606f\u3002\u5f53\u9009\u4e2d<code>Public version (everyone can use it)</code>\u65f6\uff0c\u6253\u5305\u7684\u4ee3\u7801\u53ef\u4f9b\u6240\u6709\u4eba\u4f7f\u7528\u3002\u5173\u4e8e\u6d41\u7a0b\u4ee3\u7801\u7684\u6388\u6743\uff0c\u53ef\u89c1<code>user_Roller0SetParameters.m</code> \u5e94\u7528\u7f16\u8f91\u5668 MatDEM1.78\u589e\u52a0\u4e86\u5e94\u7528\u7f16\u8f91\u5668\uff0c\u53ef\u4ee5\u589e\u52a0\u5220\u9664\u5e94\u7528\u3002\u540c\u65f6\uff0c\u63d0\u4f9b\u4e86\u5728Matlab\u4e2d\u5229\u7528AppDesigner\u8bbe\u8ba1\u5e94\u7528\u754c\u9762\u548c\u8fdb\u884c\u8c03\u8bd5\u7684\u529f\u80fd\u3002\u6ce8\u610f\uff1a\u5728\u8fd0\u884cApp\u7684.m\u6587\u4ef6\u65f6\uff0c\u5982\u51fa\u73b0\u201c\u5b57\u7b26\u4e32\u5411\u91cf\u672a\u6b63\u5e38\u7ec8\u6b62\u201d\u7684\u9519\u8bef\uff0c\u9700\u8981\u7528\u8bb0\u4e8b\u672c\u6253\u5f00.m\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u5b58\u4e3aANSI\u7f16\u7801\uff0c\u5426\u5219\u4e0d\u652f\u6301\u4e2d\u6587\u3002 \u5e2e\u52a9\u7a97\u53e3 MatDEM\u8f6f\u4ef6\u7531\u5357\u4eac\u5927\u5b66\u5218\u6625\u535a\u58eb\u4ece\u96f6\u5f00\u59cb\u7814\u53d1\u3002\u4eceMatDEM1.60\u7248\u5f00\u59cb\uff0c\u7814\u7a76\u751f\u5218\u8f89\u548c\u4e50\u5929\u5448\u52a0\u5165\u4e86\u6e90\u4ee3\u7801\u7684\u5f00\u53d1\u3002\u6211\u4eec\u9f13\u52b1\u7528\u6237\u5171\u4eab\u60a8\u7684MatDEM\u5e94\u7528\u548c\u51fd\u6570\u3002\u5982\u679c\u60a8\u5bf9\u6df1\u5165\u548c\u5e7f\u6cdb\u7684\u5408\u4f5c\u611f\u5174\u8da3\uff0c\u8bf7\u90ae\u4ef6\u8054\u7cfb\u6211\u4eec\u3002\u4ea4\u6d41QQ\u7fa4\u4e3a668903775\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u4e3a\uff1a\u77e9\u9635\u79bb\u6563\u5143MatDEM"},{"location":"api/","title":"API","text":""},{"location":"api/#_1","title":"\u521d\u59cb\u5efa\u6a21\u7c7b","text":"<ul> <li><code>obj_Box</code>: \u521d\u59cb\u5efa\u6a21\u7684\u957f\u65b9\u5f62/\u4f53\u6a21\u62df\u7bb1\uff0c\u57fa\u4e8e\u6240\u6709\u4e8c\u6b21\u5f00\u53d1\u5747\u57fa\u4e8e\u6b64\u521d\u59cb\u5efa\u6a21</li> <li><code>Tool_Cut</code>: \u5b58\u50a8\u5c42\u9762\u4fe1\u606f\uff0c\u7528\u4e8e\u5207\u5272\u6a21\u578b\u548c/\u6216\u8bbe\u7f6e\u8282\u7406\u548c\u88c2\u9699 </li> </ul>"},{"location":"api/#_2","title":"\u5e38\u7528\u57fa\u7840\u7c7b","text":"<ul> <li><code>build</code>: \u6a21\u578b\u4ea4\u4e92\u7684\u4e3b\u8981\u5165\u53e3\u3002\u7528\u4e8e\u4fee\u6539\u6a21\u578b\uff0c\u6570\u636e\u4e2d\u8f6c\uff0c\u63a7\u5236\u8fed\u4ee3\u8fc7\u7a0b\u548c\u663e\u793a\u7ed3\u679c</li> <li><code>model</code>: \u79bb\u6563\u5143\u6c42\u89e3\u5668\uff0c\u5305\u542b\u90bb\u57df\u67e5\u627e\u3001\u8fed\u4ee3\u5e73\u8861\u548cGPU\u8bbe\u7f6e\u7b49</li> <li><code>childModel</code>: \u5b50\u6a21\u578b\u6c42\u89e3\u5668\uff0c\u7528\u4e8e\u5bbd\u7ea7\u914d\u6a21\u578b\u5206\u7ec4\u6c42\u89e3</li> <li><code>modelStatus</code>: \u8bb0\u5f55\u6a21\u62df\u8fc7\u7a0b\u4e2d\u7684\u5404\u7c7b\u6570\u636e\uff0c\u5982\u8fb9\u754c\u53d7\u529b\u3001\u80fd\u91cf\u8f6c\u5316\u7b49</li> <li><code>material</code>: \u8bb0\u5f55\u5355\u5143\u6750\u6599\u4fe1\u606f\uff0c\u5305\u62ec\u6750\u6599\u5b8f\u89c2\u529b\u5b66\u53c2\u6570\u548c\u5355\u5143\u5fae\u89c2\u529b\u5b66\u53c2\u6570</li> <li><code>pore</code>: \u4e8c\u7ef4\u5b54\u9699\u5bc6\u5ea6\u6d41\u6c42\u89e3\u5668\uff0cMatDEM\u6d41\u4f53\u8ba1\u7b97\u6a21\u5757 </li> </ul>"},{"location":"api/#_3","title":"\u5e38\u7528\u51fd\u6570\u96c6","text":"<ul> <li><code>mfs</code>: \u5e38\u7528\u51e0\u4f55\u5efa\u6a21\u51fd\u6570\u96c6\uff0c\u51e0\u4f55\u4f53\u7684\u521b\u5efa\u3001\u7ec4\u5408\u4e0e\u5207\u5272\u3001\u79fb\u52a8\u4e0e\u5bf9\u9f50\u7b49</li> <li><code>fs</code>: \u4f9b\u8c03\u7528\u7684\u5185\u90e8\u51fd\u6570\u96c6\uff0c\u5305\u62ec\u57fa\u672c\u7684\u77e9\u9635\u53d8\u6362\u3001\u53c2\u6570\u8ba1\u7b97\u548c\u57fa\u672c\u7ed8\u56fe\u51fd\u6570\u7b49</li> <li><code>f</code>: \u7528\u4e8e\u9ad8\u7ea7\u4e8c\u6b21\u5f00\u53d1\uff0c\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf\u3001\u8fd0\u884c\u81ea\u5b9a\u4e49\u51fd\u6570\u548c\u81ea\u5b9a\u4e49APP\u7b49 </li> </ul>"},{"location":"api/#_4","title":"\u6742\u9879","text":"<ul> <li><code>Miscellaneous</code>: \u4f7f\u7528\u8f83\u5c11\u7684\u7c7b\u4e0e\u51fd\u6570\u96c6\uff0c\u5305\u62ec<code>ContactModel, ufs, bfs</code>\u7b49</li> </ul> ContactModel <p>\u63a5\u89e6\u6a21\u578b\u51fd\u6570\u96c6</p> <p>\u79bb\u6563\u5143\u63a5\u89e6\u6a21\u578b\u548c\u5b8f\u5fae\u89c2\u5206\u6790\u662f\u79bb\u6563\u5143\u7814\u7a76\u548c\u5e94\u7528\u975e\u5e38\u91cd\u8981\u7684\u57fa\u7840\uff0c\u5176\u80fd\u4ece\u672c\u8d28\u4e0a\u63a2\u6c42\u5ca9\u571f\u6750\u6599\u590d\u6742\u5b8f\u89c2\u7279\u6027\u7684\u5fae\u7ec6\u89c2\u673a\u7406\u3002\u57fa\u4e8e\u5de5\u7a0b\u5c3a\u5ea6\u6570\u503c\u6a21\u62df\u7684\u8003\u8651\uff0cMatDEM\u4e00\u76f4\u91c7\u7528\u7ebf\u5f39\u6027\u7684\u7c98\u7ed3\u6a21\u578b\uff0c\u5e76\u63d0\u4f9bHertz\u63a5\u89e6\u6a21\u578b\u7528\u4e8e\u8f6f\u4ef6\u4e0e\u73bb\u7483\u73e0\u8bd5\u9a8c\u5bf9\u6bd4\u6d4b\u8bd5\u3002\u8fc7\u53bb\u4e00\u5e74\uff0cMatDEM\u56e2\u961f\u6536\u5230\u56fd\u5185\u5916\u5927\u91cf\u81ea\u5b9a\u4e49\u63a5\u89e6\u6a21\u578b\u7684\u9700\u6c42\u3002\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u8bbe\u8ba1\u548c\u7814\u53d1\uff0cMatDEM1.65\u7248\u63d0\u4f9b\u4e86\u81ea\u5b9a\u4e49\u63a5\u89e6\u6a21\u578b\u652f\u6301\u3002  \u4ee5\u4e0b\u547d\u4ee4\u5c06normalContact.m\u51fd\u6570\u8bbe\u5b9a\u4e3a\u8fed\u4ee3\u8ba1\u7b97\u51fd\u6570\uff0c\u5e76\u8fdb\u884c\u63a5\u89e6\u529b\u548c\u5355\u5143\u8fd0\u52a8\u8ba1\u7b97\uff08\u7ea6150\u884c\uff09\u3002 <code>d.mo.setBalanceFunction('fun/normalContact.m');</code> \u5177\u4f53\u8bf7\u89c1Box_Crash1\u793a\u4f8b\u3002</p> ufs \u7528\u6237\u754c\u9762\u51fd\u6570\u96c6\uff0c\u5305\u62ec\u754c\u9762\u663e\u793a\uff0cXML\u5904\u7406\uff0c\u63d0\u793a\u4fe1\u606f bfs \u57fa\u672c\u5355\u5143\u751f\u6210\u51fd\u6570\u96c6\uff0c\u751f\u6210\u57fa\u672c\u7684clump\u5355\u5143\uff0c\u6709\u5f85\u52a0\u5165\u65b0\u7684\u57fa\u672c\u5355\u5143 pfs \u5b54\u9699\u6a21\u62df\u51fd\u6570\u96c6\uff0c\u7528\u4e8e\u652f\u6301pore\u7c7b poreStatus \u5b54\u9699\u72b6\u6001\u7c7b\uff0c\u8bb0\u5f55<code>pore</code>\u7c7b\u7684\u4e2d\u95f4\u8fc7\u7a0b\uff0c\u4e8c\u8005\u7c7b\u4f3c<code>modelStatus</code>\u4e0e<code>model</code>\u7684\u5173\u7cfb WinAPP\u7c7b <p>\u5c01\u88c5\u7a97\u53e3\u5e94\u7528\u7c7b  </p> <p><code>f.runWinApp(path, isMenubar)</code> \u751f\u6210\u81ea\u5b9a\u4e49\u7a97\u53e3APP</p> Parameters <code>path</code>: app\u6587\u4ef6\u8def\u5f84 <code>isMenubar</code>: True | False, \u662f\u5426\u751f\u6210\u9ed8\u8ba4\u83dc\u5355\u680f"},{"location":"api/#api_1","title":"\u5e38\u7528api","text":"<code>d.balance</code> Syntax <ul> <li><code>d.balance()</code> \u5e73\u8861\u8fed\u4ee31\u6b21</li> <li><code>d.balance(balanceNum)</code> \u5e73\u8861\u8fed\u4ee3balanceNum\u6b21</li> <li><code>d.balance(balanceNum, balanceTime)</code> \u5e73\u8861\u8fed\u4ee3balanceNum*balanceTime\u6b21\uff0c\u6bcfbalanceNum\u8bb0\u5f55\u4e00\u6b21\u72b6\u6001</li> <li><code>d.balance('Standard')</code> \u8fdb\u884c\u4e00\u6b21\u7684\u6807\u51c6\u5e73\u8861\u8fed\u4ee3\uff0c\u5373d.balance(balanceNum,balanceTime); balanceNum\u8bb0\u5f55\u4e8ed.SET.StandardBalanceNum\uff0c\u9ed8\u8ba4\u4e3a50\uff0c\u65f6\u95f4\u6b65\u5927\u6982\u4e3a\u5468\u671f\u76841/50\uff0c50\u6b21\u8fed\u4ee3\u5b8c\u6210\u5355\u5143\u4e00\u4e2a\u632f\u52a8\u5468\u671f\u3002balanceTime=d.SET.packNum\uff0c\u5373\u6a21\u578b\u5728\u6700\u957f\u7ef4\u5ea6\u4e0a\u7684\u5806\u79ef\u5355\u5143\u6570\u3002\u4f7f\u7528d.balance('Standard')\uff0c\u53ef\u4fdd\u8bc1\u5f53\u5355\u5143\u7684\u76f4\u5f84\u53d8\u5316\u65f6\uff0c\u6a21\u62df\u5bf9\u5e94\u7684\u603b\u65f6\u95f4\u4e0d\u53d8\uff0c\u5177\u4f53\u89c1\u6559\u7a0b\u3002</li> <li><code>d.balance('Standard', 0.5)</code> \u8fdb\u884c0.5\u6b21\u6807\u51c6\u5e73\u8861\u8fed\u4ee3</li> <li><code>d.balance('Standard', 0.5, 'off')</code> \u8fdb\u884c0.5\u6b21\u6807\u51c6\u5e73\u8861\u8fed\u4ee3\uff0c\u4f46\u4e0d\u663e\u793a\u8fed\u4ee3\u8fc7\u7a0b\u63d0\u793a</li> </ul> <code>d.GROUP</code> d.GROUP\u4e2d\u8bb0\u5f55\u6a21\u578b\u4e2d\u6240\u6709\u7684\u7ec4\u4fe1\u606f\uff0c\u4e3b\u8981\u5305\u62ec\u4e09\u7c7b\uff1a  <ol> <li>\u8fb9\u754c\u7ec4\uff0c\u5373\u6a21\u578b\u9ed8\u8ba4\u4ea7\u751f\u7684\u516d\u4e2a\u8fb9\u754c\uff0clefB, rigB, froB, bacB, botB, topB\uff1b</li> <li>\u666e\u901a\u7ec4\uff0c\u5305\u62ec\u7cfb\u7edf\u81ea\u52a8\u5efa\u7acb\u7684\u516d\u4e2a\u538b\u529b\u677f\uff0clefPlaten\u7b49\uff0c\u4ee5\u53casample\u7ec4\uff0c\u5176\u5305\u62ec\u538b\u529b\u677f\u548c\u8fb9\u754c\u8303\u56f4\u5185\u7684\u6240\u6709\u6d3b\u52a8\u5355\u5143 \uff0c\u4ee5\u53ca\u7528\u6237\u901a\u8fc7d.addGroup\u547d\u4ee4\u81ea\u5b9a\u4e49\u7684\u7ec4\uff1b</li> <li>\u4ee5group\u5f00\u5934\u7684\u7ec4\u4fe1\u606f\uff0c\u5305\u62ecgroupId\uff1a\u8bb0\u5f55\u7ec4\u7684\u7f16\u53f7\uff1bgroupProtect\uff0c\u88ab\u4fdd\u62a4\u800c\u4e0d\u80fd\u88ab\u5220\u9664\u7ec4\u548c\u7ec4\u5185\u5355\u5143\u7684\u7ec4\u540d\uff1bgroupMat\uff0c\u8bb0\u5f55\u7ec4\u6240\u8981\u65bd\u52a0\u7684\u6750\u6599\u3002</li> </ol> <p>Note</p> <p>\u81ea\u5b9a\u4e49\u7ec4\u540d\u4e0d\u80fd\u4ee5'group'\u5f00\u5934\u3002</p> <code>d.data</code> \u5f53\u7a0b\u5e8f\u4e2d\u8fd0\u884c<code>d.show('Heat')</code>\u7b49\u547d\u4ee4\u65f6\uff0c\u4f1a\u5728data\u91cc\u67e5\u627e\u76f8\u5e94\u540d\u5b57\u7684\u6570\u7ec4\uff0c\u5982\u5b58\u5728Heat\u6570\u7ec4\uff0c\u5219\u663e\u793a\u51fa\u6765\u3002 \u53ef\u81ea\u884c\u6dfb\u52a0\u65b0\u7684\u6570\u7ec4\uff0c\u5982<code>d.data.diameter=d.mo.aR*2;d.show('diameter');</code>\u5219\u4f1a\u663e\u793a\u5355\u5143\u7684\u76f4\u5f84\u56fe <code>B.setPlatenStress</code> Syntax <ul> <li>setPlatenStress(stressType, value)</li> <li>setPlatenStress(stressType, value, border)</li> <li>setPlatenStress(StressXX, StressYY, StressZZ, border)</li> </ul> Parameters stressType: 'StressXX' | 'StressYY' | 'StressZZ' border:  \u57fa\u4e8eborder\u67e5\u627e\u79bbplaten\u4e00\u5b9a\u8ddd\u79bb\u7684\u8bd5\u6837\u5355\u5143\uff0c\u4ee5\u8be5\u90e8\u5206\u5355\u5143\u786e\u5b9a\u52a0\u8f7d\u8303\u56f4 <p>Note</p> <p>\u5728\u505a\u4e09\u8f74\u8bd5\u9a8c\u65f6\uff0c\u8003\u8651\u8bd5\u6837\u5728\u67d0\u4e00\u7ef4\u5ea6\u4e0a\u53ef\u80fd\u53d1\u751f\u81a8\u80c0\uff08\u5982\u65bd\u52a0\u62c9\u529b\uff09\uff0c\u4e3a\u9632\u6b62\u9897\u7c92\u6f0f\u51fa\uff0c\u9700\u8981\u5c06\u538b\u529b\u677f\u548c\u8fb9\u754c\u8bbe\u5927\u4e00\u4e9b\uff0c\u5373\u8bbe\u5b9aB.BexpandRate\u548cB.PexpandRate\uff0c\u53c2\u89c1user_3DJointStress1\u3002 \u56fe2\u4e3aB.BexpandRate=B.sampleW*0.1/B.ballR;B.PexpandRate=B.sampleW*0.1/B.ballR;\uff0c\u5c06\u8fb9\u754c\u548c\u677f\u5411\u5916\u589e\u52a010%\u3002\u4e3a\u9632\u6b62\u538b\u529b\u677f\u201c\u6ed1\u843d\u201d\uff0c\u5bf9\u9501\u5b9a\u538b\u529b\u677f\u7684\u56db\u5411\u8fb9\u754c\u5355\u5143\uff0c\u4f7f\u5176\u4ec5\u80fd\u5728\u538b\u529b\u677f\u6cd5\u5411\u4e0a\u8fd0\u52a8\uff0c\u56fe3\u7ea2\u8272\u4e3aX\u65b9\u5411\u81ea\u7531\u5ea6\u9501\u5b9a</p> <code>d.mo.setGPU</code> <code>'on'  | 'off' | 'auto' | 'fixed' | 'unfixed'</code> <p><code>p.show</code></p> <p><code>p.balance</code></p> <code>p.solutePara</code> Fields <ul> <li>Id: 1</li> <li>name: 'T'</li> <li>initialValue: 20</li> <li>p.SET.(['p', name])</li> <li>p.SET.(['cK', name])</li> </ul>"},{"location":"api/Tool_Cut/","title":"Tool_Cut","text":"<p>class Tool_Cut</p> Properties <p>d</p> <p>build\u5bf9\u8c61\uff0c\u5373d</p> <p>layerNum</p> <p>\u7528\u4e8e\u5207\u5272\u7684\u5c42\u9762\u6570</p> <p>TriangleX</p> <p>\u4e09\u89d2\u9762\u7684X\u5750\u6807\uff0c\u4e3an*3\u77e9\u9635\uff0c\u5355\u884c\u4e0a\u4e3a\u4e00\u4e2a\u4e09\u89d2\u5f62</p> <p>TriangleY</p> <p>\u4e09\u89d2\u9762\u7684Y\u5750\u6807\uff0c\u4e3an*3\u77e9\u9635\uff0c\u5355\u884c\u4e0a\u4e3a\u4e00\u4e2a\u4e09\u89d2\u5f62</p> <p>TriangleZ</p> <p>\u4e09\u89d2\u9762\u7684Z\u5750\u6807\uff0c\u4e3an*3\u77e9\u9635\uff0c\u5355\u884c\u4e0a\u4e3a\u4e00\u4e2a\u4e09\u89d2\u5f62</p> <p>SurfTri;</p> <p>Surf</p> <p>\u5c42\u9762\u6570\u636e</p> Methods <p>Tool_Cut(d)</p> <p>\u521d\u59cb\u5316\u5bf9\u8c61</p> <p>build\u5bf9\u8c61\uff0c\u5373d</p> <p>\u89c1user_BoxModel\u793a\u4f8b</p> <p>showSurf(varargin)</p> <p>\u663e\u793a\u5c42\u9762</p> <p>\u65e0\u8f93\u5165\u65f6\uff1a\u663e\u793a\u6240\u6709\u5c42\u9762\uff1b\u4e00\u4e2a\u8f93\u5165\u65f6\uff08\u77e9\u9635\uff09\uff1a\u663e\u793a\u6307\u5b9a\u7684\u5c42\u9762</p> <p>\u89c1user_BoxModel\u793a\u4f8b</p> <p>setLayer(gNameCells, surfIds)</p> <p>\u7528\u5c42\u9762\u6765\u5207\u5272\u6307\u5b9a\u7ec4</p> <p>gNameCells\u7ec4\u540d\uff0csurfIds\u5c42\u9762\u7684\u7f16\u53f7</p> <p>\u89c1user_BoxModel\u793a\u4f8b</p> <p>delSurf(surfIds)</p> <p>\u5220\u9664\u5c42\u9762</p> <p>surfIds\u5c42\u9762\u7684\u7f16\u53f7</p> <p>\u89c1user_BoxModel\u793a\u4f8b</p> <p>addSurf(para)</p> <p>\u6839\u636e\u79bb\u6563\u70b9\u7684\u5750\u6807\u751f\u6210\u5c42\u9762\uff08\u4e09\u89d2\u7f51\u683c\uff09\uff0c\u89c1Matlab\u547d\u4ee4scatteredInterpolant</p> <p>\u652f\u6301\u4e24\u79cd\u6570\u636e\u8f93\u5165\uff0c1\uff1a\u8f93\u5165\u5305\u62ecXYZ\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\uff1b2\uff1a\u8f93\u5165XYZ\u4fe1\u606f\u7684\u77e9\u9635[X,Y,Z]\uff0c\u6216\u8005[X,Y,Z,X,Y,Z...]\uff0c\u53ef\u4e3a\u4e8c\u7ef4\u6216\u4e09\u7ef4\u6570\u636e\u3002\u5982\u4e3a\u4e8c\u7ef4\u6570\u636e\uff0c\u9700\u5728XZ\u5e73\u9762\u4e0a\u3002</p> <p>\u89c1user_BoxModel\u793a\u4f8b</p> <p>setTriangle(PX,PY,PZ)</p> <p>\u5c06PX,PY,PZ\u8d4b\u5230\u5bf9\u8c61\u7684TriangleX,TriangleY,TriangleZ</p> <p>\u5750\u6807\u77e9\u9635</p> <p>\u89c1user_Box3DJointStress\u793a\u4f8b</p> <p>bondFilter=setBondByTriangle(type)</p> <p>\u5229\u7528TriangeX,Y,Z\u8bb0\u5f55\u7684\u4e09\u89d2\u5f62\u6765\u5207\u5272\u6216\u80f6\u7ed3\u8fde\u63a5</p> <p>type:'break','glue','none'</p> <p>\u89c1user_Box3DJointStress\u793a\u4f8b</p> <p>showTriangle()</p> <p>\u663e\u793aTriangleX,Y,Z\u4e2d\u7684\u4e09\u89d2\u5f62</p> <p>\u65e0</p> <p>\u89c1user_Box3DJointStress\u793a\u4f8b</p> <p>getTriangle(Id)</p> <p>\u5c06SurfTri\u4e2d\u7684\u4e09\u89d2\u9762\u8f6c\u5230TriangleX,TriangleY,TriangleZ\u4e2d</p> <p>Id:SurfTri\u7684Id</p> <p>\u89c1user_Box3DJointStress\u793a\u4f8b</p> <p>getSurfTri(Id,rate)</p> <p>\u6839\u636eSurf\u4e2d\u79bb\u6563\u70b9\u751f\u6210\u4e09\u89d2\u9762\u5e76\u8bb0\u5f55\u5728SurfTri\u4e2d</p> <p>Id:Surf\u7684Id;rate:\u539f\u59cb\u6570\u636e\u538b\u7f29\u6bd4\u7387\uff0c\u5927\u7b49\u4e8e1\uff0c\u5982\u539f\u59cb\u6570\u636e\u70b9\u592a\u591a\uff0c\u6bd4\u7387\u53ef\u4ee5\u53d6\u5927\u503c\uff0c\u59822\uff0c\u5219\u4ec5\u6709\u00bd\u7684\u6570\u636e\u4f1a\u7528\u6765\u751f\u6210\u4e09\u89d2\u9762</p> <p>\u89c1user_Box3DJointStress\u793a\u4f8b</p> <p>showSurfTri(Id)</p> <p>\u663e\u793aSurfTri\u4e2d\u7684\u4e09\u89d2\u9762</p> <p>Id:SurfTri\u7684Id</p> <p>\u89c1user_Box3DJointStress\u793a\u4f8b</p>"},{"location":"api/build/","title":"build","text":"build properties <ul> <li>name</li> <li>TAG</li> <li>SET</li> </ul> methods <ul> <li>balance</li> <li>setBuild</li> </ul> <p>class build</p> Properties <p>name</p> <p>\u6a21\u578b\u540d\u79f0</p> <p>\u5b57\u7b26\u4e32</p> <p>TAG</p> <p>\u6a21\u62df\u4fe1\u606f\u8bb0\u5f55\uff0c\u7528\u4e8e\u8bb0\u5f55\u548c\u8f93\u51fa\u4fe1\u606f</p> <p>TAG\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u53ef\u5229\u7528\u5176\u5b58\u50a8\u5404\u7c7b\u8f93\u51fa\u6570\u636e</p> <p>SET</p> <p>\u6a21\u62df\u8bbe\u7f6e\u4fe1\u606f\uff0c\u53ef\u8bb0\u5f55\u4e8c\u6b21\u5f00\u53d1\u65b0\u7684\u6570\u636e</p> <p>SET\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u53ef\u5229\u7528\u5176\u5b58\u50a8\u5404\u7c7b\u4e8c\u6b21\u5f00\u53d1\u6570\u636e</p> <p>PAR</p> <p>\u7528\u4e8e\u5e73\u884c\u8ba1\u7b97\u7684\u53c2\u6570</p> <p>\u5e73\u884c\u8ba1\u7b97\u672a\u542f\u7528</p> <p>GROUP</p> <p>\u7ec4\u4fe1\u606f\uff0c\u8be6\u89c1\u4e0b\u65b9\u8bf4\u660e</p> <p>\u8bb0\u5f55\u4e86\u5b9a\u4e49\u7684\u5404\u4e2a\u7ec4\uff0c\u7ec4\u540d\u4e0d\u80fd\u4ee5group\u5f00\u5934</p> <p>Loads</p> <p>\u8377\u8f7d\u4fe1\u606f</p> <p>\u672a\u542f\u7528\uff0c\u672a\u6765\u53ef\u80fd\u53bb\u9664</p> <p>isPar</p> <p>\u662f\u5426\u5e76\u884c\u8ba1\u7b97</p> <p>\u529f\u80fd\u672a\u542f\u7528</p> <p>is2D</p> <p>\u662f\u5426\u4e3a\u4e8c\u7ef4\u6a21\u578b</p> <p>\u9ed8\u8ba4\u4e3a0\uff0c\u8fdb\u884c\u4e09\u7ef4\u8ba1\u7b97</p> <p>data</p> <p>\u7ed3\u679c\u6570\u636e\u96c6</p> <p>\u90e8\u5206\u540e\u5904\u7406\u547d\u4ee4\u7684\u6570\u636e\u96c6\uff0c\u5982\u4f4d\u79fb\u573a\u3001\u5e94\u529b\u573a\uff08\u89c1\u53f3\u8bf4\u660e\uff09</p> <p>mo</p> <p>\u8ba1\u7b97\u6a21\u5757</p> <p>po</p> <p>\u5b54\u9699\u5bf9\u8c61\uff0c\u7528\u4e8e\u5b54\u9699\u6e17\u6d41\u548c\u6d41\u56fa\u8026\u5408\u8ba1\u7b97</p> <p>\u89c1PoreFlood\u7b49\u793a\u4f8b</p> <p>status</p> <p>\u6a21\u578b\u72b6\u6001</p> <p>Mats</p> <p>\u6750\u6599\u5143\u80de\u6570\u7ec4\uff08cell array\uff09</p> <p>\u6750\u6599\u7684\u5143\u80de\u6570\u7ec4\uff0cd.Mats{1}\u4e3a\u7b2c\u4e00\u4e2a\u6750\u6599</p> <p>vRate</p> <p>\u7c98\u6ede\u963b\u5c3c\u7cfb\u6570</p> <p>\u4e34\u754c\u963b\u5c3c\u6240\u8981\u4e58\u4ee5\u7684\u7cfb\u6570\uff0c\u89c1\u6587\u5b57\u6559\u7a0b\u4e2d\u963b\u5c3c\u7684\u8bf4\u660e</p> <p>g</p> <p>\u91cd\u529b\u7cfb\u6570</p> <p>\u9ed8\u8ba4\u4e3a-9.8</p> <p>module</p> <p>\u6b64\u6a21\u62df\u7684\u5efa\u6a21\u5668\uff0c\u5982obj_Box</p> <p>\u672a\u542f\u7528\uff0c\u672a\u6765\u53ef\u80fd\u53bb\u9664</p> <p>isUI</p> <p>\u662f\u5426\u5728\u7a97\u53e3\u7a0b\u5e8f\u4e2d\u8fd0\u884c\uff0c\u53d60\u65f6\uff0cshow\u547d\u4ee4\u5c06\u5728\u65b0\u7a97\u53e3\u753b\u56fe</p> <p>\u9ed8\u8ba4\u4e3a1</p> <p>edit_output</p> <p>\u63d0\u793a\u4fe1\u606f\u5bf9\u8c61</p> <p>\u7cfb\u7edf\u53c2\u6570\uff0c\u52ff\u4fee\u6539</p> <p>aNum*</p> <p>\u6a21\u578b\u5355\u5143\u548c\u56fa\u5b9a\u5899\u5355\u5143\u4e2a\u6570\u548c\uff08\u89c1\u4e0b\u65b9\u5177\u4f53\u8bf4\u660e\uff09</p> <p>mNum*</p> <p>\u6a21\u578b\u5355\u5143\u4e2a\u6570\uff08\u89c1\u4e0b\u65b9\u5177\u4f53\u8bf4\u660e\uff09</p> <p>aMatId</p> <p>\u5355\u5143\u7684\u6750\u6599\u7f16\u53f7</p> <p>aX</p> <p>\u6a21\u578b\u5355\u5143\u7684X\u8f74\u5750\u6807</p> <p>aY</p> <p>\u6a21\u578b\u5355\u5143\u7684Y\u8f74\u5750\u6807</p> <p>aZ</p> <p>\u6a21\u578b\u5355\u5143\u7684Z\u8f74\u5750\u6807</p> <p>aR</p> <p>\u6a21\u578b\u5355\u5143\u7684\u534a\u5f84</p> <p>aKN</p> <p>\u5355\u5143\u6b63\u5411\u52b2\u5ea6\u7cfb\u6570</p> <p>aKS</p> <p>\u5355\u5143\u5207\u5411\u52b2\u5ea6\u7cfb\u6570</p> <p>aBF</p> <p>\u5355\u5143\u65ad\u88c2\u529b</p> <p>aFS0</p> <p>\u5355\u5143\u521d\u59cb\u6297\u526a\u5f3a\u5ea6</p> <p>aMUp</p> <p>\u5355\u5143\u6469\u64e6\u7cfb\u6570</p> <p>isFluidVis</p> <p>\u4f5c\u7528\u5728\u5355\u5143\u4e0a\u662f\u5426\u4e3a\u6d41\u4f53\u7684\u963b\u5c3c\u8bbe\u5b9a\uff0c\u8fd0\u884cgroupMat2Model\u6216applyMaterial\u540e\uff0c\u8fd9\u4e00\u53c2\u6570\u4ea7\u751f\u6548\u679c\uff0c\u8fd9\u4e00\u8bbe\u5b9a\u589e\u52a0\u4e8e2.60\u7248</p> <p>\u4ee5\u843d\u4f53\u4e3a\u4f8b\uff0c\u5f53\u8bbe\u4e3a\u6d41\u4f53\u963b\u5c3c\u65f6\uff081\uff09\uff0c\u5355\u5143\u7684\u963b\u5c3c\u529b\u4e0e\u5355\u5143\u9762\u79ef\u6210\u6b63\u6bd4\uff0c\u90a3\u4e48\u5927\u7684\u9897\u7c92\u7684\u4e0b\u6c89\u901f\u5ea6\u8f83\u5feb\uff1b\u5f53\u8bbe\u4e3a\u56fa\u4f53\u963b\u5c3c\u65f6\uff080\uff09\uff0c\u963b\u5c3c\u529b\u4e0e\u5355\u5143\u4f53\u79ef\u6210\u6b63\u6bd4\uff0c\u5927\u9897\u7c92\u548c\u5c0f\u9897\u7c92\u7684\u4e0b\u6c89\u901f\u5ea6\u4e00\u81f4\uff0c\u7c7b\u4f3c\u4e8e\u7528\u4e00\u4e2a\u5927\u9897\u7c92\u4ee3\u8868\u76f8\u5e94\u7684\u5c0f\u9897\u7c92\u65f6\uff0c\u603b\u963b\u5c3c\u4e5f\u662f\u4e0e\u4f53\u79ef\u6210\u6b63\u6bd4</p> <p>mVis</p> <p>\u5355\u5143\u7c98\u6ede\u963b\u5c3c\u7cfb\u6570</p> <p>mM</p> <p>\u5355\u5143\u8d28\u91cf</p> <p>period</p> <p>\u4e00\u4e2a\u5355\u5143\u56fa\u5b9a\u5728\u5899\u4e0a\u65f6\u7684\u7b80\u8c10\u632f\u52a8\u5468\u671f</p> <p>dbXYZ</p> <p>\u5355\u5143\u5728newStep\u51fd\u6570\u4e2d\u7684\u8fb9\u754c\u4f4d\u79fb</p> <p>bIndex</p> <p>\u8fb9\u754c\u5355\u5143\u4fe1\u606f\uff0c\u529f\u80fd\u88ab\u53d6\u4ee3\uff0c\u672a\u6765\u5c06\u53d6\u6d88</p> <p>saveHour</p> <p>\u4fdd\u5b58\u6570\u636e\u6587\u4ef6\u95f4\u9694\u65f6\u95f4</p> <p>step</p> <p>\u5f53\u524d\u6a21\u62df\u6b65\uff0c\u7528\u4e8e\u8fed\u4ee3\u8ba1\u7b97\uff0c\u89c1\u793a\u4f8b</p> <p>totalStep</p> <p>\u603b\u6a21\u62df\u6b65</p> <p>isNote</p> <p>\u662f\u5426\u663e\u793a\u6a21\u62df\u63d0\u793a</p> <p>0\uff0c1</p> <p>note</p> <p>\u63d0\u793a\u5185\u5bb9</p> <p>figureNumber</p> <p>\u7ed8\u56fe\u7684\u7a97\u53e3\u53f7\uff0c\u53ef\u6307\u5b9a\u5728\u67d0\u4e00\u7a97\u53e3\u7ed8\u56fe</p> <p>\u89c1Roller3\uff0cPoreFlood3\u7b49\u793a\u4f8b</p> <p>Rrate</p> <p>\u663e\u793a\u5355\u5143\u7684\u534a\u5f84\u7cfb\u6570</p> <p>\u53d60.5\u53ef\u770b\u5728\u5185\u90e8\u9897\u7c92\uff0c\u9ed8\u8ba4\u4e3a1</p> <p>showB</p> <p>\u663e\u793a\u8fb9\u754c\u65b9\u5f0f</p> <p>\u53ef\u4e3a0\uff0c1\uff0c2\uff0c3\uff0c\u5177\u4f53\u89c1\u540e\u5904\u7406</p> <p>showBallLimit</p> <p>\u5927\u4e8e\u6b64\u503c\u65f6\uff0c\u5355\u5143\u663e\u793a\u4e3a\u70b9</p> <p>\u9ed8\u8ba4\u4e3a\u4e00\u5343\u4e07</p> Methods <p>addTimeProp(gName, type, Ts, Vs)</p> <p>\u8bbe\u7f6e\u6307\u5b9a\u7ec4\u7684\u5c5e\u6027\u968f\u65f6\u95f4\u7684\u53d8\u5316\uff0c\u53ef\u7528\u4e8e\u4ea7\u751f\u632f\u52a8\u3002\u8bbe\u7f6e\u4fe1\u606f\u8bb0\u5f55\u4e8ed.mo.SET.PROP</p> <p>gName:\u7ec4\u540d\uff1btype:\u5c5e\u6027\u540d\uff1bTs:\u65f6\u95f4\uff1bVs\uff1a\u65f6\u95f4\u5bf9\u5e94\u7684\u503c</p> <p>\u65e0</p> <p>\u89c1user_LineModel</p> <p>removeTimeProp(gName, type)</p> <p>\u5220\u9664\u6307\u5b9a\u7ec4\u7684\u5c5e\u6027\u968f\u65f6\u95f4\u7684\u53d8\u5316</p> <p>gName:\u7ec4\u540d\uff1btype:\u5c5e\u6027\u540d\uff1b</p> <p>\u65e0</p> <p>\u89c1user_LineModel</p> <p>addRecordProp(gName, type)</p> <p>\u8bbe\u7f6e\u8981\u5728\u8fd0\u884cd.recordStatus\u65f6\uff0c\u8bb0\u5f55\u6307\u5b9a\u7ec4\u7684\u5c5e\u6027\u5e73\u5747\u503c\uff0c\u8bbe\u7f6e\u4fe1\u606f\u8bb0\u5f55\u4e8ed.status.SET.PROP\u3002\u4ec5\u9650\u4e8e\u8bb0\u5f55d.mo\u4e2d\u7684\u5355\u5143\u5c5e\u6027\uff0c\u5176\u5b83\u5c5e\u6027\u53ef\u4f7f\u7528d.status.recordCommand\u6765\u8bbe\u7f6e\u548c\u4f7f\u7528\uff0c\u5177\u4f53\u89c1LineModel\u793a\u4f8b</p> <p>gName:\u7ec4\u540d\uff1btype:\u5c5e\u6027\u540d\uff1b</p> <p>\u65e0</p> <p>\u89c1user_LineModel</p> <p>removeRecordProp(gName, type)</p> <p>\u5220\u9664\u6307\u5b9a\u7ec4\u7684\u5c5e\u6027\u8bb0\u5f55</p> <p>gName:\u7ec4\u540d\uff1btype:\u5c5e\u6027\u540d\uff1b</p> <p>\u65e0</p> <p>\u89c1user_LineModel</p> <p>addElement(matId, addObj, varargin)</p> <p>\u5229\u7528\u7ed3\u6784\u4f53\uff08.X,.Y,.Z,.R\u4fe1\u606f\uff09\u589e\u52a0\u5355\u5143\uff0c\u589e\u52a0\u5355\u5143\u540e\u4f1a\u81ea\u52a8\u8fd0\u884cd.setStandarddT\u5c06\u65f6\u95f4\u6b65\u8bbe\u4e3a\u6807\u51c6\u503c</p> <p>\u6750\u6599\u53f7\uff0c\u7ed3\u6784\u4f53\u6216\u591a\u4e2a\u7ed3\u6784\u4f53\u7684cell\u6570\u7ec4\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u53ef\u9009\uff0c\u4e3a\u5355\u5143\u7c7b\u578b\uff0c\u53d6\"model\"\uff08\u6d3b\u52a8\u5355\u5143\uff09,\"wall\"\uff08\u56fa\u5b9a\u5355\u5143)\uff0c\u9ed8\u8ba4\u4e3a\"model\"</p> <p>[sphere1Id,sphere2Id,boxId]=d.addElement(1,{sphereObj,sphereObj2,boxObj});</p> <p>addFixId(direction, gId)</p> <p>\u589e\u52a0\u8981\u9501\u5b9a\u81ea\u7531\u5ea6\u7684\u5355\u5143\uff08\u9501\u5b9a\u5750\u6807\uff09</p> <p>\u9501\u5b9a\u7684\u65b9\u5411\uff08'X','Y','Z'\uff0c\u5176\u4e09\u4e2a\u65b9\u5411\u7684\u7ec4\u5408)\uff1bgId:\u5355\u5143\u7f16\u53f7\u6570\u7ec4</p> <p>\u6b64\u7ef4\u5ea6\u4e0a\u65b0\u9501\u5b9a\u7f16\u53f7newFixId</p> <p>d.addFixId('X',2);\u9501\u5b9a\u7b2c\u4e8c\u4e2a\u5355\u5143\u7684x\u5750\u6807\uff0cd.addFixId('XYZ',2);\u9501\u5b9a\u7b2c\u4e8c\u4e2a\u5355\u5143\u7684xyz\u5750\u6807</p> <p>addGroup(gName,gId,varargin)</p> <p>\u5728\u5f53\u524d\u6a21\u578b\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7ec4\uff0cd.addGroup(gName,gId,matId);</p> <p>gName:\u7ec4\u540d\uff1bgId:\u5355\u5143\u7f16\u53f7\u6570\u7ec4; matId\uff1a\u6750\u6599\u53f7\u3002\u53ef\u4e3a2\u62163\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u5f53\u8f93\u5165\u53c2\u6570\u4e3a2\u4e2a\u65f6\uff0c\u6750\u6599\u53f7\u9ed8\u8ba4\u4e3a1\uff0c\u53ef\u91c7\u7528d.setGroupMat\u6765\u4fee\u6539\u7ec4\u7684\u6750\u6599</p> <p>\u65e0</p> <p>d.addGroup(gName,gId);</p> <p>addMaterial(newMat)</p> <p>\u589e\u52a0\u4e00\u4e2a\u65b0\u6750\u6599\u5230d.Mats\u4e2d</p> <p>newMat:\u6750\u6599\u5bf9\u8c61</p> <p>\u65e0</p> <p>balance(varargin)</p> <p>\u6700\u91cd\u8981\u7684\u5e73\u8861\u8fed\u4ee3\u51fd\u6570\uff0c\u89c1\u4e0b\u65b9\u8bf4\u660e</p> <p>\u591a\u4e2a\u8f93\u5165\u53c2\u6570</p> <p>\u65e0</p> <p>balanceBondedModel(varargin)</p> <p>\u8d4b\u6750\u6599\u540e\uff0c\u81ea\u52a8\u80f6\u7ed3\u548c\u5e73\u8861\u6a21\u578b\uff0c\u6709\u5355\u5143\u95f4\u6469\u64e6\u529b\u3002\u539f\u59cb\u677e\u6563\u65e0\u7c98\u7ed3\u7684\u5806\u79ef\u4f53\u5c06\u88ab\u7c98\u7ed3</p> <p>\u8f93\u5165\u53c2\u6570\u4e3a\u6807\u51c6\u5e73\u8861\u6b21\u6570\uff0c\u4e3a\u7a7a\u65f6\u5219\u53d61</p> <p>\u65e0</p> <p>\u53c2\u8003BoxModel\u7b49\u793a\u4f8b\u7684\u7b2c\u4e8c\u6b65</p> <p>balanceBondedModel0(varargin)</p> <p>\u8d4b\u6750\u6599\u540e\uff0c\u81ea\u52a8\u80f6\u7ed3\u548c\u5e73\u8861\u6a21\u578b\uff0c\u65e0\u5355\u5143\u95f4\u6469\u64e6\u529b\u3002\u539f\u59cb\u677e\u6563\u65e0\u7c98\u7ed3\u7684\u5806\u79ef\u4f53\u5c06\u88ab\u7c98\u7ed3</p> <p>\u8f93\u5165\u53c2\u6570\u4e3a\u6807\u51c6\u5e73\u8861\u6b21\u6570\uff0c\u4e3a\u7a7a\u65f6\u5219\u53d61</p> <p>\u65e0</p> <p>\u53c2\u8003BoxModel\u7b49\u793a\u4f8b\u7684\u7b2c\u4e8c\u6b65</p> <p>balanceForce(Amax, num)</p> <p>\u5e73\u8861\u6a21\u578b\u4e2d\u7684\u529b</p> <p>Amax:\u76ee\u6807\u6700\u5927\u52a0\u901f\u5ea6\uff0cnum:\u5e73\u8861\u6b65\u6b21</p> <p>\u65e0</p> <p>breakGroup(varargin)</p> <p>\u65ad\u5f00\u6307\u5b9a\u7ec4\u5185\u8fde\u63a5\u6216\u4e24\u4e2a\u7ec4\u95f4\u7684\u8fde\u63a5</p> <p>\u65e0\u8f93\u5165\u53c2\u6570\u65f6\uff0cd.breakGroup()\uff0c\u65ad\u5f00\u6240\u6709\u5355\u5143\u7684\u8fde\u63a5\uff1b\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u65f6\uff0cd.breakGroup('group1')\u5219\u65ad\u5f00\u8fd9\u4e2a\u7ec4\u7684\u7ec4\u5185\u8fde\u63a5\uff0c\u5982\u8f93\u5165\u7684\u662f\u5143\u80de\u77e9\u9635\uff0cd.breakGroup({'group1','group2'})\uff0c\u5219\u65ad\u5f00\u8fd9\u4e9b\u7ec4\u7684\u7ec4\u5185\u8fde\u63a5\uff1b\u5982\u8f93\u5165\u4e8c\u4e2a\u53c2\u6570\u65f6\uff0cd.breakGroup('group1','group2')\u65ad\u5f00\u8fd9\u4e24\u4e2a\u7ec4\u4e4b\u95f4\u7684\u8fde\u63a5</p> <p>nBreakFilter</p> <p>d.breakGroup('sample');</p> <p>breakGroupOuter(varargin)</p> <p>\u65ad\u5f00\u6307\u5b9a\u7ec4\u5411\u5916\u7684\u8fde\u63a5</p> <p>\u65e0\u8f93\u5165\u7ec4\u540d\u65f6\uff0c\u65ad\u5f00\u6240\u6709\u7ec4\u5916\u8fde\u63a5\uff1b\u8f93\u5165\u4e00\u4e2a\u7ec4\u540d\u65f6\uff0c\u65ad\u5f00\u8fd9\u4e2a\u7ec4\u7684\u7ec4\u5916\u8fde\u63a5\uff1b</p> <p>nBreakFilter</p> <p>calculateData()</p> <p>\u8ba1\u7b97\u5f97\u5230\u975e\u72ec\u7acb\u6027\u6570\u636e\uff0c\u5728\u52a0\u8f7d\u6570\u636e\u540e\u4f7f\u7528</p> <p>\u65e0</p> <p>\u65e0</p> <p>clearData(varargin)</p> <p>\u6e05\u7406\u975e\u72ec\u7acb\u6027\u7684\u6570\u636e\uff0c\u4f7f\u4fdd\u5b58\u7684\u6570\u636e\u6587\u4ef6\u8f83\u5c0f</p> <p>level\uff0c\u901a\u5e38\u53d61\uff0c\u53d62\u65f6\u4f1a\u5c06GROUP\u4fe1\u606f\u6e05\u9664</p> <p>\u65e0</p> <p>connectGroup(varargin)</p> <p>\u80f6\u7ed3\u6307\u5b9a\u7ec4\u5185\u8fde\u63a5\u6216\u4e24\u4e2a\u7ec4\u95f4\u8fde\u63a5</p> <p>\u65e0\u8f93\u5165\u53c2\u6570\u65f6\uff0cd.connectGroup()\uff0c\u80f6\u7ed3\u6240\u6709\u8fde\u63a5\uff1b\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u65f6\uff0cd.connectGroup('group')\uff0c\u80f6\u7ed3\u8fd9\u4e2a\u7ec4\u7684\u7ec4\u5185\u8fde\u63a5\uff1b\u4e8c\u4e2a\u8f93\u5165\u53c2\u6570\u65f6\uff0cd.connectGroup('group1','group2')\u80f6\u7ed3\u4e24\u4e2a\u7ec4\u4e4b\u95f4\u7684\u8fde\u63a5</p> <p>nConnectFilter</p> <p>d.connectGroup('sample');</p> <p>connectGroupOuter(gName)</p> <p>\u80f6\u7ed3\u6307\u5b9a\u7ec4\u5411\u5916\u7684\u8fde\u63a5</p> <p>gName\u7ec4\u540d\uff08d.GROUP\u4e2d\u7684\u7ec4\u540d\uff09</p> <p>nConnectFilter</p> <p>defineModelElement(gName)</p> <p>\u5c06\u6307\u5b9a\u7ec4\u7684\u5355\u5143\u91cd\u5b9a\u4e49\u4e3a\u666e\u901a\u6a21\u578b\u5355\u5143\uff08\u53ef\u6d3b\u52a8\uff09</p> <p>gName\u7ec4\u540d\uff08d.GROUP\u4e2d\u7684\u7ec4\u540d\uff09</p> <p>\u65e0</p> <p>\u89c1Box_3DSlope\u793a\u4f8b</p> <p>defineWallElement(gName)</p> <p>\u5c06\u6307\u5b9a\u7ec4\u7684\u5355\u5143\u91cd\u5b9a\u4e49\u4e3a\u5899\u5355\u5143\uff08\u56fa\u5b9a\uff09</p> <p>gName\u7ec4\u540d\uff08d.GROUP\u4e2d\u7684\u7ec4\u540d\uff09</p> <p>\u65e0</p> <p>\u89c1Box_3DSlope\u793a\u4f8b</p> <p>delElement(delId)</p> <p>\u5220\u9664\u6307\u5b9a\u7684\u5355\u5143\uff082.5\u7248\u672c\u540e\u53d6\u6d88d.mo.isShear\u81ea\u52a8\u8bbe\u4e3a1\uff0c\u4fdd\u6301\u539f\u6765isShear\uff09\u3002\u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u8ba1\u7b97\u8f83\u590d\u6742\uff0c\u4ec5\u5728\u5efa\u6a21\u65f6\u4f7f\u7528\uff0c\u5728\u8fed\u4ee3\u8ba1\u7b97\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528killElement\u6765\u6d88\u9664\u5355\u5143\u7684\u4f5c\u7528</p> <p>delId (double array):\u8981\u5220\u9664\u5355\u5143\u7684\u7f16\u53f7\u6570\u7ec4</p> <p>\u65e0</p> <p>deleteConnection(type)</p> <p>\u5220\u9664\u80f6\u7ed3</p> <p>type:\u7c7b\u578b\uff0c\u53ef\u53d6'boundary'</p> <p>\u65e0</p> <p>d.deleteConnection('boundary');%delete the connection of boundary</p> <p>delGroup(gNames)</p> <p>\u5220\u9664\u6307\u5b9a\u7684\u540d\u79f0\u7684\u7ec4\uff08\u4e0d\u4f1a\u5220\u9664\u5355\u5143\uff09</p> <p>gNames (cell array):</p> <p>\u65e0</p> <p>dispNote(note)</p> <p>\u5728\u4e3b\u7a97\u53e3\u4e2d\u663e\u793a\u63d0\u793a\u4fe1\u606f</p> <p>note:\u63d0\u793a\u4fe1\u606f\u5b57\u7b26\u4e32</p> <p>\u65e0</p> <p>findNearestId(x,y,z)</p> <p>\u627e\u51fa\u79bb\u6307\u5b9a\u70b9\u6700\u8fd1\u7684\u5355\u5143\u7f16\u53f7</p> <p>x,y,z\u5355\u5143\u7684\u5750\u6807</p> <p>\u5355\u5143\u7f16\u53f7</p> <p>getGroupForce(gName,gName2)</p> <p>1\u4e2a\u8f93\u5165\u65f6\uff0c\u83b7\u5f97\u7ec4\u53d7\u5176\u5b83\u5355\u5143\u7684\u603b\u529b\uff1b2\u4e2a\u8f93\u5165\u65f6\uff0c\u83b7\u5f97\u7ec4\u53d7\u53e6\u4e00\u4e2a\u7ec4\u7684\u603b\u529b</p> <p>gName\uff1a\u9700\u8981\u8ba1\u7b97\u53d7\u529b\u7684\u7ec4\u540d\uff1bgName2\uff08\u53ef\u9009\uff09\uff0c</p> <p>GForce\uff1a\u7ec4gName\u7684\u53d7\u529b\u7ed3\u6784\u4f53</p> <p>getGroupId(gName)</p> <p>\u83b7\u53d6\u7ed9\u5b9a\u7ec4\u7684\u5355\u5143\u7f16\u53f7</p> <p>gName (String):\u7ec4\u540d</p> <p>\u65e0</p> <p>getMatIdByName(matName)</p> <p>\u6839\u636e\u6750\u6599\u540d\u83b7\u53d6\u8be5\u6750\u6599\u7684Id</p> <p>matName (String):\u6750\u6599\u540d</p> <p>matId (double)\uff1a\u6750\u6599Id</p> <p>group2Obj(gNames)</p> <p>\u5c06\u7ec4\u7684\u5750\u6807\u4fe1\u606f\u8f6c\u5316\u4e3aObj\u7ed3\u6784\u4f53</p> <p>\u7ec4\u540d\uff08\u53ef\u7528cell\u77e9\u9635\u8f93\u5165\u591a\u4e2a\u7ec4\uff0c\u5982gNames={'sample','topPlaten'};</p> <p>\u89c1SlopeNet\u793a\u4f8b</p> <p>groupMat2Model(varargin)</p> <p>\u5c06\u7ed9\u5b9a\u7ec4\u7684\u6750\u6599\u8bbe\u7f6e\u5230\u6a21\u578b\u4e2d</p> <p>gNames (cell array):</p> <p>\u65e0</p> <p>killElement(killedId)</p> <p>\u5c06\u6307\u5b9a\u5355\u5143\u201c\u6740\u6b7b\u201c\uff1a\u9501\u5b9a\u5355\u5143\u5750\u6807\uff0c\u5c06\u5176\u521a\u5ea6\u548c\u534a\u5f84\u8bbe\u4e3a\u6781\u5c0f\u503c </p> <p>killedId\uff1a\u5355\u5143\u7684\u7f16\u53f7\u6570\u7ec4</p> <p>\u65e0</p> <p>\u89c1user_BoxCrash2Drill</p> <p>makeModelByGroups(gNames)</p> <p>\u5229\u7528\u7ed9\u5b9a\u7684\u7ec4\u5efa\u7acb\u65b0\u6a21\u578b</p> <p>gNames (cell array):</p> <p>\u63d0\u793a\uff0c0\uff1a1\uff1a\u5b8c\u6210\u65b0\u6a21\u578b\uff1b2\uff1a\u4e0d\u53ef\u5220\u9664\u5168\u90e8\u5355\u5143\uff1b</p> <p>minusGroup(gNames1, gNames2, varargin)</p> <p>\u7ec4\u76f8\u51cf\uff0cgNames1\u4e2d\u7684\u7ec4\u51cf\u53bbgNames2\u4e2d\u7684\u7ec4</p> <p>\u7ec41\uff08\u53ef\u4e3acell\u77e9\u9635\uff09\uff0c\u7ec42\uff0c\u7ec42\u81a8\u80c0\u7387\u3002\u6ce8\u610fminiusGroup\u540e\u901a\u5e38\u9700\u8981\u8fd0\u884cbalanceBondedModel\u6216gravitySediment\u4f7f\u65b0\u52a0\u7684\u7269\u4f53\u548c\u539f\u6709\u7684\u5355\u5143\u7d27\u5bc6\u8d34\u5408</p> <p>\u65e0</p> <p>\u53c2\u89c1pile\u793a\u4f8b</p> <p>moveBoundary(type, dx, dy, dz)</p> <p>\u79fb\u52a8\u8fb9\u754c\uff08\u4f7f\u7528moveGroup\u547d\u4ee4\uff09</p> <p>type:\u7c7b\u578b\uff0c\u53ef\u53d6\u2018left\u2019'right''front''back''bottom''top'</p> <p>\u65e0</p> <p>moveGroup(gName, dX, dY, dZ, varargin)</p> <p>\u79fb\u52a8\u7ec4\u7684\u5355\u5143</p> <p>[\u7ec4\u540d\uff0cx\u4f4d\u79fb\uff0cy\u4f4d\u79fb\uff0cz\u4f4d\u79fb\uff0c\u53ef\u9009\u53c2\u6570]\uff0c\u53ef\u9009\u53c2\u6570\u4e3a'mo'\u65f6\uff0c\u5c06\u53ea\u79fb\u52a8d.mo\uff0c\u800cd\u4e0d\u79fb\u52a8\uff08\u901a\u5e38\u7528\u4e8e\u6a21\u62df\u65f6\uff09\uff0c\u65e0\u53ef\u9009\u53c2\u6570\u65f6\uff0c\u5c06\u79fb\u52a8d\u548cd.mo\uff08\u901a\u5e38\u7528\u4e8e\u524d\u5904\u7406\u5efa\u6a21\u65f6\uff09</p> <p>protectGroup(gName,type)</p> <p>\u5c06\u7ec4\u58f0\u660e\u4e3a\u4fdd\u62a4\uff0c\u5373\u8bb0\u5f55\u4e8ed.GROUP.groupProtect</p> <p>gName\u7ec4\u540d\uff1btype\u53ef\u53d6'on'\u6216'off'\uff0c\u6253\u5f00\u6216\u5173\u95ed\u4fdd\u62a4</p> <p>\u65e0</p> <p>\u89c1Box_3DSlope\u793a\u4f8b</p> <p>recordStatus()</p> <p>\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\u4e8ed.status\u4e2d</p> <p>\u65e0</p> <p>\u65e0</p> <p>removeFixId(direction, Id)</p> <p>\u5220\u9664\u5355\u5143\u7684\u81ea\u7531\u5ea6\u9501\u5b9a</p> <p>\u5220\u9664\u9501\u5b9a\u7684\u65b9\u5411\uff08'X','Y','Z')\uff0c</p> <p>\u65e0</p> <p>\u6d89\u53cad.mo\u4e2d\u7684\u53c2\u6570FixXId;FixYId;FixZId;</p> <p>removeGroupForce(G1_gId, G2_gId)</p> <p>\u5ffd\u7565\u4e24\u4e2a\u7ec4\u95f4\u7684\u6240\u6709\u4f5c\u7528\u529b\uff0c\u6570\u636e\u88ab\u4fdd\u5b58\u5728d.mo.SET.groupPair\u4e2d\uff0c\u5f53\u5176\u4e2d\u7684G1_gId\u6216G2_gId\u4e3a\u7a7a\u65f6\uff0c\u4f1a\u5728\u4e0b\u4e00\u6b21\u8fd0\u884csetNearbyBall\u65f6\u88ab\u81ea\u52a8\u5220\u9664</p> <p>G1, G2\u53ef\u4ee5\u4e3a\u7ec4\u540d(String)\u6216\u7ec4Id\u6570\u7ec4</p> <p>\u65e0</p> <p>removePrestress(rate,gName)</p> <p>\u5c06\u5355\u5143\u7684\u6297\u62c9\u529b\u4e34\u65f6\u51cf\u5c0f\uff0c\u65ad\u5f00\u80f6\u7ed3\uff0c\u6d88\u9664\u5355\u5143\u95f4\u7684\u5f20\u529b\uff08\u9884\u5e94\u529b\uff09</p> <p>rate:\u5f20\u529b\u53d8\u5316\u6bd4\u7387\uff1bgName:\u6d88\u9664\u9884\u5e94\u529b\u7684\u7ec4\u540d\u3002\u53ef\u8f93\u51650\u52302\u4e2a\u53c2\u6570\uff0crate\u9ed8\u8ba4\u503c\u4e3a0\uff0c\u65e0gName\u8f93\u5165\u65f6\uff0c\u5219\u5bf9\u5168\u90e8\u5355\u5143\u6d88\u9664\u9884\u5e94\u529b</p> <p>\u65e0</p> <p>1.92\u7248\u589e\u52a0</p> <p>resetStatus()</p> <p>\u91cd\u8bbed.status\u6574\u4e2a\u5bf9\u8c61\uff0c\u5305\u62ec\u6570\u636e\u548c\u66f2\u7ebf</p> <p>\u65e0</p> <p>\u65e0</p> <p>\u793a\u4f8b\u4e2d\u6709\u8f83\u591a\u5e94\u7528</p> <p>rotateGroup(gName, type, angle, varargin)</p> <p>\u65cb\u8f6c\u6307\u5b9a\u7ec4\u7684\u5355\u5143</p> <p>[\u7ec4\u540d\uff0c\u65cb\u8f6c\u7684\u5e73\u9762\uff08\u53d6'XY','YZ','XZ'\uff09\uff0c\u65cb\u8f6c\u89d2\u5ea6\uff0c\u53ef\u9009\u53c2\u6570]\uff0c\u53ef\u9009\u53c2\u6570\u4e3a\u7a7a\u65f6\uff0c\u8ba1\u7b97\u7ec4\u7684\u4e2d\u5fc3\uff0c\u5e76\u4ee5\u4e2d\u5fc3\u65cb\u8f6c\u3002\u53ef\u9009\u53c2\u6570\u4e3ax,y,z\u65f6\uff0c\u5219\u6309x,y,z\u4e3a\u4e2d\u5fc3\u65cb\u8f6c</p> <p>setClump(varargin)</p> <p>\u8bbe\u7f6e\u7ec4\u4e3aclump\uff0c\u5e76\u6e05\u9664\u7ec4\u5185\u529b</p> <p>\u8f93\u5165\u8981\u505a\u6210clump\u7684\u7ec4\u540d\uff0c\u5f53\u8f93\u5165\u4e3a\u7a7a\u65f6\uff0c\u5219\u5c06\u6240\u6709\u7ec4\u7f16\u53f7\u5c0f\u4e8e-10\u7684\u5355\u5143\u8f6c\u6210clump\uff08\u7528\u4e8e\u5904\u7406B.isClump=1\uff09\u3002\u4e5f\u53ef\u76f4\u63a5\u8f93\u5165\u8981\u505aclump\u7684\u5355\u5143\u7f16\u53f7\u6570\u7ec4</p> <p>\u65e0</p> <p>setGroupId()</p> <p>\u6839\u636e\u4e0d\u540c\u7ec4\u5bf9d.GROUP.groupId\u8bbe\u7f6e\u5355\u5143\u7ec4\u7f16\u53f7\uff0c\u540e\u7eed\u7528d.show('groupId')\u6765\u663e\u793a\u4e0d\u540c\u7ec4\u3002\u7531\u4e8e\u4e00\u4e2a\u5355\u5143\u53ef\u80fd\u5c5e\u4e8e\u591a\u4e2a\u7ec4\uff0c\u6709\u65f6\u9700\u8981\u624b\u52a8\u64cd\u4f5cd.data.groupId\u6570\u7ec4</p> <p>\u65e0</p> <p>\u65e0</p> <p>setGroupMat(gName, matName)</p> <p>\u58f0\u660e\u7ec4\u7684\u6750\u6599\uff0c\u540e\u9762\u4f7f\u7528groupMat2Model\u547d\u4ee4\u5e94\u7528\u6750\u6599</p> <p>gName (String):\u7ec4\u540d\uff0c\u8bb0\u5f55\u4e8ed.GROUP\u4e2d\uff1bmatName (String):\u6750\u6599\u540d\uff0c\u8bb0\u5f55\u4e8ed.Mats\u4e2d</p> <p>\u65e0</p> <p>setGroupOuterBondRate(gName,bondRate)</p> <p>\u8bbe\u7f6e\u7ec4\u5411\u5916\u8fde\u63a5\u5f3a\u5ea6\u7684\u6b8b\u4f59\u7387\uff0c\u7528\u4e8e\u8bbe\u7f6e\u8282\u7406</p> <p>\u7c7b\u4f3cconnectGroupOuter\uff0c</p> <p>\u65e0</p> <p>setModelStiffness(stiffnessRate)</p> <p>\u6539\u53d8d.mo\u4e2d\u7684\u5355\u5143\u521a\u5ea6aKN,aKS\u5e76\u8c03\u6574\u76f8\u5e94\u7684d.period\u548cd.mo.dT</p> <p>stiffnessRate\uff1a\u521a\u5ea6\u53d8\u5316\u7cfb\u6570\uff0c\u4e00\u822c\u5c0f\u4e8e1\uff0c\u4ee5\u589e\u5927\u65f6\u95f4\u6b65</p> <p>\u65e0</p> <p>\u89c1LineModel</p> <p>setStandarddT()</p> <p>\u8bbe\u7f6e\u6807\u51c6\u7684\u65f6\u95f4\u6b65\uff0c\u5e76\u8d4b\u7ed9d.mo.dT\uff0c\u7ea6\u4e3a\u6700\u5c0f\u5468\u671f\u76841/50</p> <p>\u65e0</p> <p>\u65e0</p> <p>setStandardVis()</p> <p>\u8bbe\u7f6e\u6807\u51c6\u7684\u963b\u5c3c\uff0c\u5e76\u8d4b\u7ed9d.mo.mVis\uff0c\u7ea6\u4e3a\u4e34\u754c\u963b\u5c3c\u9664\u4ee5Z\u65b9\u5411\u5355\u5143\u6570</p> <p>\u65e0</p> <p>setUIoutput(varargin)</p> <p>\u8bbe\u7f6e\u7a97\u53e3\u4fe1\u606f\u63d0\u793a\uff0c\u5728load\u65b0\u6570\u636e\u540e\u4f7f\u7528B.setUIoutput()</p> <p>\u65e0</p> <p>show(varargin)</p> <p>\u663e\u793a\u7ed3\u679c\uff0c\u89c1\u540e\u5904\u7406</p> <p>\u89c1\u540e\u5904\u7406</p> <p>showConnection(varargin)</p> <p>\u663e\u793a\u5355\u5143\u95f4\u80f6\u7ed3\uff0c\u5bf9\u5e94\u4e8ed.show('--')</p> <p>\u89c1\u540e\u5904\u7406</p> <p>showFilter(varargin)</p> <p>\u5207\u5272\u663e\u793a\u7ed3\u679c</p> <p>\u89c1\u540e\u5904\u7406</p> <p>showFrame0()</p> <p>\u663e\u793a\u6a21\u578b\u8fb9\u6846\u7ebf</p> <p>\u89c1\u540e\u5904\u7406</p> <p>showSorting(varargin)</p> <p>\u663e\u793a\u7ea7\u914d</p> <p>\u65e0\u8f93\u5165\u53c2\u6570\u65f6\uff0c\u663e\u793asample\u7ec4\u7684\u7ea7\u914d\uff1b\u8f93\u5165gName\u65f6\uff0c\u663e\u793a\u6307\u5b9a\u7ec4\u7684\u7ea7\u914d\u56fe</p> <p>C: \u5206\u9009\u76f8\u4fe1\u606f\u96c6</p> <p>tic(totalCircle)</p> <p>\u8bb0\u5f55\u8d77\u59cb\u65f6\u95f4</p> <p>\u89c1\u793a\u4f8b\u7b2c\u4e09\u6b65</p> <p>toc()</p> <p>\u83b7\u5f97\u8d77\u59cb\u65f6\u95f4\u4ee5\u6765\u7ecf\u8fc7\u7684\u65f6\u95f4</p> <p>\u89c1\u793a\u4f8b\u7b2c\u4e09\u6b65</p> <p>\u4ee5\u4e0b\u4e3a\u7a0b\u5e8f\u5185\u90e8\u51fd\u6570\uff0c\u901a\u5e38\u4e0d\u76f4\u63a5\u4f7f\u7528</p> <p>addLoading(newLoad)</p> <p>\u589e\u52a0\u8377\u8f7d*\uff0c\u5c06\u53d6\u6d88</p> <p>\u65e0</p> <p>applyLoading(varargin)</p> <p>\u5e94\u7528\u8377\u8f7d*\uff0c\u5c06\u53d6\u6d88</p> <p>\u65e0</p> <p>applyMaterial()</p> <p>\u5e94\u7528\u5168\u90e8\u6750\u6599*</p> <p>deleteMatrix()</p> <p>\u5220\u9664build\u4e2d\u6240\u6709\u7684\u77e9\u9635\u548c\u6570\u7ec4\uff0c\u4ee5\u51cf\u5c0f\u6587\u4ef6\u5927\u5c0f</p> <p>general3Dset()</p> <p>\u4e09\u7ef4\u663e\u793a</p> <p>getData(valueName)</p> <p>\u8ba1\u7b97\u540e\u5904\u7406\u6240\u9700\u53c2\u6570*</p> <p>getGroupOuterConnectFilter(varPara)</p> <p>\u83b7\u53d6\u7ec4\u5411\u5916\u7684\u8fde\u63a5</p> <p>\u65e0</p> <p>getJointFilter2D(X1, Z1, X2, Z2)</p> <p>*</p> <p>getModel()</p> <p>\u628ad.mo\u4e2d\u7684{'aNum','mNum','aX','aY','aZ','aR','aKN','aKS','aBF','aFS0','aMUp','mM','mVis','aMatId'};\u5c5e\u6027\u8d4b\u7ed9d</p> <p>getNoEmptyGroupNames()</p> <p>\u83b7\u53d6\u975e\u7a7a\u7ec4\u7684\u540d\u79f0</p> <p>\u65e0</p> <p>gNames (cell array):\u7ec4\u540d\u77e9\u9635</p> <p>getSubModel(modelId)</p> <p>\u7528\u4e8e\u5e76\u884c\u8ba1\u7b97*</p> <p>\u65e0</p> <p>getSurfFilter2D(Surf)</p> <p>*</p> <p>gif(command)</p> <p>\u5236\u4f5c\u52a8\u753b\uff08\u5c06\u53d6\u6d88\uff09\uff0c\u7528user_makegif</p> <p>importStandardModel(stdMo)</p> <p>\u5bfc\u5165\u6807\u51c6\u7684\u6a21\u578b\uff0c\u5982obj_Box\u548cobj_3AxisTester*</p> <p>build\u5bf9\u8c61</p> <p>initializeLoading()</p> <p>\u521d\u59cb\u5316\u8377\u8f7d*\uff08\u5c06\u53d6\u6d88\uff09</p> <p>\u65e0</p> <p>\u65e0</p> <p>loadOriginalModel(modelId)</p> <p>*</p> <p>newStep()</p> <p>\u79fb\u52a8\u8fb9\u754c\u540e\u8bbe\u5b9a\u65b0\u7684\u4e00\u6b65\uff08\u5c06\u53d6\u6d88\uff09*</p> <p>pShow(modelId, varargin)</p> <p>*</p> <p>readModel(modelId)</p> <p>*</p> <p>recordCalHour(timeName)</p> <p>\u4fdd\u5b58\u5f53\u524d\u65f6\u95f4\u548c\u65f6\u95f4\u540d</p> <p>recordTime(timeName)</p> <p>\u8bb0\u5f55\u6a21\u62df\u5f00\u59cb\u5230\u6b64\u65f6\u7684\u65f6\u95f4\uff0c\u5728obj.mo.TAG.recordTime</p> <p>resetShearForce()</p> <p>\u5c06mo\u6a21\u578b\u4e2d\u7684\u5355\u5143\u5207\u5411\u529b\u5168\u8bbe\u4e3a0</p> <p>saveOriginalModel()</p> <p>*</p> <p>setBuild()</p> <p>\u8bbe\u7f6ebuild\u5bf9\u8c61*</p> <p>setClumpOff(varargin)</p> <p>*\u672a\u5f00\u53d1</p> <p>setData()</p> <p>*</p> <p>setMembraneUnit(Ids)</p> <p>\u8bbe\u7f6e\u819c\u5355\u5143\uff0c\u7528\u4e8e\u5e38\u89c4\u4e09\u8f74\u8bd5\u9a8c*</p> <p>\u65e0</p> <p>setModel()</p> <p>\u8bbe\u7f6emo\u5b50\u5bf9\u8c61*</p> <p>setModelPara()</p> <p>\u8bbe\u7f6e\u6a21\u578b\u53c2\u6570*</p> <p>setSubModel(modelId)</p> <p>\u7528\u4e8e\u5e76\u884c\u8ba1\u7b97*</p> <p>setSurfBond(Surf, para)</p> <p>*</p> <p>setSurfBond(Surf,type)</p> <p>\u6839\u636eC(Tool_Cut\u5bf9\u8c61\uff09\u4e2d\u8bb0\u5f55\u7684\u5e73\u9762\u751f\u6210\u88c2\u9699\u3001\u8282\u7406\u6216\u80f6\u7ed3</p> <p>Surf:Tool_Cut\u4e2d\u5b9a\u4e49\u7684\u5c42\u9762\uff1btype\uff1a\u53ef\u53d6'glue','break'\u6216\u8005\u6307\u5b9a\u5f3a\u5ea6\u7684\u6b8b\u4f59\u7387</p> <p>\u65e0</p> <p>\u89c1\u793a\u4f8bBoxModel2\u3002d.setSurfBond(C.Surf(1),0.2);\u5c06\u5e73\u97621\u7684\u5f3a\u5ea6\u8bbe\u4e3a20%\uff08\u751f\u6210\u8282\u7406\uff09\uff0cd.setSurfBond(C.Surf(1),'break')\u751f\u6210\u88c2\u9699\u9762</p> <p>showBall(Id)</p> <p>\u663e\u793a\u67d0\u4e2a\u5355\u5143\u53ca\u5176\u63a5\u89e6\u5355\u5143</p> <p>\u89c1\u540e\u5904\u7406</p> <p>showBondRate(obj,varargin)%mShowFilter, shown when value is true</p> <p>showData(V)</p> <p>show\u7684\u57fa\u51fd\u6570*</p> <p>smoothBoundary()</p> <p>\u5e73\u6ed1\u8fb9\u754c*\uff08\u5c06\u53d6\u6d88\uff09</p> <p>testSpeed(varargin)</p> <p>\u8fd0\u884c\u82e5\u5e72\u6027d.mo.zeroBalance()\u6765\u6d4b\u8bd5\u8ba1\u7b97\u901f\u5ea6\uff0c\u7528\u5728d.mo.setGPU('auto')\u4e2d</p> <p>\u53ef\u4e3a\u7a7a\uff0c\u5f53\u6709\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u65f6\uff0c\u4e3a\u6d4b\u8bd5\u8fed\u4ee3\u6b21\u6570</p> <p>\u5f53\u524d\u8ba1\u7b97\u901f\u5ea6\uff08\u6bcf\u79d2\u8ba1\u7b97\u9897\u7c92\u8fd0\u52a8\u6b21\u6570\uff09</p> <p>speed=d.testSpeed();</p> <p>visBalance(visRate, num)</p> <p>\u5c06\u53d6\u6d88*</p>"},{"location":"api/build/#properties","title":"properties","text":""},{"location":"api/build/#build.TAG","title":"<code>TAG</code>","text":"<p>\u7ed3\u6784\u4f53\uff0c\u7528\u4e8e\u8bb0\u5f55\u6a21\u62df\u4fe1\u606f  </p>"},{"location":"api/build/#build.SET","title":"<code>SET</code>","text":"<p>\u7ed3\u6784\u4f53\uff0c\u7528\u4e8e\u8bb0\u5f55\u6a21\u62df\u6570\u636e  </p>"},{"location":"api/build/#methods","title":"methods","text":""},{"location":"api/build/#build.balance","title":"<code>balance(varargin) -&gt; varargout</code>","text":"<p>\u8fed\u4ee3\u8ba1\u7b97 </p>"},{"location":"api/build/#build.setBuild","title":"<code>setBuild(varargin)</code>","text":"<p>\u521d\u59cb\u5316build\u5bf9\u8c61\u4e2d\u7684\u9897\u7c92\u53c2\u6570\uff08\u5750\u6807\uff0c\u534a\u5f84\uff0c\u6750\u6599\u5c5e\u6027\u7b49\uff09 </p>"},{"location":"api/childModel/","title":"childModel","text":"<p>class childModel</p> Properties <p>childId</p> <p>\u5b50\u6a21\u578b\u7684\u7f16\u53f7</p> <p>SET</p> <p>\u6a21\u62df\u8bbe\u7f6e\u4fe1\u606f\uff0c\u53ef\u8bb0\u5f55\u4e8c\u6b21\u5f00\u53d1\u65b0\u7684\u6570\u636e</p> <p>TAG</p> <p>\u6a21\u62df\u4fe1\u606f\u8bb0\u5f55\uff0c\u7528\u4e8e\u8bb0\u5f55\u548c\u8f93\u51fa\u4fe1\u606f</p> <p>FnCommand</p> <p>\u6b63\u5411\u529b\u7684\u5b9a\u4e49\uff0c\u9ed8\u8ba4\u4e3a\u7ebf\u5f39\u6027\u63a5\u89e6\u3002\u91c7\u7528\u5907\u6ce8\u4e2d\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u5b9a\u4e49hertz\u63a5\u89e6\u6a21\u578b\uff0c\u5177\u4f53\u539f\u7406\u53ef\u89c1\u300a\u5730\u8d28\u4e0e\u5ca9\u571f\u5de5\u7a0b\u77e9\u9635\u79bb\u6563\u5143\u5206\u6790\u300b</p> <p>parent_aId</p> <p>\u5b50\u6a21\u578b\u5355\u5143\u5bf9\u5e94\u7684\u7f16\u53f7</p> <p>mId_A</p> <p>isGPU</p> <p>\u662f\u5426\u542f\u7528GPU</p> <p>mNum</p> <p>\u5b50\u6a21\u578b\u6d3b\u52a8\u5355\u5143\u6570</p> <p>parent_mId</p> <p>\u5b50\u6a21\u578b\u6d3b\u52a8\u5355\u5143\u5bf9\u5e94\u7684\u7f16\u53f7</p> <p>nBall</p> <p>\u4ee5\u4e0b\u4e0emodel\u7c7b\u76f8\u540c</p> <p>bFilter</p> <p>cFilter</p> <p>tFilter</p> <p>nBondRate</p> <p>isBondRate</p> <p>nKNe</p> <p>nKSe</p> <p>nFnX</p> <p>nFnY</p> <p>nFnZ</p> <p>nFsX</p> <p>nFsY</p> <p>nFsZ</p> <p>nClump</p> <p>parentMo</p> <p>model\u5bf9\u8c61</p> Methods <p>applyMoId(moChild, aMoId)</p> <p>addElement(moChild, aList)</p> <p>\u4ee5\u4e0b\u4e0emodel\u7c7b\u76f8\u540c</p> <p>delElement(moChild, aRList, aRFilter, aMoId)</p> <p>setModel(obj)</p> <p>zeroBalance(obj)</p> <p>testSpeed(obj, varargin)</p> <p>setGPU(obj, type0)</p> <p>setShear(obj, type)</p> <p>setKNKS(obj)</p> <p>show(obj)</p> <p>childModel(d)</p> <p>removeGroupForce(moChild)</p> <p>balance(moChild)</p>"},{"location":"api/f/","title":"f","text":"<p>class f</p> Properties Methods <p>imported=importLicenseFile(fileName)</p> <p>\u5bfc\u5165\u8f6f\u4ef6\u8bb8\u53ef\u8bc1</p> <p>fileName:\u8bb8\u53ef\u8bc1\u7684\u6587\u4ef6\u540d</p> <p>imported:\u662f\u5426\u5df2\u5bfc\u5165</p> <p>f.importLicenseFile('XMLdata/licenseDefault.mat');</p> <p>align2center(form)</p> <p>\u5c06\u7a97\u53e3\u6b63\u4e2d\u5bf9\u9f50</p> <p>\u65e0</p> <p>clearApp()</p> <p>\u6e05\u9664\u5f53\u524dApp\u8bb0\u5f55</p> <p>\u65e0</p> <p>\u89c1user_Apps</p> <p>clearFunction()</p> <p>\u6e05\u9664\u5f53\u524d\u5168\u90e8\u51fd\u6570\u8bb0\u5f55</p> <p>\u65e0</p> <p>\u89c1user_Functions</p> <p>define(funFileName)</p> <p>\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570</p> <p>\u6587\u4ef6\u540d</p> <p>\u89c1user_Functions</p> <p>getFunctionList()</p> <p>\u83b7\u53d6\u5f53\u524d\u51fd\u6570\u5217\u8868</p> <p>\u65e0</p> <p>\u89c1user_Functions</p> <p>getGlobalData(name)</p> <p>\u83b7\u53d6\u5df2\u8bbe\u7f6e\u7684\u5168\u5c40\u53d8\u91cf</p> <p>\u5168\u5c40\u53d8\u91cf\u540d</p> <p>\u89c1user_Functions</p> <p>getHandles()</p> <p>\u83b7\u5f97\u7a97\u53e3\u7684\u63a7\u4ef6\u5217\u8868</p> <p>\u65e0</p> <p>\u63a7\u4ef6\u5217\u8868\u7ed3\u6784 \u4f53</p> <p>f.getHandles(); \u89c1user_setFontSize</p> <p>run(funFileName, varargin)</p> <p>\u8fd0\u884c\u81ea\u5b9a\u4e49\u51fd\u6570</p> <p>\u51fd\u6570\u540d\u548c\u53c2\u6570</p> <p>\u89c1user_Functions</p> <p>runWinApp(exportedFileName, varargin)</p> <p>\u8fd0\u884c\u81ea\u5b9a\u4e49App</p> <p>exportedFileName: App\u6587\u4ef6\u540d\uff1bvarargin: \u662f\u5426\u5305\u542b\u9ed8\u8ba4\u83dc\u5355\uff0ctrue or false</p> <p>WinApp\u7c7b\u5bf9\u8c61</p> <p>\u89c1user_Apps</p> <p>save(fileName, data, varargin)</p> <p>\u4fdd\u5b58\u77e9\u9635\u6570\u636e\u5230\u8bb0\u4e8b\u672c\u6587\u4ef6(.txt)\u6216excel\u6587\u4ef6(.xls)</p> <p>fileName:\u6587\u4ef6\u540d\uff1bdata:\u77e9\u9635\u6570\u636e\uff1bvarargin:\u53ef\u9009\u53c2\u6570\uff0c\u4e0d\u8f93\u5165\u65f6\u9ed8\u8ba4\u4fdd\u5b58\u4e3a\u8bb0\u4e8b\u672c\u6587\u4ef6\uff0c\u8f93\u5165\u5b57\u7b26\u4e32'excel'\u65f6\uff0c\u4fdd\u5b58\u4e3aexcel\u6587\u4ef6</p> <p>setGlobalData(name, value)</p> <p>\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf</p> <p>name: \u5168\u5c40\u53d8\u91cf\u540d\uff1bvalue: \u53d8\u91cf\u503c</p> <p>\u89c1user_Functions</p> <p>0\u4ee5\u4e0b\u4e3a\u7a0b\u5e8f\u5185\u90e8\u51fd\u6570\uff0c\u901a\u5e38\u4e0d\u76f4\u63a5\u4f7f\u7528</p> <p>ChangeOutputFocus(OutputFocus)</p> <p>ChangePlottingArea(PlottingArea)</p> <p>ChangePlottingAreaParent(PlottingAreaParent)</p> <p>clearAll()</p> <p>*\u5c06\u5220\u9664</p> <p>clearCommands(MatDEMcommands)</p> <p>commandsChar2Cell(MatDEMcommandsChar)</p> <p>commandsChar2Cell0(MatDEMcommandsChar)</p> <p>getFileName(funFileName)</p> <p>getFunHeadName(funHead)</p> <p>getOneCommand(MatDEMi, MatDEMcommands, addNeedEndNum)</p> <p>isCommandHaveEnd(commandOne)</p> <p>isCommandNeedEnd(commandOne)</p> <p>readClassFun(lines)</p> <p>readFile(fileName)</p> <p>readFile0(fileName)</p> <p>removeComment(commandStr)</p> <p>removeComments(lines)</p> <p>removeEmptyLine(lines)</p> <p>runFile(fileName, MatDEMpara)</p> <p>runFileCommandCells(MatDEMcommands, MatDEMParaName, MatDEMsave)</p> <p>*\u5c06\u5220\u9664</p> <p>runFunctionCommandCells(MatDEMcommands, MatDEMpara)</p> <p>*\u5c06\u5220\u9664</p> <p>runUserCode(codeStr)</p> <p>*\u5c06\u5220\u9664</p>"},{"location":"api/fs/","title":"fs","text":"<p>class fs</p> Properties Methods <p>M=fs.getMatDEMscore(varargin)</p> <p>\u901a\u8fc7\u6d4b\u8bd5\u83b7\u5f97\u8ba1\u7b97\u673a\u7684MatDEM\u8ba1\u7b97\u8bc4\u5206</p> <p>\u65e0\u8f93\u5165\u65f6\u6d4b\u8bd5\u6700\u591a\u53ef\u80fd\u9897\u7c92\u6570\uff1b\u4e00\u4e2a\u6574\u6570\u8f93\u5165\u65f6\uff0c\u8d4b\u4e3atestNum</p> <p>user_BoxTestSpeed.m</p> <p>density=calcualteBlockDensity(mo, x1, y1, z1, x2, y2, z2)</p> <p>\u8ba1\u7b97\u5757\u4f53\u7684\u5bc6\u5ea6</p> <p>mo:\u6a21\u578bd.mo; x1,yz\u2026:\u5757\u4f53\u7684\u5bf9\u89d2\u7ebf\u70b9\u5750\u6807</p> <p>\u5bc6\u5ea6</p> <p>gData=chooseGPU(varargin)</p> <p>\u6d4b\u8bd5\u6240\u6709\u53ef\u7528GPU\uff0c\u5e76\u9009\u62e9\u53ef\u7528\u663e\u5b58\u6700\u591a\u7684GPU</p> <p>\u65e0\u8f93\u5165\u65f6\u6216\u8f93\u5165\u4e3a'auto'\u81ea\u52a8\u9009\u62e9\u7a7a\u95f2GPU\uff0c\u8f93\u5165\u6570\u5b57\u65f6\u9009\u62e9\u6307\u5b9aGPU</p> <p>GPU\u4fe1\u606f\u7ed3\u6784\u4f53</p> <p>fs.chooseGPU();</p> <p>B=copyDataA2B(A, B)</p> <p>\u5c06A\u7684\u6240\u6709\u5c5e\u6027\u590d\u5236\u7ed9B</p> <p>A:\u5bf9\u8c61A; B:\u5bf9\u8c61B\uff0c\u53c2\u6570\u53ef\u4e3a\u7ed3\u6784\u4f53\u6216Box,build\u7b49\u5bf9\u8c61</p> <p>\u5bf9\u8c61B</p> <p>disp(note)</p> <p>\u5728\u6d88\u606f\u6846\u4e2d\u663e\u793a\u7ed3\u679c</p> <p>note:\u9700\u8981\u663e\u793a\u7684\u6d88\u606f\u5b57\u7b26\u4e32</p> <p>\u65e0</p> <p>fs.show('message');</p> <p>general3Dset()</p> <p>\u8bbe\u7f6e\u4e09\u7ef4\u663e\u793a\u51fd\u6570\uff0c\u7528\u5728show()\u4e2d</p> <p>\u65e0</p> <p>\u65e0</p> <p>generalView()</p> <p>\u8bbe\u7f6e\u4e09\u7ef4\u89c2\u770b\u4f4d\u7f6e\uff0c\u7528\u5728show()\u4e2d</p> <p>\u65e0</p> <p>\u65e0</p> <p>limitFrame(d,sId,x1,x2,y1,y2,z1,z2)</p> <p>\u589e\u52a0\u4e00\u4e2a\u521a\u6027\u5916\u6846\uff0c\u9650\u5236\u5355\u5143\u5728\u5176\u4e2d\u8fd0\u52a8\u3002\u5f53\u5355\u5143\u8981\u63a5\u89e6\u5230x1,x2,y1,y2,z1,z2\u5b9a\u4e49\u8fb9\u754c\u6846\u65f6\uff0c\u5c31\u4f1a\u88ab\u53cd\u5c04\u56de\u6765\u3002\u9700\u8981\u5728\u6bcf\u6b65d.mo.balance()\u547d\u4ee4\u540e\u8fd0\u884c\u8fd9\u4e2a\u547d\u4ee4\uff0c\u53ef\u4ee5\u4e0ed.mo.afterBalance\u5c5e\u6027\u4e00\u8d77\u4f7f\u7528</p> <p>sId\uff1a\u5355\u5143\u7f16\u53f7\uff1b\u5176\u4f59\uff1a\u5916\u6846\u7684\u8fb9\u754c\u5750\u6807</p> <p>movie2gif(name, frames, dt)</p> <p>\u6839\u636eframes\u91cc\u7684\u4fe1\u606f\uff0c\u751f\u6210gif\u52a8\u753b\uff0c\u5e76\u4fdd\u5b58\u5728gif\u6587\u4ef6\u5939</p> <p>name:\u52a8\u753b\u540d; \u52a8\u753b\u5e27\u7ed3\u6784\u4f53;\u52a8\u5e27\u65f6\u95f4\u95f4\u9694\uff0c\u89c1user_makeGIF\u793a\u4f8b</p> <p>\u89c1makegif\u793a\u4f8b</p> <p>save(path,name,value)</p> <p>\u4fdd\u5b58\u53c2\u6570\u5230.mat\u6587\u4ef6</p> <p>path:\u4fdd\u5b58\u8def\u5f84; name:\u53d8\u91cf\u540d; value:\u53d8\u91cf\u503c</p> <p>\u65e0</p> <p>fs.save('data/a.mat','B',B)</p> <p>data=testSpeed(d)</p> <p>\u6d4b\u8bd5\u6a21\u578b\u7684\u90bb\u5c45\u68c0\u7d22\u548c\u5e73\u8861\u8ba1\u7b97\u901f\u5ea6</p> <p>d\u5bf9\u8c61</p> <p>\u901f\u5ea6\u6570\u636e\u7ed3\u6784\u4f53</p> <p>xyzFilter=selectBlockBalls(mo, x1, y1, z1, x2, y2, z2)</p> <p>\u627e\u51fa\u5728\u4e24\u9876\u70b9\u95f4\u5757\u533a\u57df\u7684\u5355\u5143</p> <p>mo:\u6a21\u578bd.mo; x1,y1\u2026:\u5757\u4f53\u7684\u5bf9\u89d2\u7ebf\u70b9\u5750\u6807</p> <p>\u8fc7\u6ee4\u5e03\u5c14\u77e9\u9635\uff0c1\u4ee3\u8868\u5728\u5757\u4f53\u5185</p> <p>setPlatenStress(d, StressXX, StressYY, StressZZ, border)</p> <p>\u8bbe\u7f6e\u538b\u529b\u677f\u4e0a\u6b63\u5411\u538b\u529b\uff0c\u4ec5\u7ed9border\u8303\u56f4\u5185\u6709\u63a5\u89e6\u7684\u5355\u5143\u8bbe\u7f6e\u4f53\u529b\uff0c\u529b\u4f5c\u7528\u4e8eright,back\u548ctop\u538b\u529b\u677f\u4e0a</p> <p>\u53ef\u4e3a4\u4e2a\u62165\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u65bd\u52a0\u4e09\u8f74\u529b\u4e3a(d, StressXX, StressYY, StressZZ, border)\uff0c\u65bd\u52a0\u5355\u8f74\u529b\u4e3a(d,type,stress,border)\uff0cd: build\u5bf9\u8c61; StressXX, StressYY, StressZZ: \u4e09\u4e2a\u65b9\u5411\u7684\u6cd5\u5411\u5e94\u529b; border: \u65bd\u52a0\u5e94\u529b\u7684\u8ddd\u79bb; type\u53ef\u53d6'StressXX','StressYY','StressZZ'</p> <p>\u65e0</p> <p>showObj(obj,varargin)</p> <p>\u663e\u793a\u7ed3\u6784\u4f53\u4e2d\u7684\u4e09\u7ef4\u7403\uff0c\u9ed8\u8ba4\u4f1a\u6e05\u9664\u5df2\u6709\u7684\u663e\u793a</p> <p>obj:\u7ed3\u6784\u4f53\uff0c\u5305\u542b.X,.Y,.Z,.R\u4fe1\u606f; varargin: \u5f53\u6709\u8f93\u5165\u53c2\u6570\u65f6\uff0c\u4e0d\u4f1a\u6e05\u9664\u5f53\u524d\u663e\u793a</p> <p>\u65e0</p> <p>fs.showObj(obj,'add'); \u4e0d\u6e32\u67d3</p> <p>fig=surfaceValue(X, Y, Z, R, V)</p> <p>\u753b\u4e09\u7ef4\u7403\u548c\u6807\u91cf</p> <p>X,Y,Z,R:\u5750\u6807\u548cR\u534a\u5f84\u6570\u7ec4; V:\u6807\u91cf\u503c\u6570\u7ec4</p> <p>\u56fe\u7684\u53e5\u67c4</p> <p>fig=surfaceVector(X, Y, Z, R, U, V, W)</p> <p>\u753b\u4e09\u7ef4\u7403\u548c\u5411\u91cf</p> <p>X,Y,Z,R:\u5750\u6807\u548cR\u534a\u5f84\u6570\u7ec4; U,V,W: \u65b9\u5411\u91cf\u6570\u7ec4</p> <p>\u56fe\u7684\u53e5\u67c4</p> <p>0\u4ee5\u4e0b\u4e3a\u7a0b\u5e8f\u5185\u90e8\u51fd\u6570\uff0c\u901a\u5e38\u4e0d\u76f4\u63a5\u4f7f\u7528\uff08\u90e8\u5206\u65b0\u51fd\u6570\u672a\u5217\u51fa\uff09</p> <p>adjustSize(d, requiredStrain, time, varargin)</p> <p>*</p> <p>()</p> <p>adjustSize0(d, requiredStrain, varargin)</p> <p>*</p> <p>()</p> <p>blockXYZ(blockW,blockL,blockH,ballR)</p> <p>*</p> <p>()</p> <p>commandRep(str)</p> <p>*</p> <p>()</p> <p>cube(modelSize, R)</p> <p>*</p> <p>()</p> <p>CuCalculate2D(d)</p> <p>*</p> <p>()</p> <p>dataA2B(A, B)</p> <p>*</p> <p>()</p> <p>dataA2B2(varargin)</p> <p>*</p> <p>()</p> <p>dataCurveLongLine(valueName, d, x1, z1, x2, z2, disLimit)</p> <p>*</p> <p>()</p> <p>dispNote(note, isUI, handle)</p> <p>\u663e\u793a\u7ed3\u679c*</p> <p>()</p> <p>drawDisc(cX, cY, cZ, R, nX, nY, nZ, color)</p> <p>*</p> <p>()</p> <p>EvCalculate(d)</p> <p>*</p> <p>()</p> <p>EvCalculate2D(d)</p> <p>*</p> <p>()</p> <p>fillValue(X, Y, R, value)</p> <p>*</p> <p>()</p> <p>fluidHead2Den(fluidHead, fluidSpan)</p> <p>*</p> <p>()</p> <p>getBallPara(ballR, MatId, Mats)</p> <p>*</p> <p>()</p> <p>getBlockEdge(mX, mY, mZ, border)</p> <p>*</p> <p>()</p> <p>getBlockStrainStress(obj)</p> <p>\u8ba1\u7b97\u5757\u4f53\u7684\u5e94\u529b\u5e94\u53d8\u66f2\u7ebf*</p> <p>()</p> <p>getBlockStrength(obj)</p> <p>\u8ba1\u7b97\u5757\u4f53\u5f3a\u5ea6*</p> <p>()</p> <p>getBlockWHT(X, Y, Z, edge)</p> <p>\u7528\u4e8e\u5355\u8f74\u5f3a\u5ea6\u6d4b\u8bd5</p> <p>()</p> <p>getCuCircle(mSize)</p> <p>*</p> <p>()</p> <p>getDistribution(type, num, maxRrate)</p> <p>\u83b7\u53d6\u5355\u5143\u7c92\u5f84\u5206\u5e03*</p> <p>()</p> <p>getDropStepNum(d)</p> <p>*</p> <p>()</p> <p>getEdgeId(d, platenId, edge, type)</p> <p>*</p> <p>()</p> <p>getEdgePlatenId(d0, border, platenType)</p> <p>*</p> <p>()</p> <p>getnBreakFilter(d, aBreakFilter)</p> <p>*</p> <p>()</p> <p>getNewElementId(Id, delId)</p> <p>*</p> <p>()</p> <p>getPbyId(d, Ids)</p> <p>*</p> <p>()</p> <p>getPlatenEdgeId(aX, aY, platenId, border)</p> <p>*</p> <p>()</p> <p>getPricipalStress(m)</p> <p>*</p> <p>()</p> <p>getStrain(d)</p> <p>*</p> <p>()</p> <p>getStrain0(d)</p> <p>*</p> <p>()</p> <p>getStrain2(d)</p> <p>*</p> <p>()</p> <p>getStress(m)</p> <p>*</p> <p>()</p> <p>getTwoGroupConnect(G1_gId, G2_gId, nBall)</p> <p>\u83b7\u53d6\u4e24\u7ec4\u5355\u5143\u7f16\u53f7\u7684\u76f8\u8fde\u63a5\u77e9\u9635\u8fc7\u6ee4\u5668</p> <p>\u4e24\u7ec4\u5355\u5143\u7f16\u53f7\uff0c\u90bb\u5c45\u77e9\u9635</p> <p>\u8fc7\u6ee4\u5e03\u5c14\u77e9\u9635\uff0c1\u4ee3\u8868\u80f6\u7ed3</p> <p>getTuCircle(mSize)</p> <p>*</p> <p>()</p> <p>getVisRate(mX, mY, mZ, mR)</p> <p>()</p> <p>insertArray(oldA, addA, addI)</p> <p>*</p> <p>()</p> <p>isExistInCells(str, strCells)</p> <p>\u5224\u65ad\u67d0\u5b57\u7b26\u4e32\u662f\u5426\u5728\u5b57\u7b26\u4e32cell\u6570\u7ec4\u4e2d*</p> <p>()</p> <p>layeredModel(V, Span, Id)</p> <p>*</p> <p>()</p> <p>loadOriginalData(obj, aId0, mNum)</p> <p>*</p> <p>()</p> <p>macroToMicro3(E, v, Tu, Cu, Mui, d, den)</p> <p>\u57fa\u4e8e\u4e09\u7ef4\u8f6c\u6362\u516c\u5f0f\uff0c\u8ba1\u7b97\u76f8\u5e94\u5355\u5143\u95f4\u53c2\u6570</p> <p>\u6768\u6c0f\u6a21\u91cf\uff0c\u6cca\u677e\u6bd4\uff0c\u6297\u62c9\u5f3a\u5ea6\uff0c\u6297\u538b\u5f3a\u5ea6\uff0c\u6469\u64e6\u7cfb\u6570\uff0c\u76f4\u5f84\uff0c\u5bc6\u5ea6</p> <p>microToMacro3(Kn, Ks, Xb, Fs0, Mup, d, den)</p> <p>\u57fa\u4e8e\u4e09\u7ef4\u8f6c\u6362\u516c\u5f0f\uff0c\u8ba1\u7b97\u76f8\u5e94\u6a21\u578b\u6574\u4f53\u53c2\u6570</p> <p>\u6b63\u5411\u521a\u5ea6\uff0c\u5207\u5411\u521a\u5ea6\uff0c\u65ad\u88c2\u4f4d\u79fb\uff0c\u6297\u526a\u529b\uff0c\u5355\u5143\u6469\u64e6\u7cfb\u6570\uff0c\u76f4\u5f84\uff0c\u5bc6\u5ea6</p> <p>macro3Dto2D(E, v, Tu, Cu, Mui, d, den)</p> <p>*</p> <p>()</p> <p>macroToMicro2(E, v, Tu, Cu, Mui, d, den)</p> <p>*</p> <p>()</p> <p>microToMacro2(Kn, Ks, Xb, Fs0, Mup, d, den)</p> <p>*</p> <p>()</p> <p>mixProperty(d, Pname)</p> <p>*</p> <p>()</p> <p>moveBalls(d)</p> <p>*</p> <p>()</p> <p>moveBallsNew(d, Id)</p> <p>*</p> <p>()</p> <p>nFilter2Con(Nball, filterIn)</p> <p>*</p> <p>()</p> <p>noBIntact(d)</p> <p>*</p> <p>()</p> <p>platenStress2Gravity(d0, gName, direction, stress)</p> <p>\u6839\u636e\u538b\u529b\u677f\u7684\u538b\u529b\u8ba1\u7b97\u6bcf\u4e2a\u5355\u5143\u6240\u53d7\u4f53\u529b</p> <p>build\u5bf9\u8c61\uff0c\u7ec4\u540d\uff0c\u65b9\u5411(X,Y,Z)\uff0c\u5e94\u529b</p> <p>\u6bcf\u4e2a\u5355\u5143\u6240\u53d7\u4f53\u529b</p> <p>\u89c1user_BoxTunnel2</p> <p>randSeed(seed)</p> <p>*</p> <p>()</p> <p>rectDisc(w, h, ballR)</p> <p>*</p> <p>()</p> <p>saveRecord(tl)</p> <p>*</p> <p>()</p> <p>selectBall(mX, mY, mZ, span)</p> <p>*</p> <p>()</p> <p>selectBlockClump(mX, mY, mZ, r, span)</p> <p>*</p> <p>()</p> <p>setBlock(w, h, t, r)</p> <p>*</p> <p>()</p> <p>setBoundary(mX, mY, mZ, mR, type, sXYZ)</p> <p>*</p> <p>()</p> <p>setBox(mX, mY, mZ, r, type, sXYZ)</p> <p>*</p> <p>()</p> <p>setEdgeSize(d, edge)</p> <p>*</p> <p>()</p> <p>setFlotage(obj, fluidDensity, fluidMin, fluidMax)</p> <p>*</p> <p>()</p> <p>setTwoBoundaries(mX, mY, mZ, r, type, tag)</p> <p>*</p> <p>()</p> <p>showCrack(breakId, aX, aY, aZ, aR)</p> <p>*</p> <p>()</p> <p>showCrackMovie(breakId, aX, aY, aZ, aR)</p> <p>*</p> <p>()</p> <p>showFailureMovie(failureId, aX, aY, aZ, aR)</p> <p>*</p> <p>()</p> <p>showLayerFrame(obj)</p> <p>*</p> <p>()</p> <p>showLines(X, Y, Z, startId, endId, lineColor)</p> <p>*</p> <p>()</p> <p>showMovement(d, loopTime, balanceNum, type)</p> <p>*</p> <p>()</p> <p>showRect(x1, y1, z1, x2, y2, z2, style)</p> <p>*</p> <p>()</p> <p>sizeRate(mSize)</p> <p>*</p> <p>()</p> <p>transferData(nBallOld, nBallNew, a_Num, m_Num, nValue)</p> <p>*</p> <p>()</p> <p>uniformSize(d, rate)</p> <p>*</p> <p>()</p>"},{"location":"api/material/","title":"material","text":"<p>class material</p> Properties <p>name</p> <p>\u6750\u6599\u540d</p> <p>Id</p> <p>\u6750\u6599\u7f16\u53f7</p> <p>SET</p> <p>\u8bb0\u5f55\u8bbe\u7f6e\u4fe1\u606f</p> <p>TAG</p> <p>\u8bb0\u5f55\u8f93\u51fa\u4fe1\u606f</p> <p>SH</p> <p>\u6bd4\u70ed\u5bb9\uff08\u7528\u4e8e\u70ed\u4f20\u5bfc\u6a21\u62df\uff09</p> <p>rate</p> <p>\u5b8f\u89c2\u529b\u5b66\u53c2\u6570\u7684\u7cfb\u6570</p> <p>E</p> <p>\u6768\u6c0f\u6a21\u91cf</p> <p>v</p> <p>\u6cca\u677e\u6bd4</p> <p>Tu</p> <p>\u6297\u62c9\u5f3a\u5ea6</p> <p>Cu</p> <p>\u6297\u538b\u5f3a\u5ea6</p> <p>Mui</p> <p>\u5185\u6469\u64e6\u7cfb\u6570</p> <p>G</p> <p>\u63a8\u7b97\u51fa\u7684\u526a\u5207\u6a21\u91cf</p> <p>lame</p> <p>\u63a8\u7b97\u51fa\u7684\u62c9\u59c6\u5e38\u6570</p> <p>Copen</p> <p>\u89c1\uff08Liu et al., 2013\uff0cJGR\uff09</p> <p>St</p> <p>\u63a8\u7b97\u51fa\u7684\u5f20\u62c9\u7834\u574f\u5e94\u53d8</p> <p>Sc</p> <p>\u63a8\u7b97\u51fa\u7684\u538b\u7f29\u7834\u574f\u5e94\u53d8</p> <p>Sopen</p> <p>\u89c1\uff08Liu et al., 2013\uff0cJGR\uff09</p> <p>Vp</p> <p>\u63a8\u7b97\u51fa\u7684P\u6ce2\u901f\u5ea6</p> <p>Vs</p> <p>\u63a8\u7b97\u51fa\u7684S\u6ce2\u901f\u5ea6</p> <p>kn</p> <p>\u5355\u5143\u6b63\u5411\u52b2\u5ea6\u7cfb\u6570</p> <p>ks</p> <p>\u5355\u5143\u5207\u5411\u52b2\u5ea6\u7cfb\u6570</p> <p>xb</p> <p>\u5355\u5143\u65ad\u88c2\u4f4d\u79fb</p> <p>mup</p> <p>\u5355\u5143\u6469\u64e6\u7cfb\u6570</p> <p>fs0</p> <p>\u5355\u5143\u521d\u59cb\u6297\u526a\u529b</p> <p>Mp</p> <p>\u5355\u5143\u8d28\u91cf</p> <p>period</p> <p>\u5355\u5143\u632f\u52a8\u5468\u671f\uff08\u5f53\u4e0e\u56fa\u5b9a\u5899\u80f6\u7ed3\u65f6\uff09</p> <p>criticalVis</p> <p>\u5355\u5143\u4e34\u754c\u963b\u5c3c</p> <p>d</p> <p>\u5355\u5143\u76f4\u5f84</p> <p>den</p> <p>\u5bc6\u5ea6\uff08\u7d27\u5bc6\u5806\u79ef\u65f6\uff09</p> <p>isFailure</p> <p>\u662f\u5426\u53ef\u7834\u574f\uff08\u89c1Liu et al., 2015\uff0cJGR\uff09</p> <p>is2D</p> <p>\u662f\u5426\u4e3a\u4e8c\u7ef4\u5355\u5143</p> Methods <p>setTrainedMat(obj, varargin)</p> <p>\u4ece\u8bad\u7ec3\u7684\u6750\u6599\u5c5e\u6027\u4e2d\u9009\u53d6\u6700\u63a5\u8fd1\u7684rate\u8d4b\u7ed9\u6750\u6599\uff0c\u8bad\u7ec3\u597d\u7684rate\u8bb0\u5f55\u4e8emateral.SET.UniaxialPara\u4e2d</p> <p>\u89c1user_MatTraining</p> <p>save(obj, varargin)</p> <p>\u4fdd\u5b58\u6750\u6599\u4e8eMats\u6587\u4ef6\u5939\u4e2d\uff0c\u683c\u5f0f\u4e3aMatlab\u7684.mat\u6587\u4ef6</p> <p>\u89c1user_MatTraining</p> <p>calculateRate(obj)</p> <p>\u8ba1\u7b97\u6bd4\u7387*</p> <p>material(varargin)</p> <p>material(matName,matTxt,meanBallR);</p> <p>matName(string):\u6750\u6599\u540d\uff1bmatTxt(string):\u6750\u6599\u6587\u672c\u8def\u5f84\uff1bmeanBallR(double):\u5355\u5143\u7684\u5e73\u5747\u534a\u5f84\uff0c\u901a\u5e38\u53d6B.ballR</p> <p>getMicroPara(obj, ballD)</p> <p>setMaterial(obj, varargin)</p> <p>\u8bbe\u7f6e\u5fae\u89c2\u6216\u5b8f\u89c2\u53c2\u6570</p> <p>setFailure(obj, Ff_rate, ellipseK, dR_rate, failureMax)</p> <p>\u7528\u4e8e\u8bbe\u7f6e\u5355\u5143\u7684\u7834\u574f\u6027\u8d28\uff08\u89c1Liu et al., 2015\uff0cJGR\uff09</p> <p>show(obj)</p> <p>\u663e\u793a\u5355\u5143\u7834\u574f\u5305\u7edc\u9762\uff08\u89c1Liu et al., 2015\uff0cJGR\uff09</p> <p>calMicro(obj)</p> <p>\u8ba1\u7b97\u5355\u5143\u5fae\u89c2\u53c2\u6570*</p> <p>calMacro(obj)</p> <p>\u8ba1\u7b97\u6a21\u578b\u5b8f\u89c2\u53c2\u6570*</p>"},{"location":"api/mfs/","title":"mfs","text":"<p>class mfs</p> Properties Methods <p>transferPara(d1,d2,gNames,paras)</p> <p>\u5c06\u6307\u5b9a\u7ec4\u7684\u5c5e\u6027\u7531d1\u8f6c\u5230d2</p> <p>d1,d2\u4e3abuild\u5bf9\u8c61\uff1bgNames\u7ec4\u540d\u5143\u80de\u77e9\u9635\uff1bparas\uff1a\u53c2\u6570\u5143\u80de\u77e9\u9635</p> <p>\u65e0</p> <p>\u89c1user_ClumpParticle2\uff1amfs.transferPara(d,B.d,{'botPlaten','topPlaten','lefPlaten','rigPlaten'},{'aX','aZ'});</p> <p>[gId1,gId2]=splitGroup(d,gName,type,value)</p> <p>\u5c06\u7ec4\u5c06\u5c5e\u6027\u5927\u5c0f\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5e76\u8fd4\u56de\u4e24\u90e8\u5206\u7684id</p> <p>d\u5bf9\u8c61\uff1bgName\u7ec4\u540d\uff1btype:d.mo\u4e2d\u7684\u5c5e\u6027\u5b57\u7b26\u4e32\uff1bvalue\u5207\u5206\u7684\u503c\uff0c\u5927\u7b49\u4e8e\u6b64\u503c\u7684\u8fd4\u56de\u5230gId1\u4e2d</p> <p>gId\u8fd4\u56de\u7684\u4e24\u90e8id</p> <p>allDisc=grain2Clump2D(grainObj,expandRate,Rrate)</p> <p>\u5c06\u5927\u9897\u7c92\u8f6c\u5316\u4e3aclump</p> <p>grainObj\u9897\u7c92\u7684\u7ed3\u6784\u4f53\uff0cexpandRate\uff1a\u4ee4minR\u4e3a\u6700\u5c0f\u9897\u7c92\u534a\u5f84\uff0c\u5f53\u534a\u5f84\u5927\u4e8eminR*expandRate\u4e14\u5c0f\u4e8eminR*expandRate^3/2\u65f6\uff0c\u8f6c\u4e3a\u4e03\u5355\u5143clump\uff0c\u5f53\u534a\u5f84\u5927\u4e8eminR*expandRate^3/2\u65f6\uff0c\u91c7\u7528discObj=mfs.denseModel0(Rrate,@mfs.makeDiscV,grainR,ballR1);\u751f\u6210\u5706\u76d8clump</p> <p>\u6240\u6709\u9897\u7c92\u5355\u5143\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bgroupId\uff0c\u4ee5\u4fbf\u8fdb\u4e00\u6b65\u5bfc\u5165\u751f\u6210clump</p> <p>\u89c1user_ClumpParticle2</p> <p>porosity=getPorosity(B,zLimit)</p> <p>\u8ba1\u7b97z\u65b9\u5411\u5c0f\u4e8ezLimit\u7684\u5b54\u9699\u7387\uff08\u5229\u7528get2DPorosity\u6216get3DPorosity</p> <p>B\u5bf9\u8c61\uff0czLimit\uff1aZ\u65b9\u5411\u7684\u4e0a\u9650</p> <p>porosity=get3DPorosity(d,x1,x2,y1,y2,z1,z2)</p> <p>\u8ba1\u7b97\u4e09\u7ef4sample\u4e00\u5b9a\u533a\u57df\u5185\u7684\u5b54\u9699\u7387</p> <p>d\u5bf9\u8c61\uff1bx1,x2,y1,y2,z1,z2\u8ba1\u7b97\u5b54\u9699\u7387\u7684\u533a\u57df</p> <p>porosity=get2DPorosity(d,x1,x2,z1,z2)</p> <p>\u8ba1\u7b97\u4e8c\u7ef4sample\u4e00\u5b9a\u533a\u57df\u5185\u7684\u5b54\u9699\u7387\uff0c\u5f53d.SET.ballArea\u5b58\u5728\u65f6\uff0c\u4f7f\u7528\u5176\u8ba1\u7b97\u9897\u7c92\u9762\u79ef\uff0c\u53cd\u4e4b\uff0c\u5219\u7528sample</p> <p>d\u5bf9\u8c61\uff1bx1,x2,z1,z2\u8ba1\u7b97\u5b54\u9699\u7387\u7684\u533a\u57df</p> <p>porosity=getBoxPorosity(B,topRate)</p> <p>\u83b7\u5f97\u6a21\u578b\u7bb1\u4e0b\u65b9\u4e00\u5b9a\u6bd4\u4f8b\u533a\u57df\u7684\u5b54\u9699\u7387</p> <p>B\u5bf9\u8c61\uff1btopRate\u6bd4\u4f8b\uff0c\u4e3a1\u65f6\uff0c\u5219\u8ba1\u7b97\u6574\u4e2a\u6a21\u62df\u7bb1</p> <p>[data,B]=testSpeed(num,balanceCommand,isSingle)</p> <p>\u7528\u4e8e\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u901f\u5ea6</p> <p>num:\u6a21\u578b\u5728\u4e09\u4e2a\u65b9\u5411\u4e0a\u7684\u5355\u5143\u4e2a\u6570\uff1bbalanceCommand\u5e73\u8861\u547d\u4ee4\uff1bisSingle\u662f\u5426\u5355\u7cbe\u5ea6</p> <p>data\u6d4b\u8bd5\u7ed3\u679c\uff0cB\u5bf9\u8c61</p> <p>\u89c1user_BoxTestSpeed</p> <p>porosity=get2DPorosity(d,x1,x2,z1,z2)</p> <p>\u8ba1\u7b97\u4e8c\u7ef4\u6a21\u578b\u7684\u5b54\u9699\u7387</p> <p>d\u5bf9\u8c61\uff1b\u5176\u5b83\u4e3a\u5750\u6807</p> <p>\u5b54\u9699\u7387</p> <p>porosity=get3DPorosity(d,x1,x2,y1,y2,z1,z2)</p> <p>\u8ba1\u7b97\u4e09\u7ef4\u6a21\u578b\u7684\u5b54\u9699\u7387</p> <p>d\u5bf9\u8c61\uff1b\u5176\u5b83\u4e3a\u5750\u6807</p> <p>\u5b54\u9699\u7387</p> <p>porosity=getPorosity(B,zLimit)</p> <p>\u8ba1\u7b97Box\u5b54\u9699\u7387\uff08\u4ece\u5e95\u90e80\u5230zLimit\u95f4\uff09</p> <p>B\u5bf9\u8c61; zLimit:\u8ba1\u7b97Box\u5b54\u9699\u7387\u7684\u9ad8\u5ea6</p> <p>\u5b54\u9699\u7387</p> <p>BoxCompaction</p> <p>frame=getObjFrame(obj)</p> <p>\u83b7\u53d6\u7ed3\u6784\u4f53\u5728\u516d\u4e2a\u65b9\u5411\u7684\u8fb9\u754c\uff0c\u4ee5\u53ca\u5bbd\u957f\u9ad8</p> <p>\u6a21\u578b\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u4fe1\u606f\uff1aX, Y, Z, R</p> <p>\u7ed3\u6784\u4f53frame,\u5305\u62ec\u4fe1\u606f\uff1aleft, right, front back, bottom, top, width, length, height</p> <p>sFilter=applyRegionFilter(regionFilter,sX,sY)</p> <p>\u5e94\u7528mfs.image2RegionFilter\u751f\u6210\u7684\u77e9\u9635\u6765\u8fc7\u6ee4\u5355\u5143\uff0c\u5f97\u5230\u5355\u5143\u8fc7\u6ee4\u77e9\u9635</p> <p>regionFilter:\u5e03\u5c14\u77e9\u9635; sX, sY:\u5355\u5143x, y\u5750\u6807</p> <p>\u5355\u5143\u8fc7\u6ee4\u5668</p> <p>\u89c1user_Box3DSlope2</p> <p>regionFilter=image2RegionFilter(fileName,imH,imW)</p> <p>\u6839\u636e\u56fe\u7247\u751f\u6210imH*imW\u7684\u5e03\u5c14\u77e9\u9635\uff0c\u56fe\u4e2d\u767d\u8272\u4e3atrue</p> <p>fileName: \u56fe\u7247\u6587\u4ef6\u540d\u5b57\u7b26\u4e32\uff08\u5305\u542b\u8def\u5f84\uff09; imH, imW: \u751f\u6210\u7684\u77e9\u9635\u7684\u9ad8\u548c\u5bbd</p> <p>\u533a\u5757\u5e03\u5c14\u77e9\u9635</p> <p>\u89c1user_Box3DSlope3</p> <p>bondFilter=setBondByPolygon(d,PX,PY,PZ,type)</p> <p>\u5229\u7528\u591a\u9876\u70b9\u5b9a\u4e49\u7684\u591a\u8fb9\u5f62\u9762\u6765\u5207\u5272\u6216\u80f6\u7ed3\u6a21\u578b</p> <p>d:build\u5bf9\u8c61;pX,pY,pZ,\u7a7a\u95f4\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5750\u6807\uff0c\u5982[1;2;3],[4;5;6],[7;8;8]\uff1btype:\u53ef\u4e3a'break'(\u65ad\u5f00\u8fde\u63a5\uff09\uff0c'glue'\uff08\u80f6\u7ed3\u8fde\u63a5\uff09\uff0c'no'\u4e0d\u6539\u53d8d\u4e2d\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u4ec5\u8fd4\u56debondFilter</p> <p>\u5bf9\u5e94\u4e8enBall\u7684\u8fde\u63a5\u77e9\u9635\uff0c\u503c\u4e3a1\u4ee3\u8868\u4e09\u89d2\u9762\u6709\u901a\u8fc7\u8fde\u63a5</p> <p>\u89c1user_Box3DJointStress</p> <p>bondFilter=setBondByTriangle(d,pX,pY,pZ,type)</p> <p>\u7528\u4e09\u4e2a\u9876\u70b9\u5b9a\u4e49\u7684\u4e09\u89d2\u9762\u6765\u5207\u5272\u6216\u80f6\u7ed3\u6a21\u578b</p> <p>d:build\u5bf9\u8c61;pX,pY,pZ,\u7a7a\u95f4\u4e09\u89d2\u9762\u4e09\u4e2a\u9876\u70b9\u5750\u6807\uff0c\u5982[1;2;3;4],[4;5;6;7],[7;8;9;10]\uff1btype:\u53ef\u4e3a'break'(\u65ad\u5f00\u8fde\u63a5\uff09\uff0c'glue'\uff08\u80f6\u7ed3\u8fde\u63a5\uff09\uff0c'no'\u4e0d\u6539\u53d8d\u4e2d\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u4ec5\u8fd4\u56debondFilter</p> <p>\u5bf9\u5e94\u4e8enBall\u7684\u8fde\u63a5\u77e9\u9635\uff0c\u503c\u4e3a2\u4ee3\u8868\u4e09\u89d2\u9762\u6709\u901a\u8fc7\u8fde\u63a5</p> <p>\u89c1user_Box3DJointStress\uff0ctype\u4e3a'glue'\u65f6\u9700\u518d\u8fd0\u884cd.mo.zeroBalance();</p> <p>[obj1,obj2]=divideObj(obj,pX,pY,pZ)</p> <p>\u7528\u4e09\u4e2a\u9876\u70b9\u5b9a\u4e49\u7684\u4e09\u89d2\u9762\u6765\u5207\u5206\u7ed3\u6784\u4f53\uff0c\u751f\u6210\u4e24\u4e2a\u7ed3\u6784\u4f53</p> <p>obj:\u521d\u59cb\u7ed3\u6784\u4f53\u6a21\u578b;pX,pY,pZ:\u4e09\u89d2\u5f62\u5750\u6807\u6570\u7ec4\uff08\u5217\u65b9\u5411\u6570\u7ec4\uff09</p> <p>\u5207\u5272\u51fa\u7684\u4e24\u4e2a\u65b0\u7ed3\u6784\u4f53</p> <p>ObjOut=rotateCopy(obj,dAngle,num,varargin)</p> <p>\u7ed3\u6784\u4f53\u4ee5\u539f\u70b9\u4e3a\u4e2d\u5fc3\u5728XY\u5e73\u9762\u4e0a\u65cb\u8f6c\u590d\u5236</p> <p>obj:\u521d\u59cb\u7ed3\u6784\u4f53\u6a21\u578b;dAngle:\u65cb\u8f6c\u89d2\u5ea6;num:\u6b21\u6570;varargin:0\u62161 \u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u5b57\u7b26\u4e32\uff0c\u53ef\u53d6'XY','YZ','XZ'\uff0c\u65e0\u8f93\u5165\u53c2\u6570\u65f6\u5728'XY'\u5e73\u9762\u65cb\u8f6c</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>\u89c1user_BoxShear</p> <p>ringObj=makeRing2(innerR,outerR,ballR0,Rrate)</p> <p>\u7528\u7b49\u5927\u7684\u5355\u5143\u5236\u4f5c\u73af\u5f62</p> <p>innerR:\u73af\u5185\u5f84;outerR:\u73af\u5916\u5f84;ballR:\u5355\u5143\u534a\u5f84;Rrate:\u5355\u5143\u95f4\u8ddd\u548c\u76f4\u5f84\u6bd4</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>\u89c1user_BoxShear</p> <p>edge=getObjEdge(type,obj1)</p> <p>\u83b7\u53d6\u7ed3\u6784\u4f53\u6a21\u578b\u5728\u67d0\u4e00\u65b9\u5411\u7684\u8fb9\u754c</p> <p>type:\u5b57\u7b26\u4e32\uff0c\u53ef\u53d6\u2018left\u2019,\u2018right\u2018,\u2019front\u2018,\u2019back\u2018,\u2019bottom\u2018,\u2019top\u2018;obj1:\u7ed3\u6784\u4f53</p> <p>\u8fb9\u754c\u7684\u5750\u6807\u503c</p> <p>\u89c1user_BoxShear</p> <p>obj1=align2Value(type,obj1,value)</p> <p>\u5c06\u7ed3\u6784\u4f53\u6a21\u578b\u7684\u5bf9\u9f50\u5230\u67d0\u4e00\u4f4d\u7f6e</p> <p>type:\u5b57\u7b26\u4e32\uff0c\u53ef\u53d6\u2018left\u2019,\u2018right\u2018,\u2019front\u2018,\u2019back\u2018,\u2019bottom\u2018,\u2019top\u2018;obj1:\u7ed3\u6784\u4f53;value:\u5750\u6807\u503c</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>\u89c1user_BoxShear</p> <p>varargout=alignObj(type,varargin)</p> <p>\u5c06\u591a\u4e2a\u7ed3\u6784\u4f53\u6a21\u578b\u6cbf\u67d0\u4e00\u4fa7\u5bf9\u9f50</p> <p>type:\u5b57\u7b26\u4e32\uff0c\u53ef\u53d6\u2018left\u2019,\u2018right\u2018,\u2019front\u2018,\u2019back\u2018,\u2019bottom\u2018,\u2019top\u2018;varargin:\u591a\u4e2a\u7ed3\u6784\u4f53</p> <p>\u6309\u987a\u5e8f\u8fd4\u56de\u591a\u4e2a\u7ed3\u6784\u4f53</p> <p>[obj1,obj2]=mfs.alignObj('left',obj1,obj2);</p> <p>ringObj=makeRing(innerR,layerNum,minBallR,Rrate)</p> <p>\u751f\u6210\u4e00\u4e2a\u4e8c\u7ef4\u7684\u73af\uff0c\u7528\u4e8e\u505a\u96a7\u9053</p> <p>innerR:\u73af\u5185\u5f84;layerNum:\u73af\u5f84\u5411\u5355\u5143\u4e2a\u6570;minBallR:\u6700\u5c0f\u5355\u5143\u534a\u5f84;Rrate:\u5355\u5143\u95f4\u8ddd\u548c\u76f4\u5f84\u6bd4</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>user_TunnelNew</p> <p>mixGroupElement(d,gName,randPositionSeed)</p> <p>\u5c06\u6307\u5b9a\u7ec4\u7684\u5355\u5143\u968f\u673a\u4e92\u6362\u4f4d\u7f6e\uff0c\u4ece\u800c\u5f97\u5230\u65b0\u7684\u5806\u79ef</p> <p>d:build\u5bf9\u8c61;gName:\u7ec4\u540d\u5b57\u7b26\u4e32;randPosition:\u968f\u673a\u79cd\u5b50\u6570\u5b57</p> <p>\u65e0</p> <p>user_BoxUniaxialTest</p> <p>note=balanceForce(d, Amax, num)</p> <p>\u5e73\u8861\u6a21\u578b\u76f4\u81f3\u6700\u5927\u52a0\u901f\u5ea6\u5c0f\u4e8eAmax\uff0c\u6216\u5e73\u8861\u8fbe\u5230num\u6b21\u5faa\u73af</p> <p>d:build\u5bf9\u8c61;Amax:\u6700\u5927\u52a0\u901f\u5ea6;num:\u5e73\u8861\u5faa\u73af\u6b21\u6570\uff0c\u5e73\u8861\u6b21\u6570\u4e3a100*num</p> <p>\u5173\u4e8e\u5e73\u8861\u8ba1\u7b97\u7684\u4fe1\u606f\u5b57\u7b26\u4e32</p> <p>obj1=combineObj(varargin)</p> <p>\u5c06\u591a\u4e2a\u7ed3\u6784\u4f53\u5408\u5e76\u4e00\u4e2a</p> <p>varargin:\u7528\u4e8e\u5408\u5e76\u7684\u591a\u4e2a\u7ed3\u6784\u4f53</p> <p>\u5408\u5e76\u5f97\u5230\u7684\u7ed3\u6784\u4f53</p> <p>obj=cutBoxObj(sampleObj, width, length, height)</p> <p>\u4ece\u6837\u54c1\u5bf9\u8c61\u4e2d\u5207\u53d6\u7279\u5b9a\u957f\u5bbd\u9ad8\u7684\u5757\u4f53\uff0c\u539f\u70b9\u4e3a\u4e2d\u5fc3</p> <p>sampleObj:\u6837\u54c1\u7ed3\u6784\u4f53; width,length,height:\u5207\u53d6\u7684\u957f\u5bbd\u9ad8</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>obj=cutSphereObj(sampleObj, radius)</p> <p>\u4ece\u6837\u54c1\u5bf9\u8c61\u4e2d\u5207\u53d6\u7279\u5b9a\u534a\u5f84\u7684\u7403\uff0c\u539f\u70b9\u4e3a\u4e2d\u5fc3</p> <p>sampleObj:\u6837\u54c1\u7ed3\u6784\u4f53; radius:\u5207\u53d6\u7684\u7403\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>obj=denseModel(Rrate, F, varargin)</p> <p>\u5c06\u7ed3\u6784\u4f53\u5bf9\u8c61\u52a0\u5bc6\u91cd\u53e0</p> <p>Rrate:\u5355\u5143\u95f4\u8ddd\u548c\u76f4\u5f84\u6bd4\uff0c\u751f\u6210\u7ed3\u6784\u4f53\u7684\u51fd\u6570F\uff0cF\u7684\u8f93\u5165\u53c2\u6570</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>user_BoxSlope2</p> <p>obj=expandAlong(obj, dir, dDis, num)</p> <p>\u6cbf\u6b63\u8d1f\u65b9\u5411\u590d\u5236\u6269\u5c55\u7ed3\u6784\u4f53\u4e2d\u5355\u5143\uff0c\u57fa\u4e8eexpandAlongMax</p> <p>obj:\u7ed3\u6784\u4f53; dir:\u65b9\u5411: dDis:\u95f4\u8ddd; num:\u6b21\u6570</p> <p>\u6269\u5c55\u5f97\u5230\u7684\u7ed3\u6784\u4f53</p> <p>obj=expandAlongMax(obj, dir, dDis, num)</p> <p>\u6cbf\u6b63\u503c\u65b9\u5411\u590d\u5236\u6269\u5c55\u7ed3\u6784\u4f53\u4e2d\u5355\u5143</p> <p>obj:\u7ed3\u6784\u4f53; dir:\u65b9\u5411: dDis:\u95f4\u8ddd; num:\u6b21\u6570</p> <p>\u6269\u5c55\u5f97\u5230\u7684\u7ed3\u6784\u4f53</p> <p>obj=filterObj(obj, f)</p> <p>\u5229\u7528\u8fc7\u6ee4\u5668\u9009\u62e9\u7ed3\u6784\u4f53\u4e2d\u5355\u5143\u751f\u6210\u65b0\u7684\u7ed3\u6784\u4f53</p> <p>obj:\u5355\u5143\u7ed3\u6784\u4f53; f:\u8fc7\u6ee4\u5668\u5e03\u5c14\u77e9\u9635\uff08\u503c\u4e3a1\u5219\u9009\u4e2d\uff09</p> <p>\u8fc7\u6ee4\u540e\u7684\u7ed3\u6784\u4f53</p> <p>stressSteps=getBoxUniaxialStressSteps(B)</p> <p>\u6839\u636eB\u4e2d\u7684\u6750\u6599\u5c5e\u6027\u8ba1\u7b97\u529b\u5b66\u6d4b\u8bd5\u7684\u5e94\u529b\u6b65</p> <p>B:Box\u5bf9\u8c61</p> <p>\u5305\u62ec\u5f39\u6027\u3001\u6297\u62c9\u548c\u6297\u538b\u8bd5\u9a8c\u5e94\u529b\u6b65\u7684\u7ed3\u6784\u4f53</p> <p>user_BoxMatTraining</p> <p>filter=getColumnFilter(X, Y, Z, dipD, dipA, radius, height)</p> <p>\u5207\u51fa\u67f1\u5f62\u7684\u5355\u5143\u8fc7\u6ee4\u5668</p> <p>X,Y,Z:\u5750\u6807; dipD:\u503e\u5411; dipA:\u503e\u89d2; radius:\u5706\u67f1\u534a\u5f84; height:\u5706\u67f1\u9ad8\u5ea6</p> <p>\u8fc7\u6ee4\u5668\u5e03\u5c14\u77e9\u9635</p> <p>objCenter=getObjCenter(obj)</p> <p>\u83b7\u53d6\u5bf9\u8c61\u7684\u4e2d\u5fc3</p> <p>obj:\u6a21\u578b\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u4fe1\u606f\uff1aX, Y, Z, R</p> <p>\u5305\u62ec\u4e2d\u5fc3x,y,z\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>weakFilter=getWeakLayerFilter(X, Y, Z, dipD, dipA, strongT, weakT)</p> <p>\u5efa\u7acb\u5f3a\u5f31\u4e92\u5c42\u5355\u5143\u8fc7\u6ee4\u5668</p> <p>X,Y,Z:\u5355\u5143\u5750\u6807; dipD:\u503e\u5411; dipA:\u503e\u89d2; strongT:\u5f3a\u5c42\u539a; weakT:\u5f31\u5c42\u539a</p> <p>\u5f31\u5c42\u7684\u8fc7\u6ee4\u5668\u77e9\u9635</p> <p>SET=getBoxSample(grainR,sampleW,sampleL,hRate)</p> <p>\u6839\u636e\u534a\u5f84\u6570\u7ec4\u5f97\u5230Box\u6a21\u578b\u6240\u9700\u7684\u53c2\u6570</p> <p>grainR:\u534a\u5f84\u6570\u7ec4\uff1bsampleW,sampleL\u6a21\u578b\u5bbd\u548c\u957f\uff0chRate\u9ad8\u5ea6\u6bd4\u7387\uff08\u6bd41\u7565\u5927\uff09\uff0chRate\u4e3a1\u65f6\uff0c\u5219\u8fd4\u56de\u7684\u6a21\u578b\u53c2\u6570\u4e2dsampleH\u4e3a\u8fd9\u4e9b\u9897\u7c92\u521a\u597d\u9700\u8981\u7684\u5bb9\u5668\u9ad8\u5ea6\uff0c\u5f53\u8fd9\u4e2a\u503c\u589e\u5927\u65f6\uff0c\u5219\u5bb9\u5668\u9ad8\u5ea6\u6b63\u6bd4\u589e\u52a0</p> <p>Box\u6a21\u578b\u8bbe\u7f6e\u7ed3\u6784\u4f53</p> <p>user_HighSizeRatio.m</p> <p>randD=getGradationDiameter(G,varargin)</p> <p>\u6839\u636e\u7c92\u5f84\u7ea7\u914d\u5f97\u5230\u5355\u5143\u7c92\u5f84\u6570\u7ec4</p> <p>G:\u7ea7\u914d\u6570\u636e\uff1bvarargin:\u4e00\u4e2a\u53c2\u6570\u65f6\u4e3a\u4f53\u79ef\uff0c\u4e24\u4e2a\u53c2\u6570\u65f6\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u4f53\u79ef\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u7ea7\u914d\u66f2\u7ebf\u7684\u7c7b\u578b\uff0c\u5176\u51b3\u5b9a\u5728\u4e00\u4e2a\u7c92\u5f84\u8303\u56f4\u5185\u9897\u7c92\u66f2\u7ebf\u7684\u53d8\u5316\uff0c\u901a\u5e38\u5728-1\u52303\u4e4b\u95f4\uff0c\u5176\u8f83\u5c0f\u65f6\u7ea7\u914d\u66f2\u7ebf\u4e0b\u51f8\uff0c\u8f83\u5927\u65f6\u4e0a\u51f8\u3002\u53d6-1\u65f6\uff08\u9ed8\u8ba4\uff09\uff0c\u5219\u6bcf\u4e2a\u7c92\u5f84\u5bf9\u5e94\u7684\u9897\u7c92\u6570\u4e00\u81f4\uff0c\u7ec6\u5355\u5143\u8f83\u5c11\uff1b\u53d63\u65f6\uff0c\u5219\u6bcf\u4e2a\u7c92\u5f84\u5bf9\u5e94\u7684\u9897\u7c92\u603b\u4f53\u79ef\u4e00\u81f4\uff0c\u7ec6\u5355\u5143\u8f83\u591a\u3002</p> <p>\u7c92\u5f84\u6570\u7ec4</p> <p>user_HighSizeRatio.m</p> <p>obj=intervalObj(objOne, dx, dy, dz, num)</p> <p>\u6cbfdx,dy,dz\u7684\u95f4\u9694\u91cd\u590d\u751f\u6210num\u4e2a\u7684objOne</p> <p>objOne:\u5355\u4e2a\u7ed3\u6784\u4f53; dx,dy,dz\u95f4\u9694; num:\u751f\u6210\u4e2a\u6570</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>obj=make3DalongPath(obj2D,X,Y,Z,dDis,dAngle)</p> <p>\u5c06\u4e8c\u7ef4\u7269\u4f53\u6cbf\u7740\u8def\u5f84XYZ\u4f38\u6210\u4e09\u7ef4\uff08\u8def\u5f84\u8981\u7cbe\u7ec6\uff09</p> <p>obj2D:\u4e8c\u7ef4\u7269\u4f53\u7ed3\u6784\u4f53\uff1bX,Y,Z\uff1a\u8def\u5f84\u7684\u5750\u6807\uff1bdDis\uff1a\u590d\u5236\u79fb\u52a8\u8ddd\u79bb\uff1bdAngle\uff1a\u590d\u5236\u65cb\u8f6c\u89d2\u5ea6</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>\u89c1\u793a\u4f8buser_Cable\uff0c\u6e90\u4ee3\u7801\u89c1fun/make3DalongPath.m</p> <p>obj3D=make3Dfrom2D(obj2D, height, ballR)</p> <p>\u5c06\u4e8c\u7ef4\u7684\u7269\u4f53\u62c9\u4f38\u6210\u4e09\u7ef4\uff0c\u5982\u5c06circle\u62c9\u6210tube</p> <p>obj2D:\u4e8c\u7ef4\u7269\u4f53\u7ed3\u6784\u4f53\uff1bheight:\u62c9\u6210\u4e09\u7ef4\u4f53\u7684\u9ad8\uff1bballR:\u5355\u5143\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>obj=makeBox(boxW, boxL, boxH, ballR)</p> <p>\u505a\u4e00\u4e2a\u5757\u4f53\u7ed3\u6784\u4f53</p> <p>\u5bbd\uff0c\u957f\uff0c\u9ad8\uff0c\u5355\u5143\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>user_BoxSlope3</p> <p>obj=makeCircle(circleR, ballR)</p> <p>\u505a\u5706\u5708\u7684\u7ed3\u6784\u4f53</p> <p>circleR:\u5706\u7684\u534a\u5f84\uff1bballR:\u5355\u5143\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>obj=makeColumn(columnR, columnHeight, ballR)</p> <p>\u505a\u4e00\u4e2a\u67f1\u4f53\u7ed3\u6784\u4f53</p> <p>columnR:\u5706\u67f1\u534a\u5f84; columnHeight:\u5706\u67f1\u9ad8\u5ea6; ballR:\u5355\u5143\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>obj=makeDisc(discR, ballR)</p> <p>\u505a\u4e00\u4e2a\u4e8c\u7ef4\u5706\u7ed3\u6784\u4f53</p> <p>discR:\u5706\u76d8\u7684\u534a\u5f84\uff1bballR:\u5355\u5143\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>obj=makeHob(hobR, hobT, cutRate, ballR, Rrate)</p> <p>\u751f\u6210\u4e00\u4e2a\u6eda\u5200\u7ed3\u6784\u4f53</p> <p>hobR:\u6eda\u5200\u534a\u5f84; hobT:\u539a\u5ea6; cutRate:\u5200\u53e3\u503e\u659c\u5ea6\uff08\u8d8a\u5927\u8d8a\u5c16\uff09; ballR:\u5355\u5143\u534a\u5f84; Rrate:\u5355\u5143\u95f4\u8ddd\u548c\u76f4\u5f84\u6bd4</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>hob=mfs.makeHob(hobR,hobT,cutRate,ballR,Rrate);</p> <p>obj=makeLine(dir, length, ballR)</p> <p>\u6cbfX,Y,Z\u67d0\u4e00\u65b9\u5411\u751f\u6210\u4e00\u6761\u7ebf</p> <p>dir:\u65b9\u5411\uff0c\u53ef\u53d6\u5b57\u7b26\u4e32'X','Y','Z'; length:\u957f\u5ea6; ballR:\u5355\u5143\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>mfs.makeLine('X',1,0.05);</p> <p>obj=makeLShape(width, height, ballR)</p> <p>\u751f\u6210\u4e00\u4e2aL\u5f62\u7684\u6761\uff08\u7528\u4e8e\u505a\u7f51\uff09</p> <p>width:\u5bbd; length: \u957f; ballR:\u5355\u5143\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>obj=makeNet(width, height, cellW, cellH, ballR)</p> <p>\u6839\u636e\u7f51\u7684\u957f\u5bbd\uff0c\u7f51\u773c\u7684\u957f\u5bbd\u548c\u5355\u5143\u534a\u5f84\u751f\u6210\u7f51</p> <p>width:\u5bbd; height: \u9ad8; cellW:\u7f51\u773c\u5bbd; cellH:\u7f51\u773c\u9ad8; ballR:\u5355\u5143\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>a=mfs.makeNet(100,100,10,10,1);fs.showObj(a);</p> <p>obj=makeRect(width, length, ballR)</p> <p>\u505a\u4e00\u4e2a\u5e73\u9762\u957f\u65b9\u5f62\u7ed3\u6784\u4f53</p> <p>width:\u5bbd; length: \u957f; ballR: \u5355\u5143\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>obj=makeTube(tubeR, tubeHeight, ballR)</p> <p>\u505a\u7ba1\u5b50\u7ed3\u6784\u4f53\uff0c\u56db\u8fb9\u5f62\u5806\u79ef</p> <p>tubeR:\u7ba1\u5b50\u534a\u5f84; tubeHeight:\u957f; ballR:\u5355\u5143\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>obj=makeTube2(tubeR,tubeHeight,ballR)</p> <p>\u505a\u7ba1\u5b50\u7ed3\u6784\u4f53\uff0c\u516d\u8fb9\u5f62\u5806\u79ef</p> <p>tubeR:\u7ba1\u5b50\u534a\u5f84; tubeHeight:\u957f; ballR:\u5355\u5143\u534a\u5f84</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>Cu=makeUniaxialCuTest(B, stressSteps)</p> <p>\u6839\u636estressSteps\u8fdb\u884cB\u7684\u5355\u8f74\u538b\u7f29\u8bd5\u9a8c</p> <p>B: Obj_Box\u5bf9\u8c61; stressSteps:\u5e94\u529b\u6b65</p> <p>\u5355\u8f74\u6297\u538b\u5f3a\u5ea6Cu\u4fe1\u606f</p> <p>user_BoxMatTraining</p> <p>Ev=makeUniaxialEvTest(B, stressSteps)</p> <p>\u6839\u636estressSteps\u8fdb\u884cB\u7684\u5f39\u6027\u6a21\u91cf\u8bd5\u9a8c</p> <p>B:f\uff1bstressSteps:\u5355\u5143\u534a\u5f84</p> <p>\u5f39\u6027\u6a21\u91cfEv\u4fe1\u606f</p> <p>user_BoxMatTraining</p> <p>B=makeUniaxialTest(B, varargin)</p> <p>\u81ea\u52a8\u8fdb\u884c\u5355\u8f74\u529b\u5b66\u6d4b\u8bd5\uff0c\u538b\u7f29\uff0c\u6297\u4f38\u548cEv\u6d4b\u8bd5\uff0c\u8ba1\u7b97\u5bc6\u5ea6\uff0cuser_BoxMatTraining</p> <p>B:Obj_Box\u5bf9\u8c61; varargin:0\u62161\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u4e3a1\u65f6\u53ef\u53d6'Cu','Tu','Ev',\u5e76\u8fdb\u884c\u76f8\u5173\u6d4b\u8bd5\uff0c\u4e3a0\u65f6\u8fdb\u884c\u4ee5\u4e0a\u4e09\u79cd\u6d4b\u8bd5\uff0c\u53c2\u8003user_BoxMatTraining</p> <p>Obj_Box\u5bf9\u8c61</p> <p>user_BoxMatTraining</p> <p>B=makeUniaxialTestModel0(width, length, height, ballR, distriRate, randSeed)</p> <p>\u5355\u8f74\u6d4b\u8bd5\u521d\u59cb\u5efa\u6a21</p> <p>width,length,height:\u6a21\u578b\u5bbd\u957f\u9ad8;ballR:\u534a\u5f84;distriRate:\u5355\u5143\u534a\u5f84\u5206\u6563\u7cfb\u6570;randSeed:\u968f\u673a\u79cd\u5b50</p> <p>Obj_Box\u5bf9\u8c61</p> <p>user_BoxMatTraining</p> <p>B=makeUniaxialTestModel1(B)</p> <p>\u5bf9makeUniaxialTestModel0\u751f\u6210\u7684\u6a21\u578b\u8fdb\u884c\u91cd\u529b\u5806\u79ef</p> <p>B:Obj_Box\u5bf9\u8c61</p> <p>Obj_Box\u5bf9\u8c61</p> <p>user_BoxMatTraining</p> <p>B=makeUniaxialTestModel2(B,matFile,varargin)</p> <p>\u5bf9makeUniaxialTestModel1\u751f\u6210\u7684\u6a21\u578b\u8fdb\u884c\u8d4b\u6750\u6599</p> <p>B:Obj_Box\u5bf9\u8c61; matFile: \u6a21\u578b\u6750\u6599\uff08\u53ef\u4e3a\u6587\u4ef6\u540d\u6216material\u5bf9\u8c61\uff09;varargin:\u53ef\u8f93\u5165\u6750\u6599\u7684rate\u53c2\u6570\uff0c\u6765\u5b9a\u4e49material\u5b8f\u89c2\u53c2\u6570\u7cfb\u6570\uff08\u89c1material.rate)</p> <p>Obj_Box\u5bf9\u8c61</p> <p>user_BoxMatTraining</p> <p>B=makeUniaxialTuTest(B, stressSteps)</p> <p>\u6839\u636estressSteps\u8fdb\u884cB\u7684\u5355\u8f74\u62c9\u4f38\u8bd5\u9a8c</p> <p>B: Obj_Box\u5bf9\u8c61; stressSteps:\u5e94\u529b\u6b65</p> <p>Obj_Box\u5bf9\u8c61</p> <p>user_BoxMatTraining</p> <p>obj=move(obj, varargin)</p> <p>\u79fb\u52a8\u7ed3\u6784\u4f53</p> <p>obj:\u7ed3\u6784\u4f53;varargin:1\u4e2a\u8f93\u5165\u53c2\u6570\u65f6\u4e3a\u5750\u6807\u6570\u7ec4P[x,y,z]\uff0c3\u4e2a\u53c2\u6570\u4e3ax,y,z\u5750\u6807</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>user_BoxShear</p> <p>obj=moveObj2Origin(obj)</p> <p>\u5c06\u5bf9\u8c61\u7684\u4e2d\u5fc3\u79fb\u5230\u539f\u70b9</p> <p>obj:\u6837\u54c1\u7ed3\u6784\u4f53\uff0c\u5305\u62ecX,Y,Z,R\u4fe1\u606f</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>mfs.moveObj2Origin(a);</p> <p>d=Obj2Build(obj, varargin)</p> <p>\u5c06\u4e00\u4e2aObj\u7ed3\u6784\u4f53\u8f6c\u5316\u4e3abuild\u5bf9\u8c61</p> <p>obj:\u6837\u54c1\u7ed3\u6784\u4f53; varargin:\u53ef\u9009\u53c2\u6570\uff0c\u5b9a\u4e49build\u4e2d\u7684mNum</p> <p>build\u5bf9\u8c61</p> <p>reduceGravity(d, index)</p> <p>\u9010\u6b65\u51cf\u5c11\u6a21\u578b\u4e2d\u7684\u5355\u5143\u91cd\u529b\uff0c\u6bcf\u6b21\u9664\u4ee510\uff0c\u518d\u5e73\u8861200\u6b21\uff0c\u6700\u540e\u6807\u51c6\u5e73\u8861\u4e00\u6b21</p> <p>d: build\u5bf9\u8c61; index:\u9664\u4ee510\u7684\u6b21\u6570</p> <p>\u65e0</p> <p>\u89c1\u793a\u4f8b\u7b2c\u4e00\u6b65</p> <p>obj=rotate(obj, type, angle)</p> <p>\u5c06\u7ed3\u6784\u4f53\u6cbf\u7279\u5b9a\u65b9\u5411\u8f6c\u5230\u4e00\u5b9a\u89d2\u5ea6</p> <p>\u7ed3\u6784\u4f53\uff0c\u65b9\u5411\uff08'XY','YZ','XZ'\uff09\uff0c\u89d2\u5ea6</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>\u5728\u4e8c\u7ef4\u6a21\u578b\u4e2d\uff0c\u65cb\u8f6c\u540e\u518d\u8fd0\u884cd.mo.aY(:)=0\uff0c\u9632\u6b62\u6d6e\u70b9\u8bef\u5dee\u51fa\u9519</p> <p>show(obj)</p> <p>\u663e\u793a\u7ed3\u6784\u4f53\uff0c\u7ed3\u6784\u4f53\u4e2d\u5305\u542bX,Y,Z,R,gId\u4fe1\u606f\uff0c\u6839\u636egId\u663e\u793a\u989c\u8272</p> <p>obj:\u7ed3\u6784\u4f53</p> <p>\u65e0</p> <p>sorting(D, divNum)</p> <p>\u83b7\u5f97\u5355\u5143\u76f4\u5f84\u5206\u5e03\uff0c\u5e76\u753b\u56fe</p> <p>D:\u5355\u5143\u76f4\u5f84\u6570\u7ec4; divNum:\u5206\u5272\u6570</p> <p>\u5305\u542b\u5206\u9009\u7cfb\u6570\u7b49\u7684\u7ed3\u6784\u4f53</p> <p>obj=createSurfaceNet(x,y,z,ballR,Rrate,varargin)</p> <p>%x,y,z: DEM scattered data. %ballR: the uniform radius of elements. %Rrate: the ratio of the distance between two elements to their diameter. %varargin: 1 parameter, the uniform width of the margins to be clipped; %          2 parameters, the widths of the margins to be clipped, left and right, top and bottom, respectively; %          4 parameters, the widths of the margins to be clipped, left, right, top, bottom, respectively.</p> <p>user_createSurfaceNet</p> <p>0\u4ee5\u4e0b\u4e3a\u7a0b\u5e8f\u5185\u90e8\u51fd\u6570\uff0c\u901a\u5e38\u4e0d\u76f4\u63a5\u4f7f\u7528</p> <p>boxCut(obj, box)</p> <p>*</p> <p>calculateParaRate(matFile, para1)</p> <p>\u8ba1\u7b97\u8f93\u5165\u548c\u5b9e\u6d4b\u529b\u5b66\u53c2\u6570\u7684\u6bd4\u503c\uff0c\u7528\u5728UnaxialTest\u4e2d*</p> <p>changeRadiusDistribution(d, randSeed)</p> <p>\u6682\u65f6\u4e0d\u53ef\u7528</p> <p>clearObj(obj)</p> <p>\u6e05\u7406\u7ed3\u6784\u4f53\uff0c\u5c06\u6240\u6709\u53c2\u6570\u8bbe\u4e3a\u7a7a\uff3b\uff3d</p> <p>connectFilter=groupConnectFilter(nBall,G1_gId,G2_gId)</p> <p>%get the connection filter bewteen two group</p> <p>connectFilter=groupOuterConnectFilter(nBall,G1_gId)</p> <p>convertDir(dirIn)</p> <p>*</p> <p>crossProduct(AX, AY, AZ, BX, BY, BZ)</p> <p>\u53c9\u4e58\u8fd0\u7b97</p> <p>data2D(XYZ, Y0, R0)</p> <p>*</p> <p>defineBoundary(varargin)</p> <p>*to be deleted in future</p> <p>getBoxBoundary(type, boundaryRrate, BexpandRate, w, l, h, ballR)</p> <p>*</p> <p>getBoxFrame(X, Y, Z, R)</p> <p>*</p> <p>getJointCutFilter(x1, z1, x2, z2, nXI, nZI, nXJ, nZJ, nBall)</p> <p>%using cross product to determine the vector side*</p> <p>group2MatId(aMatId, gId, gIdList, mIdList)</p> <p>*</p> <p>isExist(cellObj, name)</p> <p>*</p> <p>moveMeshGrid(S, moveDis)</p> <p>\u5c06meshgrid\u6cbf\u7740Z\u65b9\u5411\u79fb\u52a8\u4e00\u5b9a\u8ddd\u79bb</p> <p>\u5305\u542bmesh\u7684XYZ\u4fe1\u606f</p> <p>\u89c13DSlope\u793a\u4f8b</p> <p>obj=rotate2Path(obj, P1, P2)</p> <p>\u6cbf\u7740\u8def\u5f84\u65cb\u8f6c*</p> <p>\u5305\u62ecX,Y,Z,R\u4fe1\u606f\u7684\u7ed3\u6784\u4f53</p> <p>rotateIJ(I, J, angle)</p> <p>*</p> <p>setBlockClump(X, Y, Z, limit)</p> <p>*</p> <p>shrink(X0, Y0, Z0, rate)</p> <p>\u5c06\u5750\u6807\u5411\u7269\u4f53\u4e2d\u5fc3\u6536\u7f29</p> <p>XYZ2Plunge(P)</p> <p>*</p> <p>[connectFilter1,connectFilter2]=groupConnectFilter0(nBall,G1_gId,G2_gId)</p> <p>\u83b7\u5f97G1_gId\u548cG2_gId\u5355\u5143\u95f4\u7684\u90bb\u5c45\u8fc7\u6ee4\u5668</p> <p>%connectFilter1: connection filter in first group rows\uff0c  %connectFilter2: connection filter in second group rows</p> <p>[connectFilter1,connectFilter2]=groupOuterConnectFilter0(nBall,G1_gId)</p> <p>%get the connection filter a group with all other elements</p> <p>GForce=getWallGroupForce(d,G1_gId,G2_gId)</p> <p>\u7528\u4e8e\u652f\u6301d.getGroupForce\u51fd\u6570</p> <p>d\u5bf9\u8c61\uff1b\u7ec4Id</p> <p>GForce=getModelGroupForce(d,G1_gId,G2_gId)</p> <p>\u7528\u4e8e\u652f\u6301d.getGroupForce\u51fd\u6570</p> <p>d\u5bf9\u8c61\uff1b\u7ec4Id</p>"},{"location":"api/model/","title":"model","text":"<p>class model</p> Properties <p>&lt;span id=\"model-%&lt;------------    data objects      ------------&gt;\"&gt;%&lt;------------    data objects      ------------&gt;</p> <p>TAG;%structure to record additional information, such as data for debug</p> <p>\u6a21\u62df\u4fe1\u606f\u8bb0\u5f55\uff0c\u7528\u4e8e\u8bb0\u5f55\u548c\u8f93\u51fa\u4fe1\u606f</p> <p>SET;%structure to record running data</p> <p>\u6a21\u62df\u8bbe\u7f6e\u4fe1\u606f\uff0c\u53ef\u8bb0\u5f55\u4e8c\u6b21\u5f00\u53d1\u65b0\u7684\u6570\u636e</p> <p>PAR;%parameters of parallel computing</p> <p>\u7528\u4e8e\u5e73\u884c\u8ba1\u7b97\u7684\u53c2\u6570\uff08\u672a\u542f\u7528\uff09</p> <p>status;%model status</p> <p>\u6a21\u578b\u72b6\u6001</p> <p>dem;%build object</p> <p>\u6bcdbuild\u5bf9\u8c61</p> <p>FnCommand='nFN0=obj.nKNe.*nIJXn;';%command of Fn</p> <p>\u6b63\u5411\u529b\u7684\u5b9a\u4e49\uff0c\u9ed8\u8ba4\u4e3a\u7ebf\u5f39\u6027\u63a5\u89e6\u3002\u91c7\u7528\u5907\u6ce8\u4e2d\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u5b9a\u4e49hertz\u63a5\u89e6\u6a21\u578b\uff0c\u5177\u4f53\u539f\u7406\u53ef\u89c1\u300a\u5730\u8d28\u4e0e\u5ca9\u571f\u5de5\u7a0b\u77e9\u9635\u79bb\u6563\u5143\u5206\u6790\u300b</p> <pre><code>d.mo.isShear=0;\nd.mo.FnCommand='nFN1=obj.nKNe.*nIJXn;\nnR=obj.aR(1:m_Num)*nRow;\nnJR=obj.aR(obj.nBall);\nReq=nR.*nJR./(nR+nJR);\nnE=obj.aKN(1:m_Num)*nRow./(pi*nR);\nnJE=obj.aKN(obj.nBall)./(pi*nJR);\nEeq=nE.*nJE./(nE+nJE);\nnFN2=-4/3*Eeq.*Req.^(1/2).*abs(nIJXn).^(3/2);\nf=nIJXn\uff1c0;\nnFN0=nFN1.*(\uff5ef)+nFN2.*f;';\n</code></pre> <p>balanceCommand</p> <p>\u5e73\u8861\u51fd\u6570\u7684\u547d\u4ee4\uff0c\u7528\u4e8e\u81ea\u5b9a\u4e49\u63a5\u89e6\u6a21\u578b\u548c\u8ba1\u7b97\uff08d.mo.setBalanceFunction\uff09</p> <p>\u89c1Box_Crash1</p> <p>afterBalance</p> <p>\u5728\u8fd0\u884c\u5b8cbalanceCommand\u540e\u8fd0\u884c\u7684\u547d\u4ee4</p> <p>&lt;span id=\"model-%&lt;------------    initial parameters      ------------&gt;\"&gt;%&lt;------------    initial parameters      ------------&gt;</p> <p>aNum;%ball number including boundary balls</p> <p>\u6a21\u578b\u5355\u5143\u548c\u8fb9\u754c\u5355\u5143\u4e2a\u6570\u548c</p> <p>aMatId;</p> <p>\u5355\u5143\u7684\u6750\u6599\u7f16\u53f7</p> <p>aX;aY;aZ;aR;%XYZ components and radius of all balls (model balls and boundary balls)</p> <p>\u6a21\u578b\u5355\u5143\u7684X,Y,Z\u5750\u6807\u548c\u534a\u5f84</p> <p>aKN;aKS;%radius, stiffness of all balls</p> <p>\u5355\u5143\u6b63\u5411\u52b2\u5ea6\u7cfb\u6570\u548c\u5207\u5411\u52b2\u5ea6\u7cfb\u6570</p> <p>aBF;%, breaking force</p> <p>\u5355\u5143\u65ad\u88c2\u529b</p> <p>aFS0;%inter-ball shear resistance, </p> <p>\u5355\u5143\u521d\u59cb\u6297\u526a\u5f3a\u5ea6</p> <p>aMUp;%coefficient of friction</p> <p>\u5355\u5143\u6469\u64e6\u7cfb\u6570</p> <p>mNum;%ball number of model</p> <p>\u6a21\u578b\u6d3b\u52a8\u5355\u5143\u4e2a\u6570</p> <p>mVis;mVisX;mVisY;mVisZ;%viscosity, </p> <p>\u5355\u5143\u963b\u5c3c\u7cfb\u6570</p> <p>\u5f53mVis=[]\u65f6\uff0c\u5c06\u542f\u7528mVisX,Y,Z\uff0c\u5b9e\u73b0\u5404\u5411\u5f02\u6027\u7684\u963b\u5c3c</p> <p>mM;%mass</p> <p>\u5355\u5143\u8d28\u91cf</p> <p>mVX;mVY;mVZ;</p> <p>\u5355\u5143\u5728X,Y,Z\u65b9\u5411\u4e0a\u901f\u5ea6</p> <p>mAX;mAY;mAZ;%acceleration</p> <p>\u5355\u5143\u5728X,Y,Z\u65b9\u5411\u4e0a\u52a0\u901f\u5ea6</p> <p>mVFX;mVFY;mVFZ;%viscous force</p> <p>\u5355\u5143\u5728X,Y,Z\u65b9\u5411\u4e0a\u963b\u5c3c\u529b</p> <p>g;</p> <p>\u91cd\u529b\u52a0\u901f\u5ea6</p> <p>mGX;mGY;mGZ;%mGZ is generally the gravity, GX,GY can be used to define constant load on balls</p> <p>\u5355\u5143\u5728X,Y,Z\u65b9\u5411\u4e0a\u7684\u4f53\u529b\uff0c\u4e5f\u7528\u4e8e\u7ed9\u538b\u529b\u677fplaten\u8bbe\u7f6e\u4f53\u529b\uff0c\u5e76\u4ea7\u751f\u538b\u529b\u4f5c\u7528</p> <p>aHeat;%heat matrix, colomn [Viscosity Heat, Normal Breaking Heat, Shear Breaking Heat, Slipping Heat]</p> <p>\u5355\u5143\u70ed\u91cf</p> <p>&lt;span id=\"model-%&lt;------------    running parameters      ------------&gt;\"&gt;%&lt;------------    running parameters      ------------&gt;</p> <p>\"&gt;%parameters for \"remesh\", i.e. setNearbyBall()\u2192</p> <p>\u7528\u4e8e\u90bb\u5c45\u67e5\u627e\u7684\u53c2\u6570</p> <p>dSide;%border of ball grid, see documentation</p> <p>\u90bb\u5c45\u77e9\u9635\u67e5\u627e\u65f6\u7684\u7f51\u683c\u8fb9\u957f</p> <p>dis_mXYZ;%summation of dmX and dmY of normal balls in balance, trigger of setNearbyBall</p> <p>\u6a21\u578b\u5355\u5143\u5728\u4e0a\u6b21\u90bb\u5c45\u67e5\u627e\u540e\u7684\u4f4d\u79fb</p> <p>dis_bXYZ;%summation of displacement boundary balls in newstep, trigger of setNearbyBall</p> <p>\u8fb9\u754c\u5355\u5143\u5728\u4e0a\u6b21\u90bb\u5c45\u67e5\u627e\u540e\u7684\u4f4d\u79fb</p> <p>dbXYZ;%boundary displacement, used to calculate friction, updated in newStep</p> <p>\u8fb9\u754c\u4f4d\u79fb\uff0c\u7528\u4e8e\u5185\u90e8\u8ba1\u7b97</p> <p>bFilter;%bond filter, n matrix</p> <p>\u80f6\u7ed3\u8fc7\u6ee4\u5668</p> <p>cFilter;%compressive filter</p> <p>\u538b\u7f29\u8fc7\u6ee4\u5668</p> <p>tFilter;%tensile filter</p> <p>\u5f20\u62c9\u8fc7\u6ee4\u5668</p> <p>nBondRate;%remained bond rate</p> <p>\u6b8b\u4f59\u5f3a\u5ea6\u7cfb\u6570\u77e9\u9635\uff0c\u8fde\u63a5\u7684BF\u548cFS0\u5c06\u4e58\u4ee5\u8fd9\u4e2a\u7cfb\u6570\u3002\u53ef\u7528\u4e8e\u8bbe\u7f6e\u8282\u7406\u548c\u88c2\u9699\uff0c\u89c1user_Box3DJointStress\u793a\u4f8b</p> <p>isBondRate=0</p> <p>\u662f\u5426\u8bbe\u5b9a\u5355\u72ec\u5f3a\u5ea6\u7cfb\u6570\uff0c\u5f53\u5176\u503c\u4e3a1\u65f6\uff0c\u4e14\u8bbe\u5b9ad.mo.SET.nBondRate.BF\u4e3a\u7cfb\u6570\u77e9\u9635\u65f6\uff0c\u5219\u5355\u5143\u95f4\u8fde\u63a5\u7684\u65ad\u88c2\u529b\u5c06\u4e58\u4ee5\u8fd9\u4e2a\u7cfb\u6570\u77e9\u9635\uff0c\uff0c\u89c1user_Box3DJointStress\u793a\u4f8b\u4f7f\u7528\u4e8eMUp</p> <p>nBall;%Id of nearby balls</p> <p>\u90bb\u5c45\u7f16\u53f7\u77e9\u9635</p> <p>nKNe;nKSe;nIKN;nIKS;%ball stiffness matrix, equivalent stiffness for normal force and shearing force</p> <p>\u5355\u5143\u4e0e\u90bb\u5c45\u95f4\u52b2\u5ea6\u7cfb\u6570</p> <p>nFnX;nFnY;nFnZ;%normal displacement along x,y,z directions</p> <p>\u5355\u5143\u4e0e\u90bb\u5c45\u95f4\u6b63\u5411\u529b</p> <p>nFsX;nFsY;nFsZ;%shear displacement along x,y,z directions</p> <p>\u5355\u5143\u4e0e\u90bb\u5c45\u95f4\u5207\u5411\u529b</p> <p>nClump=[];</p> <p>\u5355\u5143\u4e0e\u90bb\u5c45\u95f4clump\u91cd\u53e0\u91cf\uff0c\u5f53\u5176\u4e0d\u4e3a\u96f6\u65f6\u4e3aclump\u8fde\u63a5</p> <p>&lt;span id=\"model-%&lt;------------    system parameters      ------------&gt;\"&gt;%&lt;------------    system parameters      ------------&gt;</p> <p>\u7cfb\u7edf\u53c2\u6570</p> <p>dT=0;totalT=0;%current time interval, total time</p> <p>\u65f6\u95f4\u6b65\uff1b\u603b\u65f6\u95f4</p> <p>isGPU=0;%whether the GPU calculation is on</p> <p>\u662f\u5426\u7528GPU\u8ba1\u7b97</p> <p>GPULevel;%the GPU calculation level in setNearbyBall, 0~3, more gpu memory will be used when it increases,basicfs.setModel</p> <p>\u90bb\u5c45\u77e9\u9635\u67e5\u627e\u65f6\u7684GPU\u4f7f\u7528\u5c42\u6b21\uff0c0\u4e0d\u4f7f\u7528\uff0c1\u521d\u6b65\u4f7f\u7528\uff0c2\u4e2d\u5ea6\u4f7f\u7528\uff0c3\u5168\u9762\u4f7f\u7528\uff08\u5360\u7528\u5927\u91cf\u663e\u5b58\uff0c\u652f\u6301\u5355\u5143\u6570\u964d\u4e3a\u4e00\u534a\uff09</p> <p>\u89c1user_SpeedTest</p> <p>isHeat=0;%heat of the model; switch of heat calculation</p> <p>\u662f\u5426\u8ba1\u7b97\u70ed</p> <p>isClump=0;%whether use the clump</p> <p>\u662f\u5426\u6709clump</p> <p>isFix=0;</p> <p>\u662f\u5426\u9501\u5b9a\u81ea\u7531\u5ea6\uff0c\u9501\u5b9a\u6d3b\u52a8\u5355\u5143\u81ea\u7531\u5ea6\u540e\uff0c\u5176\u7c7b\u4f3c\u56fa\u5b9a\u5899\u5355\u5143</p> <p>FixXId;FixYId;FixZId;</p> <p>\u9501\u5b9aX,Y,Z\u5750\u6807\u7684\u5355\u5143\u7f16\u53f7</p> <p>isWaterDiff;</p> <p>\u662f\u5426\u8fdb\u884c\u6709\u9650\u5dee\u5206\u8ba1\u7b97</p> <p>isCrack=0;%whether record the cracking process</p> <p>\u662f\u5426\u7edf\u8ba1\u751f\u6210\u7684\u88c2\u9699</p> <p>isShear=1;%whether the shear force is calculated</p> <p>\u662f\u5426\u8003\u8651\u5355\u5143\u95f4\u5207\u5411\u529b</p> <p>isFailure=0;%whether the failure is considered</p> <p>\u662f\u5426\u8003\u8651\u5355\u5143\u538b\u5bc6\u7834\u574f</p> <p>isSmoothB=0;%whether the boundary is smooth, data recorded in SET</p> <p>\u662f\u5426\u91c7\u7528\u5e73\u6ed1\u8fb9\u754c</p> Methods <p>balance()</p> <p>\u5e73\u8861\u8fed\u4ee3\u4e00\u6b21</p> <p>\u65e0</p> <p>\u65e0</p> <p>d.mo.balance();</p> <p>dispNote(note)</p> <p>\u663e\u793a\u63d0\u793a*</p> <p>\u65e0</p> <p>\u65e0</p> <p>getBalanceData(dName,isBalance)</p> <p>\u83b7\u53d6\u6c42\u89e3\u4e2d\u7684\u6307\u5b9a\u53c2\u6570\uff0cnIJXn\u5355\u5143\u91cd\u53e0\u91cf</p> <p>dName\u53c2\u6570\u540d;isBalance\uff0c\u662f\u5426\u5148\u505a\u96f6\u65f6\u5e73\u8861</p> <p>\u53c2\u6570\u7684\u503c </p> <p>nIJXn=d.mo.getBalanceData('nIJXn');</p> <p>gpuStatus=setGPU(type)</p> <p>\u8bbe\u7f6eGPU\u72b6\u6001</p> <p>type: 'on', 'off', 'auto','fixed','unfixed'</p> <p>\u5f53\u524d\u7684GPU\u72b6\u6001\uff1a'on'\u6216'off'</p> <p>\u8be6\u89c1\u4ee5\u4e0b\u793a\u4f8b</p> <p>recement()</p> <p>\u5c06\u5904\u4e8e\u538b\u7f29\u72b6\u6001\u7684\u8fde\u63a5\u8bbe\u4e3a\u5b8c\u6574\u8fde\u63a5\uff0c\u518d\u4e24\u5355\u5143\u63a5\u89e6\u540e\u4f1a\u91cd\u65b0\u7c98\u7ed3</p> <p>\u65e0</p> <p>\u65e0</p> <p>setBalanceFunction(functionFileName)</p> <p>\u8bbe\u7f6e\u5e73\u8861\u51fd\u6570\u547d\u4ee4d.mo.balanceCommand</p> <p>\u547d\u4ee4\u8bed\u53e5</p> <p>\u65e0</p> <p>\u89c1BoxCrash1\u793a\u4f8b</p> <p>setContactModel(type,varargin)</p> <p>\u8bbe\u7f6e\u63a5\u89e6\u6a21\u578b*\uff0c\u672a\u6765\u5c06\u53d6\u6d88</p> <p>\u65e0</p> <p>\u65e0</p> <p>setKNKS()  </p> <p>\u8bbe\u7f6e\u5355\u5143\u4e0e\u90bb\u5c45\u95f4\u521a\u5ea6\uff0c\u5728\u6539\u53d8\u5355\u5143\u521a\u5ea6\u540e\u9700\u4f7f\u7528</p> <p>\u65e0</p> <p>\u65e0</p> <p>setModel()</p> <p>\u8bbe\u7f6e\u521d\u59cb\u6a21\u578b</p> <p>\u65e0</p> <p>\u65e0</p> <p>setNearbyBall()%set nearby balls of each ball</p> <p>\u4e09\u7ef4\u90bb\u5c45\u67e5\u627e</p> <p>\u65e0</p> <p>\u65e0</p> <p>setNearbyBall2()%set nearby balls of each ball</p> <p>\u4e8c\u7ef4\u90bb\u5c45\u67e5\u627e</p> <p>\u65e0</p> <p>\u65e0</p> <p>setNewStep(dbXYZnew)</p> <p>\u8bbe\u7f6e\u65b0\u7684\u8fb9\u754c\u6b65(\u5c06\u53d6\u6d88\uff09</p> <p>\u5728\u65b0\u4e00\u6b65\u91cc\uff0c\u8fb9\u754c\u7684\u4f4d\u79fb</p> <p>\u65e0</p> <p>setShear(type)</p> <p>\u5f00\u542f\u6216\u5173\u95ed\u526a\u5207\u529b\u8ba1\u7b97\uff0c\u5f53\u5f00\u542f\u65f6\uff0c\u4f1a\u521d\u59cb\u5316\u6240\u6709\u526a\u5207\u529b\u4e3a0\uff1b\u5173\u95ed\u65f6\uff0c\u5c06\u6240\u6709\u526a\u5207\u529b\u77e9\u9635\u7f6e\u7a7a</p> <p>on'\u6216'off'</p> <p>\u65e0</p> <p>d.mo.setShear('on')</p> <p>zeroBalance()%to intialize the model, break impossible intact bonds</p> <p>\u96f6\u65f6\u5e73\u8861\uff0c\u7528\u4e8e\u8ba1\u7b97\u6a21\u578b\u5f53\u524d\u72b6\u6001</p> <p>\u65e0</p> <p>\u65e0</p> <p>setFastComputing(type)</p> <p>\u542f\u7528\u6216\u5173\u95ed\u5355\u7cbe\u5ea6\u6d6e\u70b9\u8ba1\u7b97\uff0c\u5efa\u8bae\u4e0d\u8981\u542f\u7528</p> <p>on'\u6216'off'</p> <p>\u65e0</p>"},{"location":"api/modelStatus/","title":"modelStatus","text":"<p>class modelStatus</p> Properties <p>TAG</p> <p>\u8bb0\u5f55\u8f93\u51fa\u4fe1\u606f</p> <p>TAG\u4e3a\u7ed3\u6784\u4f53\uff0c\u53ef\u6dfb\u52a0\u4efb\u610f\u7684\u5b50\u5bf9\u8c61</p> <p>SET</p> <p>\u8bb0\u5f55\u8bbe\u7f6e\u4fe1\u606f</p> <p>SET\u4e3a\u7ed3\u6784\u4f53\uff0c\u53ef\u6dfb\u52a0\u4efb\u610f\u7684\u5b50\u5bf9\u8c61</p> <p>PAR</p> <p>\u5e76\u884c\u8ba1\u7b97\u7528*</p> <p>gravityE0</p> <p>\u53c2\u8003\u91cd\u529b\u52bf\u80fd</p> <p>\u4f7f\u521d\u59cb\u5316\u65f6\u7684\u91cd\u529b\u70ed\u80fd\u4e3a0</p> <p>recordCommand</p> <p>\u8bb0\u5f55\u547d\u4ee4</p> <p>\u5728\u6bcf\u6b21\u8fd0\u884cd.mo.recordStatus\u7684\u6700\u540e\u8fd0\u884c</p> <p>Ts</p> <p>\u65f6\u95f4\u6b65\u8bb0\u5f55</p> <p>\u6bcf\u6b21\u8fd0\u884cd.recordStatus();\u540e\u8bb0\u5f55\u7684\u65f6\u95f4</p> <p>gravityEs</p> <p>\u91cd\u529b\u52bf\u80fd\u8bb0\u5f55</p> <p>\u5355\u5217\u77e9\u9635</p> <p>kineticEs</p> <p>\u52a8\u80fd\u8bb0\u5f55</p> <p>\u5355\u5217\u77e9\u9635</p> <p>elasticEs</p> <p>\u5f39\u6027\u5e94\u53d8\u80fd\u8bb0\u5f55</p> <p>\u5355\u5217\u77e9\u9635</p> <p>totalEs</p> <p>\u603b\u80fd\u91cf\u8bb0\u5f55</p> <p>\u5355\u5217\u77e9\u9635</p> <p>heats</p> <p>\u70ed\u91cf\u8bb0\u5f55</p> <p>\u77e9\u9635[Viscosity Heat, Normal Breaking Heat, Shear Breaking Heat, Slipping Heat, Failure Heat]\uff0c\u5176\u4e2dFailure Heat\u4e3a\u5355\u5143\u5c48\u670d\u7834\u574f\u65f6\u4ea7\u751f\u7684\u70ed\uff08\u89c1Liu et al., 2015\uff0cJGR\uff09\uff0c\u4e00\u822c\u4e0d\u4f7f\u7528\u3002</p> <p>dem</p> <p>build\u5bf9\u8c61</p> <p>\u5373d</p> <p>model</p> <p>model\u5bf9\u8c61</p> <p>\u5373d.mo</p> <p>bIndex</p> <p>\u8fb9\u754c\u8303\u56f4\u8bb0\u5f55\uff08\u672a\u6765\u5c06\u53d6\u6d88\uff09</p> <p>breakId</p> <p>\u88c2\u9699\u751f\u6210\u4fe1\u606f(\u5f53d.mo.isCrack=1\u65f6\u81ea\u52a8\u8bb0\u5f55\uff09</p> <p>\u77e9\u9635\u4e2d\u8bb0\u5f55[\u88c2\u9699\u7684\u4e24\u4e2a\u5355\u5143\uff0c\u88c2\u9699\u751f\u6210\u65f6\u95f4\uff0c\u88c2\u9699\u7c7b\u578b]\uff0c\u7c7b\u578b0\u4e3a\u539f\u751f\u88c2\u9699\uff08\u5efa\u6a21\u65f6\u751f\u6210\uff0c\u5728d.show('Crack')\u663e\u793a\u4e3a\u7eff\u8272\uff09\uff0c\u7c7b\u578b1\u4e3a\u5f20\u88c2\u9699\uff08\u7ea2\u8272\uff09\uff0c2\u4e3a\u526a\u88c2\u9699\uff08\u84dd\u8272\uff09</p> <p>leftBFs</p> <p>\u5de6\u8fb9\u754c\u53d7\u529b\u53d8\u5316</p> <p>\u4e09\u5217\u77e9\u9635\uff0c\u5206\u522b\u8bb0\u5f55X,Y,Z\u65b9\u5411\u4e0a\u53d7\u529b\u5206\u91cf</p> <p>rightBFs</p> <p>\u53f3\u8fb9\u754c\u53d7\u529b\u53d8\u5316</p> <p>\u4e09\u5217\u77e9\u9635\uff0c\u5206\u522b\u8bb0\u5f55X,Y,Z\u65b9\u5411\u4e0a\u53d7\u529b\u5206\u91cf</p> <p>frontBFs</p> <p>\u524d\u8fb9\u754c\u53d7\u529b\u53d8\u5316</p> <p>\u4e09\u5217\u77e9\u9635\uff0c\u5206\u522b\u8bb0\u5f55X,Y,Z\u65b9\u5411\u4e0a\u53d7\u529b\u5206\u91cf</p> <p>backBFs</p> <p>\u540e\u8fb9\u754c\u53d7\u529b\u53d8\u5316</p> <p>\u4e09\u5217\u77e9\u9635\uff0c\u5206\u522b\u8bb0\u5f55X,Y,Z\u65b9\u5411\u4e0a\u53d7\u529b\u5206\u91cf</p> <p>bottomBFs</p> <p>\u5e95\u8fb9\u754c\u53d7\u529b\u53d8\u5316</p> <p>\u4e09\u5217\u77e9\u9635\uff0c\u5206\u522b\u8bb0\u5f55X,Y,Z\u65b9\u5411\u4e0a\u53d7\u529b\u5206\u91cf</p> <p>topBFs</p> <p>\u9876\u8fb9\u754c\u53d7\u529b\u53d8\u5316</p> <p>\u4e09\u5217\u77e9\u9635\uff0c\u5206\u522b\u8bb0\u5f55X,Y,Z\u65b9\u5411\u4e0a\u53d7\u529b\u5206\u91cf</p> <p>legendLocation</p> <p>\u56fe\u4f8b\u663e\u793a\u7684\u4f4d\u7f6e</p> <p>\u503c\u53ef\u4e3a'north','east'\u7b49\uff0c\u5177\u4f53\u89c1Matlab 'legend'\u547d\u4ee4</p> <p>workTIds</p> <p>\u5916\u529b\u505a\u529f\u5bf9\u5e94\u7684\u65f6\u95f4\u6b65</p> <p>\u5916\u529b\u505a\u529f\u65f6\u5bf9\u5e94\u7684Ts\u4e2d\u7684\u65f6\u95f4Id</p> <p>works</p> <p>\u5916\u529b\u6240\u505a\u7684\u529f</p> <p>\u5bf9\u5e94\u4e8eworkTIds\u7684\u529f</p> Methods <p>show(type)</p> <p>\u663e\u793a\u901a\u8fc7recordCommand\u547d\u4ee4\u8bb0\u5f55\u7684\u66f2\u7ebf\u6570\u636e</p> <p>\u66f2\u7ebf\u53c2\u6570\u540d\uff0c\u89c1user_LineModel\u793a\u4f8b</p> <p>d.status.show('SETleftFZ');</p> <p>dispEnergy()</p> <p>\u6587\u5b57\u663e\u793a\u5f53\u524d\u5404\u7c7b\u80fd\u91cf\u72b6\u6001</p> <p>\u65e0</p> <p>d.status.dispEnergy();</p> <p>recordStatus()</p> <p>\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\u5728\u4ee5's'\u7ed3\u5c3e\u7684\u5c5e\u6027\u4e2d</p> <p>dispNote(note)</p> <p>\u663e\u793a\u4fe1\u606f*</p> <p>setRecordFunction(functionName)</p> <p>\u8bbe\u7f6erecordStatus\u8fd0\u884c\u65f6\u7684\u9644\u52a0\u5904\u7406\u51fd\u6570</p> <p>functionName:\u51fd\u6570\u6587\u4ef6\u540d</p> <p>d.status.setRecordFunction('fun/recordFun.m');\u89c1BoxShear3</p> <p>modelStatus(dem)</p> <p>\u521d\u59cb\u5316modelStatus\u5bf9\u8c61*\uff08\u89c1build.resetStatus)</p> <p>setInitialModelWHT()</p> <p>\u8bb0\u5f55\u8ba1\u7b97\u5757\u72b6\u6a21\u578b\u7684\u521d\u59cb\u5bbd\u9ad8\u539a\uff08X,Y,Z\uff09*</p> <p>showParticleForce(Id, list)</p> <p>\u663e\u793a\u67d0\u5355\u5143\u7684\u53d7\u529b\uff0c\u65e0\u7528\uff0c\u672a\u6765\u5c06\u53bb\u9664*</p> <p>getElasticEnergy()</p> <p>\u83b7\u53d6\u5f39\u6027\u5e94\u53d8\u80fd\uff0c\u5728recordStatus\u4e2d\u7528*</p> <p>setSystemEnergy()</p> <p>\u8bbe\u7f6e\u7cfb\u7edf\u80fd\u91cf\uff0c\u5728recordStatus\u4e2d\u7528*</p> <p>getBoundaryForce()</p> <p>\u83b7\u53d6\u8fb9\u754c\u529b\uff0c\u5728recordStatus\u4e2d\u7528</p> <p>\u83b7\u53d6\u6240\u6709\u8fb9\u754c\u5355\u5143\uff08\u5899\u5355\u5143\uff09\u7684\u53d7\u529b</p> <p>bFXYZ\uff0c\u8bb0\u5f55[bFX,bFY,bFZ]</p> <p>runRecordCommand()</p> <p>\u8fd0\u884crecordCommand\u4e2d\u7684\u547d\u4ee4\u4e00\u6b21\uff0c\u901a\u5e38\u5728\u8fd0\u884c\u5b8cresetStatus\u548c\u5b9a\u4e49recordCommand\u540e\uff0c\u8fd0\u884c\u8fd9\u4e2a\u51fd\u6570\uff0c\u4ee5\u4fdd\u8bc1\u8bb0\u5f55\u6570\u636e\u7684\u957f\u5ea6\u548c\u5176\u5b83\u56fa\u6709\u53c2\u6570\u4e00\u81f4</p> <p>user_LineModel</p> <p>setBoundaryForce()</p> <p>\u8bbe\u7f6e\u8fb9\u754c\u529b*</p> <p>showEnergy()</p> <p>\u663e\u793a\u80fd\u91cf\u66f2\u7ebf\uff0c\u5728d.show()\u4e2d\u7528*</p> <p>showHeat()</p> <p>\u663e\u793a\u70ed\u91cf\u66f2\u7ebf\uff0c\u5728d.show()\u4e2d\u7528*</p> <p>showBoundaryForces()</p> <p>\u663e\u793a\u8fb9\u754c\u53d7\u529b\u66f2\u7ebf\uff0c\u5728d.show()\u4e2d\u7528*</p> <p>calculateEv()</p> <p>\u5c06\u53d6\u6d88*</p> <p>calculateCu()</p> <p>\u5c06\u53d6\u6d88*</p> <p>calculateTu()</p> <p>\u5c06\u53d6\u6d88*</p> <p>showStrainStress()</p> <p>\u663e\u793a\u5e94\u529b\u5e94\u53d8\u66f2\u7ebf\uff0c\u5728d.show()\u4e2d\u7528*</p> <p>showBoundaryStresses()</p> <p>\u663e\u793a\u8fb9\u754c\u5e94\u529b\u66f2\u7ebf\uff0c\u5728d.show()\u4e2d\u7528*</p>"},{"location":"api/obj_Box/","title":"obj_Box","text":"<p>class obj_Box</p> Properties <p>lang=\u2018en'</p> <p>\u8f6f\u4ef6\u8bed\u8a00</p> <p>randomSeed=1</p> <p>\u968f\u673a\u79cd\u5b50</p> <p>\u7528\u4e8e\u786e\u5b9a\u521d\u59cb\u7684\u6a21\u578b\u968f\u673a\u6a21\u6001</p> <p>distriRate=0.25</p> <p>\u9897\u7c92\u76f4\u5f84\u5206\u6563\u7cfb\u6570\uff0c\u6700\u5927\u76f4\u5f84\u4e0e\u6700\u5c0f\u76f4\u5f84\u6bd4\u503c\u4e3a(1+rate)^2</p> <p>GPUstatus</p> <p>\u521d\u59cb\u7684GPU\u8ba1\u7b97\u8bbe\u7f6e\uff0c'off','on','auto','fixed'(\u9501\u5b9a\u4e3aCPU\u8ba1\u7b97)</p> <p>\u89c1model\u51fd\u6570</p> <p>isUI</p> <p>\u5728UI\u4e2d\u663e\u793a\u6d88\u606f\uff0c\u53d61</p> <p>edit_output</p> <p>\u6d88\u606f\u6846\u7684\u5730\u5740</p> <p>uniformGRate=0</p> <p>\u53d61\u62160\uff0c\u786e\u5b9a\u91cd\u529b\u6c89\u79ef\u65f6\u662f\u5426\u91c7\u7528\u7edf\u4e00\u7684\u91cd\u529b\u52a0\u901f\u5ea6g\uff1b\u5f53\u5176\u4e3a1\u65f6\uff0c\u9897\u7c92\u91c7\u7528\u6b63\u5e38\u91cd\u529b\u5806\u79ef\uff1b\u5f53\u5176\u4e3a0\u65f6\uff0c\u4e0a\u65b9\u7684\u9897\u7c92\u4f1a\u53d7\u5230\u8f83\u5927\u7684\u91cd\u529b\u52a0\u901f\u5ea6\uff0c\u4ece\u800c\u52a0\u5feb\u6574\u4f53\u9897\u7c92\u4f53\u7cfb\u7684\u5806\u79ef\uff1b\u9ed8\u8ba4\u503c\u4e3a0\uff0c\u80fd\u8f83\u5feb\u8fc7\u5b8c\u6210\u5806\u79ef\uff0c\u503c\u4e3a1\u65f6\uff0c\u5806\u79ef\u65f6\u95f4\u53ef\u80fd\u589e\u52a0\u52302\uff0c3\u500d</p> <p>resetStatusBeforeDrop</p> <p>\u5728\u968f\u673a\u8fd0\u52a8\u4e4b\u540e\uff0c\u91cd\u529b\u5806\u79ef\u524d\u91cd\u7f6e\u8bb0\u5f55\uff0c\u5373\u8fd0\u884cd.status.</p> <p>Surf</p> <p>\u7528\u4e8e\u5207\u5206\u6a21\u578b\u7684\u9762\uff0c\u53c2\u8003user_BoxModel\u793a\u4f8b</p> <p>name</p> <p>\u6a21\u578b\u540d</p> <p>type='topPlaten';</p> <p>\u6a21\u578b\u7c7b\u578b\uff0c\u786e\u5b9a\u662f\u5426\u4f7f\u75286\u4e2a\u538b\u529b\u677f\uff0c\u89c1Box.platenStatus\u3002\u8fd0\u884cB.setType()\u65f6\uff0c\u6839\u636etype\u6765\u786e\u5b9aB.platenStatus</p> <p>\u53ef\u4e3a'none',botPlaten','topPlaten','GeneralSlope','TriaxialCompression'</p> <p>isClump</p> <p>\u5b9a\u4e49\u6a21\u578b\u9897\u7c92\u662f\u5426\u4e3aclump\u9897\u7c92</p> <p>d</p> <p>\u6a21\u578bbuild\u5bf9\u8c61</p> <p>g=-9.8</p> <p>\u91cd\u529b\u52a0\u901f\u5ea6</p> <p>TAG</p> <p>\u6a21\u578b\u4fe1\u606f</p> <p>SET</p> <p>\u6a21\u578b\u8bbe\u7f6e</p> <p>is2D=0</p> <p>\u6a21\u578b\u662f\u5426\u4e3a\u4e8c\u7ef4\u6a21\u578b</p> <p>GROUP</p> <p>\u6a21\u578b\u4e2d\u7684\u7ec4\uff0c\u5c06\u81ea\u52a8\u8f6c\u81f3\u751f\u6210\u7684build\u5bf9\u8c61\u4e2d\uff0c\u5373B.d</p> <p>Mo</p> <p>\u6a21\u578b\u5355\u5143\u7ed3\u6784\u4f53\uff0c\u5305\u62ec\u538b\u529b\u677f</p> <p>Bo</p> <p>\u8fb9\u754c\u5355\u5143\u7ed3\u6784\u4f53</p> <p>Mats</p> <p>\u6750\u6599cell\u6570\u7ec4</p> <p>ballR</p> <p>\u5355\u5143\u5e73\u5747\u534a\u5f84</p> <p>modelH_rate=1</p> <p>\u6a21\u578b\u8fb9\u754c\u7684\u589e\u9ad8\u6bd4\u7387\uff08\u7531\u4e8e\u6c89\u79ef\u7684\u9ad8\u5ea6\u4f1a\u6bd4\u8fb9\u754c\u9ad8\u5ea6\u4f4e\uff09</p> <p>X</p> <p>\u5355\u5143\u7684X\u5750\u6807\u6570\u7ec4</p> <p>Y</p> <p>\u5355\u5143\u7684Y\u5750\u6807\u6570\u7ec4</p> <p>Z</p> <p>\u5355\u5143\u7684Z\u5750\u6807\u6570\u7ec4</p> <p>R</p> <p>\u5355\u5143\u7684\u534a\u5f84\u6570\u7ec4</p> <p>isShear</p> <p>\u662f\u5426\u6709\u526a\u529b</p> <p>isShearAfter=1;</p> <p>\u8fd0\u884c\u5b8cB.gravitySediment\u540e\u662f\u5426\u6253\u5f00\u526a\u529b\uff0c\u9ed8\u8ba4\u4e3a1</p> <p>isSample</p> <p>\u521d\u59cb\u65f6\u662f\u5426\u751f\u6210\u6837\u54c1\u5355\u5143\uff0c\u5f53\u4e3a0\u65f6\u53ea\u751f\u6210\u8fb9\u754c\u548c\u5e95\u538b\u529b\u677f</p> <p>sampleW</p> <p>\u6a21\u578b\u7bb1\u5b50\u5185\u90e8\u7684\u5bbd</p> <p>sampleL</p> <p>\u6a21\u578b\u7bb1\u5b50\u5185\u90e8\u7684\u957f</p> <p>sampleH</p> <p>\u6a21\u578b\u7bb1\u5b50\u5185\u90e8\u7684\u9ad8</p> <p>sample</p> <p>\u6837\u54c1\u5355\u5143\u7ed3\u6784\u4f53\uff0c\u4e0d\u5305\u62ec\u538b\u529b\u677f</p> <p>boundaryRrate=0.8</p> <p>\u8fb9\u754c\u76f8\u90bb\u5355\u5143\u95f4\u8ddd\u79bb\u4e0e\u5355\u5143\u76f4\u5f84\u7684\u6bd4\u503c</p> <p>platenStatus=[0,0,0,0,0,1];</p> <p>\u538b\u529b\u677f\u72b6\u6001\uff0c6\u4e2a\u503c\u5bf9\u5e94[\u5de6\uff0c\u53f3\uff0c\u524d\uff0c\u540e\uff0c\u4e0b\uff0c\u4e0a]</p> <p>\u5f53\u503c\u4e3a1\u65f6\uff0c\u4ea7\u751f\u76f8\u5e94\u7684\u538b\u529b\u677f</p> <p>lefPlaten</p> <p>\u5de6\u538b\u529b\u677f\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>rigPlaten</p> <p>\u53f3\u538b\u529b\u677f\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>froPlaten</p> <p>\u524d\u538b\u529b\u677f\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>bacPlaten</p> <p>\u540e\u538b\u529b\u677f\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>botPlaten</p> <p>\u5e95\u538b\u529b\u677f\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>topPlaten</p> <p>\u9876\u538b\u529b\u677f\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>lefB</p> <p>\u5de6\u8fb9\u754c\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>rigB</p> <p>\u53f3\u8fb9\u754c\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>froB</p> <p>\u524d\u8fb9\u754c\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>bacB</p> <p>\u540e\u8fb9\u754c\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>botB</p> <p>\u5e95\u8fb9\u754c\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>topB</p> <p>\u9876\u8fb9\u754c\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bXYZR\u4fe1\u606f</p> <p>groupId</p> <p>\u7ec4\u7f16\u53f7\uff0c6\u4e2a\u8fb9\u754c\u7f16\u53f7\u7531-1\u81f3-6\uff0c6\u4e2a\u538b\u529b\u677f\u7f16\u53f7\u75311\u81f36</p> <p>aMatId</p> <p>\u6750\u6599\u7f16\u53f7</p> <p>compactNum=0;</p> <p>\u5efa\u597d\u5806\u79ef\u6a21\u578b\u540e\u7684\u538b\u5b9e\u6b21\u6570</p> <p>sFilter=0;</p> <p>Box\u7684showFilter\uff0c\u4e0d\u5e38\u7528</p> <p>PexpandRate=1;</p> <p>\u538b\u529b\u677f\u7684\u5ef6\u4f38\u5355\u5143\u6570</p> <p>BexpandRate=2;</p> <p>\u8fb9\u754c\u7684\u5ef6\u4f38\u5355\u5143\u6570</p> <p>fixPlaten=1;</p> <p>\u662f\u5426\u9501\u5b9aplaten\u7684\u81ea\u7531\u5ea6\uff0c\u4f7fplaten\u53ea\u5728\u5e73\u9762\u6cd5\u5411\u4e0a\u8fd0\u52a8</p> <p>saveFileLevel=1;</p> <p>\u4fdd\u5b58\u6587\u4ef6\u7684\u5c42\u7ea7\uff0c\u5728UniaxialTest\u4e2d\u7528</p> <p>0\u4e0d\u4fdd\u5b58\u6587\u4ef6\uff0c1\u4fdd\u5b58\u4e3b\u8981\u6587\u4ef6\uff0c2\u4fdd\u5b58\u6240\u6709\u6587\u4ef6</p> Methods <p>setVisStatus(newType,baseBallR)</p> <p>\u8bbe\u7f6e\u963b\u5c3c\u4e0e\u5355\u5143\u76f4\u5f84\u7684\u5173\u7cfb\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a'inWater'\uff0c\u5373\u5355\u5143\u7c7b\u4f3c\u5728\u6c34\u4e2d\u4e0b\u843d\uff0c\u5355\u5143\u81ea\u7531\u4e0b\u964d\u6240\u53d7\u963b\u529b\u4e0e\u5355\u5143\u534a\u5f84\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u5927\u9897\u7c92\u4e0b\u964d\u8f83\u5feb\uff1b\u5f53\u8bbe\u7f6e\u4e3a\u2018sameSpeed'\u65f6\uff0c\u5219\u963b\u529b\u4e0e\u5355\u5143\u534a\u5f84\u4e09\u6b21\u65b9\u6210\u6b63\u6bd4</p> <p>calculateBlockDensity()</p> <p>\u8ba1\u7b97\u6a21\u578b\u6837\u54c1\u7684\u5bc6\u5ea6\uff08\u6837\u54c1\u5411\u51851.5\u500d\u534a\u5f84\u53d6\u5757\u7b97\u5bc6\u5ea6\uff09</p> <p>\u65e0</p> <p>\u5bc6\u5ea6\u503c</p> <p>\u7528\u4e8e\u81ea\u52a8\u8bad\u7ec3\u4e2d </p> <p>compactSample(compactNum,varargin)</p> <p>\u5229\u7528\u4e0a\u538b\u529b\u677f\u6765\u538b\u5b9e\u6837\u54c1</p> <p>compactNum:\u538b\u5b9e\u6b21\u6570;varargin:\u5f53\u8f93\u51651\u4e2a\u53c2\u6570\u65f6\uff0c\u8bbe\u5b9a\u592f\u5b9e\u538b\u529b\uff0c\u5f53\u65e0\u8f93\u5165\u65f6\uff0c\u592f\u5b9e\u529b\u53d6\u6240\u6709\u6a21\u578b\u5355\u5143\u91cd\u529b\u7684\u4e24\u500d</p> <p>\u65e0</p> <p>\u793a\u4f8b\u7684\u7b2c\u4e00\u4e2a\u6587\u4ef6</p> <p>convert2D(ballR)</p> <p>\u5c06\u5355\u5143\u7684\u5c5e\u6027\u4ece\u4e09\u7ef4\u53d8\u6210\u4e8c\u7ef4\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5e73\u9762\u4e0a\u7684\u5355\u5143\u90fd\u53d8\u6210\u540c\u4e00\u539a\u5ea6</p> <p>ballR:\u4e8c\u7ef4\u7684\u539a\u5ea6\u7684\u4e00\u534a</p> <p>\u65e0</p> <p>cutGroup(gNames, surfId1, surfId2)</p> <p>\u7528\u4e24\u4e2a\u5c42\u9762\u5207\u5272\u7ec4</p> <p>gNames:\u88ab\u5207\u5272\u7684\u7ec4\u540d; surfId1:\u5c42\u9762\u7684\u7f16\u53f7; surfId2:\u5c42\u9762\u7684\u7f16\u53f7</p> <p>\u65e0</p> <p>\u53c2\u8003mxSlope</p> <p>gravitySediment(varargin)</p> <p>\u8ba9\u5355\u5143\u968f\u673a\u8fd0\u52a8\uff0c\u5e76\u5728\u91cd\u529b\u4f5c\u7528\u4e0b\u5806\u79ef</p> <p>varargin:\u53ef\u53d8\u8f93\u5165\u53c2\u6570\uff0c\u5f53\u8f93\u5165\u4e00\u4e2a\u53c2\u6570rate\u65f6\uff0c\u786e\u5b9a\u6c89\u79ef\u7684\u65f6\u95f4\u6bd4\u7387\uff0c\u5f53\u65e0\u8f93\u5165\u53c2\u6570\u65f6rate\u9ed8\u8ba4\u4e3a1\uff1b\u5f53\u8f93\u5165\u53c2\u6570\u662f\"auto\"\u65f6\uff0c\u662f3.0\u7248\u65b0\u529f\u80fd\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684\u5806\u79ef\u53c2\u6570\uff0c\u5176\u6c89\u79ef\u6240\u9700\u8981\u7684\u65f6\u95f4\u4e0d\u4e00\u6837\uff0c\u5f53\u53c2\u6570\u4e3a\u201cauto\u201d\u65f6\u81ea\u52a8\u8bbe\u5b9a\u6c89\u79ef\u65f6\u95f4\uff0c\u4fdd\u8bc1\u9897\u7c92\u5b8c\u6210\u5806\u79ef\u3002\u5f53\u8f93\u5165\u53c2\u6570\u4e3a\u4e24\u4e2a\u65f6\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3aisCement\uff0c\u9ed8\u8ba4\u4e3a0\uff0c\u5373\u5806\u79ef\u65f6\u4e0d\u7c98\u7ed3\u9897\u7c92\uff0c\u5f53\u5176\u4e3a1\u65f6\uff0c\u5806\u79ef\u8fc7\u7a0b\u4e2d\u9897\u7c92\u63a5\u89e6\u5373\u4ea7\u751f\u7c98\u7ed3\u529b\uff08\u5982\u6e7f\u571f\u9897\u7c92\uff09\uff0c\u5806\u79ef\u4f53\u5b54\u9699\u7387\u4f1a\u8f83\u5927</p> <p>\u65e0</p> <p>\u793a\u4f8b\u7684\u7b2c\u4e00\u4e2a\u6587\u4ef6</p> <p>load(varargin)</p> <p>\u5c06save\u547d\u4ee4\u4fdd\u5b58\u7684\u6587\u4ef6\uff0c\u91cd\u52a0\u8f7d\u5230B\u4e2d</p> <p>\u5f53\u67091\u8f93\u5165\u53c2\u6570\u65f6\uff0c\u52a0\u8f7d\u6587\u4ef6\u540d\u540e\u52a0['Step-' num3str(Step)]</p> <p>\u65e0</p> <p>B.load(1);</p> <p>removeInterPlatenBoundaryForce()</p> <p>\u6d88\u9664\u538b\u529b\u677f\u548c\u76f8\u5782\u76f4\u7684\u8fb9\u754c\u4e4b\u95f4\u7684\u4f5c\u7528\u529b</p> <p>\u65e0</p> <p>\u65e0</p> <p>\u7528\u4e8e\u7cfb\u7edf\u5efa\u7acb\u4e09\u8f74\u5e94\u529b</p> <p>removeInterPlatenForce()</p> <p>\u6d88\u9664\u5404\u538b\u529b\u677f\u95f4\u7684\u4f5c\u7528\u529b</p> <p>\u65e0</p> <p>\u65e0</p> <p>\u7528\u4e8e\u7cfb\u7edf\u5efa\u7acb\u4e09\u8f74\u5e94\u529b</p> <p>save(varargin)</p> <p>\u5c06B\u6587\u4ef6\u4fdd\u5b58\u4e3a['TempModel/' B.name '-R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(B.d.aNum) '.mat'];</p> <p>\u5f53\u67091\u8f93\u5165\u53c2\u6570\u65f6\uff0c\u4fdd\u5b58\u6587\u4ef6\u540d\u540e\u52a0['Step-' num2str(Step)]</p> <p>\u65e0</p> <p>B.save(1);</p> <p>setGPU( varargin)</p> <p>\u8bbe\u7f6eGPU\u8ba1\u7b97\u6a21\u5f0f</p> <p>varargin:\u548cmodel.setGPU\u540c\u6837\u8f93\u5165\u53c2\u6570\uff0c\u5f53\u65e0\u8f93\u5165\u53c2\u6570\u65f6\uff0c\u7528B.gpuStatus\u81ea\u52a8\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570</p> <p>\u65e0</p> <p>B.setGPU();</p> <p>setPlatenFixId()</p> <p>\u8bbe\u7f6e\u6bcf\u4e2aPlaten\u8fb9\u7f18\u5355\u5143\u7684\u81ea\u7531\u5ea6\uff0c\u4f7f\u5176\u53ea\u80fd\u5728\u538b\u529b\u677f\u6cd5\u5411\u65b9\u5411\u4e0a\u8fd0\u52a8\uff0c\u9632\u6b62\u8bd5\u6837\u4e0d\u5e73\u65f6\u538b\u529b\u677f\u4ece\u4fa7\u9762\u6ed1\u843d</p> <p>\u65e0</p> <p>\u65e0</p> <p>\u53c2\u8003BoxLayer\u4f8b\u5b50</p> <p>setPlatenStress(varargin)</p> <p>\u901a\u8fc7\u5bf9platen\u8bbe\u7f6e\u4f53\u529b\u6765\u4ea7\u751f\u8fb9\u754c\u5e94\u529b\uff08\u8d1f\u4e3a\u538b\u529b\uff0c\u6b63\u4e3a\u62c9\u529b\uff09\uff0c\u4f53\u529b\u4f5c\u7528\u5728\u6b63\u65b9\u5411\u4e0a\u7684\u538b\u529b\u677f\uff0c\u5373\u53f3\u3001\u540e\u3001\u4e0a\u538b\u529b\u677f\uff0c\u7528d.show('mGZ')\u547d\u4ee4\u67e5\u770b\u4f53\u529b\u4f5c\u7528</p> <p>\u8f93\u5165\u53c2\u6570\u53ef\u4e3a2-4\u4e2a\uff0c\u5177\u4f53\u89c1\u4e0b\u65b9\u8bf4\u660e</p> <p>\u65e0</p> <p>\u89c1user_3DJointStress\u793a\u4f8b</p> <p>setType()</p> <p>\u6839\u636e\u6a21\u578b\u7c7b\u578b\uff08B.type\uff09\u8bbe\u7f6eplatenStatus</p> <p>\u65e0</p> <p>\u793a\u4f8b\u7684\u7b2c\u4e00\u4e2a\u6587\u4ef6</p> <p>setUIoutput(varargin)</p> <p>\u8bbe\u7f6e\u6d88\u606f\u7684\u7a97\u53e3\u663e\u793a\uff0c\u9700\u5728\u52a0\u8f7d\u65b0\u6587\u4ef6\u540e\uff0c\u8fd0\u884c\u8fd9\u4e2a\u547d\u4ee4</p> <p>varargin:\u65e0\u8f93\u5165\u53c2\u6570\u65f6\uff0c\u81ea\u52a8\u67e5\u627e\u7a97\u53e3\u4e2d\u7684\u6d88\u606f\u6846\uff0c\u5f53\u8f93\u5165\u6d88\u606f\u6846\u53e5\u67c4\u65f6\uff0c\u4f7f\u7528\u8f93\u5165\u7684\u6d88\u606f\u6846\u663e\u793a\u6d88\u606f</p> <p>\u65e0</p> <p>B.setUIoutput()</p> <p>\u4ee5\u4e0b\u4e3a\u7a0b\u5e8f\u5185\u90e8\u51fd\u6570\uff0c\u901a\u5e38\u4e0d\u76f4\u63a5\u4f7f\u7528</p> <p>addLoading()</p> <p>*</p> <p>addMat(varargin)</p> <p>addSurf(para)</p> <p>\u589e\u52a0\u5c42\u9762\uff0c\u4e0eTool_cut\u4e2d\u51fd\u6570\u76f8\u540c\u3002\u672a\u6765\u53ef\u80fd\u53d6\u6d88</p> <p>\u5c42\u9762\u7684\u6570\u5b57\u9ad8\u7a0b\uff0c\u4e3a\u7ed3\u6784\u4f53S.X,S.Y,S.Z</p> <p>\u65e0</p> <p>breakPlatenConnection()</p> <p>\u672a\u5f00\u53d1*</p> <p>buildInitialModel()</p> <p>buildModel()</p> <p>\u5f00\u59cb\u5efa\u6a21*</p> <p>clearBoundary()</p> <p>clearPlaten()</p> <p>createBall(distriRate)</p> <p>createBoundary(varargin)</p> <p>createClump(randRate)</p> <p>createPlaten(varargin)</p> <p>createSample()</p> <p>delSurf(surfIds)</p> <p>\u5220\u9664\u6307\u5b9a\u5c42\u9762\uff0c\u4e0eTool_cut\u4e2d\u51fd\u6570\u76f8\u540c\u3002\u672a\u6765\u53ef\u80fd\u53d6\u6d88</p> <p>surfIds\u4e3a\u6307\u5b9a\u7684\u5c42\u9762\u7684\u7f16\u53f7\u77e9\u9635</p> <p>\u65e0</p> <p>dispNote(note)</p> <p>\u663e\u793a\u6d88\u606f*</p> <p>exportModel()</p> <p>\u5bfc\u51fa\u6a21\u578b*</p> <p>finishModel()</p> <p>\u5b8c\u6210\u6a21\u578b\u5efa\u7acb*</p> <p>importModel(d)</p> <p>\u5bfc\u5165\u6a21\u578b*</p> <p>setGroupPosition(gName)</p> <p>\u8bbe\u7f6e\u7ec4\u7684\u4f4d\u7f6e\uff0c\u5728importModel\u4e2d\u4f7f\u7528*</p> <p>setSoftMat()</p> <p>\u8bbe\u7f6e\u8f83\u8f6f\u7684\u5355\u5143*</p> <p>setTuTest()</p> <p>\u8bbe\u7f6e\u6297\u62c9\u5f3a\u5ea6\u8bd5\u9a8c*</p> <p>setTuTestStress(stress)</p> <p>\u8bbe\u7f6e\u6297\u62c9\u5f3a\u5ea6\u8bd5\u9a8c\u5e94\u529b*</p> <p>show()</p> <p>\u663e\u793a\u6a21\u578b</p> <p>nan</p> <p>nan</p> <p>setPlatenStress(varargin)\u51fd\u6570\u8bf4\u660e</p> <p>\u8f93\u5165\u4e3a\u4e24\u4e2a\u65f6\uff0c\u4e3asetPlatenStress(stressType,value)</p> <p>\u6839\u636e\u5e94\u529b\u8bbe\u5b9a\u503c\u7b49\uff0c\u4f7f\u7528fs.platenStress2Gravity\u6765\u786e\u5b9aplaten\u4e0a\u7684\u4f53\u529b\uff0c\u7528\u4e8e\u5355\u8f74\u538b\u7f29\u548c\u5f39\u6027\u6a21\u91cf\u6d4b\u8bd5\u6a21\u62df </p> <p>stressType:\u53ef\u53d6'StressXX','StressYY','StressZZ'. stressValue:\u4e3a\u5e94\u529b\u503c\uff0c\u5355\u4f4d\u4e3aPa</p> <p>\u4e0b\u56fe1</p> <p>\u8f93\u5165\u4e3a\u4e09\u4e2a\u65f6\uff0c\u4e3asetPlatenStress(stressType,stressValue,border)</p> <p>\u6839\u636e\u5e94\u529b\u8bbe\u5b9a\u503c\u548c\u8303\u56f4\uff0c\u4f7f\u7528fs.setPlatenStress(d,stressType,stressValue,border);\u5728\u538b\u529b\u677f\u4e0a\u65bd\u52a0\u4f53\u529b(\u5e94\u529b\uff09</p> <p>stressType:\u53ef\u53d6'StressXX','StressYY','StressZZ'. stressValue:\u4e3a\u5e94\u529b\u503c\uff0c\u5355\u4f4d\u4e3aPa. border:\u538b\u529b\u677f\u7684\u5e94\u529b\u65bd\u52a0\u8303\u56f4</p> <p>\u4e0b\u56fe2</p> <p>\u8f93\u5165\u4e3a\u56db\u4e2a\u65f6\uff0c\u4e3asetPlatenStress(StressXX,StressYY,StressZZ,border)</p> <p>\u6839\u636e\u5e94\u529b\u8bbe\u5b9a\u503c\u548c\u8303\u56f4\uff0c\u4f7f\u7528fs.setPlatenStress(d,stressType,stressValue,border);\u5728\u538b\u529b\u677f\u4e0a\u65bd\u52a0\u4f53\u529b(\u5e94\u529b\uff09</p> <p>StressXX,StressYY,StressZZ:X,Y,Z\u65b9\u5411\u4e0a\u7684\u5e94\u529b\u503c \uff1bborder:\u538b\u529b\u677f\u7684\u5e94\u529b\u65bd\u52a0\u8303\u56f4</p> <p>\u4e0b\u56fe2</p> <p>nan</p> <p>\u5173\u4e8eborder\uff1a\u5728\u505a\u5355\u8f74\u538b\u7f29\u8bd5\u9a8c\u65f6\uff0c\u7531\u4e8e\u4e0a\u538b\u529b\u677f\u8bbe\u4e3a\u4e0e\u8bd5\u6837\u7b49\u5927\uff0c\u8bbe\u5b9a\u5e94\u529b\u65b9\u5411\u548c\u5927\u5c0f\u5373\u53ef\u3002\u800c\u5bf9\u4e8e\u771f\u4e09\u8f74\u8bd5\u9a8c\uff0c\u8003\u8651\u5230\u538b\u529b\u677f\u901a\u5e38\u8981\u6bd4\u8bd5\u6837\u5c3a\u5bf8\u5927\uff0c\u4f53\u529b\u4e0d\u80fd\u4f5c\u7528\u5728\u538b\u529b\u677f\u4e0a\u7684\u6bcf\u4e2a\u5355\u5143\u3002\u4ee5topPlaten\u4e3a\u4f8b\uff0c\u901a\u8fc7\u4f7f\u7528fs.setPlatenStress\u547d\u4ee4\uff0c\u53ef\u67e5\u627e\u6837\u54c1\u5355\u5143\u4e2d\u79bbplaten\u4e00\u5b9a\u8ddd\u79bb\u5185\u7684\u5355\u5143\uff0c\u5e76\u4ee5\u8fd9\u4e9b\u5355\u5143\u7684XY\u8303\u56f4\u6765\u786e\u5b9aplaten\u4e0a\u9700\u8981\u65bd\u52a0\u5e94\u529b\u7684\u5355\u5143\u3002\u5728\u4e09\u8f74\u8bd5\u9a8c\u4e2d\uff0c\u5f53\u8bd5\u6837\u53d8\u5f62\u65f6\uff0c\u9700\u8981\u4e0d\u65ad\u8fd0\u884c\u8fd9\u4e2a\u547d\u4ee4\u4ee5\u6b63\u786e\u65bd\u52a0\u5e94\u529b\u3002</p> <p>\u6ce8\u610f\uff1a\u5728\u505a\u4e09\u8f74\u8bd5\u9a8c\u65f6\uff0c\u8003\u8651\u8bd5\u6837\u5728\u67d0\u4e00\u7ef4\u5ea6\u4e0a\u53ef\u80fd\u53d1\u751f\u81a8\u80c0\uff08\u5982\u65bd\u52a0\u62c9\u529b\uff09\uff0c\u4e3a\u9632\u6b62\u9897\u7c92\u6f0f\u51fa\uff0c\u9700\u8981\u5c06\u538b\u529b\u677f\u548c\u8fb9\u754c\u8bbe\u5927\u4e00\u4e9b\uff0c\u5373\u8bbe\u5b9aB.BexpandRate\u548cB.PexpandRate\uff0c\u53c2\u89c1user_3DJointStress1\u3002\u56fe2\u4e3aB.BexpandRate=B.sampleW*0.1/B.ballR;B.PexpandRate=B.sampleW*0.1/B.ballR;\uff0c\u5c06\u8fb9\u754c\u548c\u677f\u5411\u5916\u589e\u52a010%\u3002\u4e3a\u9632\u6b62\u538b\u529b\u677f\u201c\u6ed1\u843d\u201d\uff0c\u5bf9\u9501\u5b9a\u538b\u529b\u677f\u7684\u56db\u5411\u8fb9\u754c\u5355\u5143\uff0c\u4f7f\u5176\u4ec5\u80fd\u5728\u538b\u529b\u677f\u6cd5\u5411\u4e0a\u8fd0\u52a8\uff0c\u56fe3\u7ea2\u8272\u4e3aX\u65b9\u5411\u81ea\u7531\u5ea6\u9501\u5b9a</p> <p>nan</p> <p>\u56fe1</p> <p>\u56fe2</p> <p>\u56fe3</p>"},{"location":"api/planetfs/","title":"planetfs","text":"<p>class planetfs</p> Properties Methods <p>resetmGXYZ(d)</p> <p>\u7531\u4e8e\u5f15\u529b\u662f\u7d2f\u79ef\u7684\uff0c\u6bcf\u6b21\u8ba1\u7b97\u65f6\uff0c\u9700\u8981\u91cd\u7f6e\u5355\u5143\u4f53\u529b\uff08\u5f15\u529b\uff09\u4e3a0</p> <p>d:build\u5bf9\u8c61\uff1b</p> <p>\u65e0</p> <p>user_Asteroid</p> <p>setGroupInnerGravitation(d, gName, isGPU)</p> <p>\u8bbe\u7f6e\u7ec4\u5185\u5355\u5143\u76f8\u4e92\u4e4b\u95f4\u7684\u4e07\u6709\u5f15\u529b\uff0c\u5e76\u5c06\u529b\u7d2f\u52a0\u5230mGX\uff0cmGY\uff0cmGZ\u4e0a</p> <p>d:build\u5bf9\u8c61\uff1b</p> <p>\u65e0</p> <p>user_Asteroid</p> <p>setModelGravitation(d, isGPU)</p> <p>\u4e25\u683c\u8ba1\u7b97\u6240\u6709\u6d3b\u52a8\u5355\u5143\u4e4b\u95f4\u7684\u4e07\u6709\u5f15\u529b\uff0c\u5e76\u5c06\u529b\u7d2f\u52a0\u5230mGX\uff0cmGY\uff0cmGZ\u4e0a</p> <p>d:build\u5bf9\u8c61\uff1bisGPU\u662f\u5426\u7528GPU\u8ba1\u7b97</p> <p>\u65e0</p> <p>user_Asteroid</p> <p>limitElementInSphere(d, sphereR)</p> <p>\u5f53\u6d3b\u52a8\u5355\u5143\u4f4d\u7f6e\u5728\u8ddd\u539f\u70b9sphereR\u8ddd\u79bb\u5916\u65f6\uff0c\u5bf9\u5176\u65bd\u52a0\u963b\u5c3c\u529b\uff0c\u5e76\u5c06\u5176\u56fa\u5b9a\u5728sphereR\u4e4b\u5916</p> <p>d:build\u5bf9\u8c61\uff1b</p> <p>\u65e0</p> <p>user_Asteroid</p> <p>limitElementInFrame(d)</p> <p>\u6839\u636ed.mo.frame\u7684\u503c\uff0c\u5f53\u5355\u5143\u5728frame\u5b9a\u4e49\u7684\u533a\u57df\u5916\u65f6\uff0c\u65bd\u52a0\u4e34\u754c\u963b\u5c3c</p> <p>d:build\u5bf9\u8c61\uff1b</p> <p>\u65e0</p> <p>user_Asteroid</p> <p>getEscapeSpeed(d, gName)</p> <p>\u83b7\u53d6\u7ec4\uff08\u7403\u4f53\uff09\u7684\u8868\u9762\u9003\u9038\u901f\u5ea6\uff08\u5176\u536b\u661f\u901f\u5ea6\u8981\u5c0f\u4e8e\u8fd9\u4e2a\u503c\uff09</p> <p>d:build\u5bf9\u8c61\uff1b</p> <p>\u65e0</p> <p>user_Asteroid</p> <p>setZeroMomentum(d)</p> <p>\u5efa\u7acb\u65b0\u7684\u53c2\u8003\u7cfb\uff0c\u4f7f\u5f97\u6a21\u578b\u5728\u5404\u4e2a\u65b9\u5411\u4e0a\u7684\u52a8\u91cf\u5747\u4e3a0\uff0c\u4ee5\u4fdd\u8bc1\u6a21\u578b\u4e0d\u4f1a\u6574\u4f53\u8fd0\u52a8</p> <p>d:build\u5bf9\u8c61\uff1b</p> <p>[dVx,dVy,dVz]\uff1a\u65b0\u53c2\u8003\u7cfb\u7684\u901f\u5ea6\u5206\u91cf</p> <p>user_Asteroid</p> <p>getModelMomentum(d)</p> <p>\u83b7\u5f97\u6a21\u578b\u5f53\u524d\u7684\u52a8\u91cf\uff0c\u7528\u5728setZeroMomentum\u4e2d</p> <p>d:build\u5bf9\u8c61\uff1b</p> <p>[modelMoX,modelMoY,modelMoZ]\uff1a\u6a21\u578b\u5728X\uff0cY\uff0cZ\u65b9\u5411\u4e0a\u7684\u52a8\u91cf</p> <p>user_Asteroid</p> <p>setGroupOuterGravitation(d, gName)</p> <p>\u8bbe\u7f6e\u7ec4\u5bf9\u7ec4\u5916\u5355\u5143\u7684\u5f15\u529b\uff0c\u5f53\u53ea\u6709\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u65f6\uff0cgName\u9ed8\u8ba4\u4e3a\u5168\u90e8\u7ec4</p> <p>d:build\u5bf9\u8c61\uff1bgName\uff1a\u7ec4\u540d\u5b57\u7b26\u4e32\u6216\u591a\u4e2a\u7ec4\u7684cell array</p> <p>user_Asteroid</p> <p>getModelGroup(d)</p> <p>\u83b7\u5f97\u5f53\u524d\u6a21\u578b\u4e2d\u7684\u7ec4\u540d\u7684cell array</p> <p>d:build\u5bf9\u8c61\uff1b</p> <p>modelG\uff1a\u7ec4\u540d\u7684cell array</p> <p>user_Asteroid</p> <p>getGroupCenter(d)</p> <p>\u83b7\u5f97\u5f53\u524d\u6a21\u578b\u4e2d\u6240\u6709\u7ec4\u7684\u4e2d\u5fc3\u5750\u6807\uff0c\u5e76\u8fd4\u56de</p> <p>d:build\u5bf9\u8c61\uff1b</p> <p>groupCenter\uff1a\u7ec4\u4e2d\u5fc3\u5750\u6807\u7ed3\u6784\u4f53</p> <p>user_Asteroid</p>"},{"location":"api/pore/","title":"pore","text":"<p>class pore</p> Properties <p>d</p> <p>build\u5bf9\u8c61</p> <p>SET</p> <p>\u6a21\u62df\u8bbe\u7f6e\u4fe1\u606f\uff0c\u53ef\u8bb0\u5f55\u4e8c\u6b21\u5f00\u53d1\u65b0\u7684\u6570\u636e</p> <p>TAG</p> <p>\u6a21\u62df\u4fe1\u606f\u8bb0\u5f55\uff0c\u7528\u4e8e\u8bb0\u5f55\u548c\u8f93\u51fa\u4fe1\u606f</p> <p>solutePara</p> <p>pore.addSolutePara\u547d\u4ee4\u6267\u884c\u540e\uff0c\u5c06\u6c42\u89e3\u53c2\u6570\u7ed3\u6784\u4f53\u5b58\u4e8e\u8fd9\u4e2a\u53c2\u6570\uff0c\u7ed3\u6784\u4f53\u5b57\u6bb5\u8be6\u89c1pore\u51fd\u6570\u5de5\u4f5c\u8868\u4e0b\u65b9</p> <p>\u89c1\u793a\u4f8bGeoThermalBox3</p> <p>pathLimitRate</p> <p>\u5b54\u5589\u8ddd\u79bb\u9608\u503c\u6bd4\u7387\uff0c\u9ed8\u8ba4\u503c0.5\uff0c\u53d6\u503c\u8303\u56f4\u5efa\u8bae[0.1,0.8]\uff0c\u5b54\u5589\u5bbd\u5ea6\u5c0f\u4e8erate*min(ballR)\u7684\u8fde\u63a5\u89c6\u4f5c\u6784\u6210\u5b54\u9699\u7684\u8fde\u63a5</p> <p>cDiameterAdd</p> <p>\u8fde\u63a5\u5bf9\u5e94\u7684\u5b54\u5589\u9644\u52a0\u5bbd\u5ea6\u3002\u7531\u4e8e\u4e8c\u7ef4\u9897\u7c92\u5806\u79ef\u901a\u5e38\u4f1a\u5c01\u95ed\u5b54\u5589\uff0c\u9700\u8981\u589e\u52a0\u4e00\u5b9a\u7684\u5b54\u5589\u76f4\u5f84\uff0c\u4ee5\u4fdd\u8bc1\u6d41\u4f53\u8fd0\u79fb</p> <p>cList</p> <p>\u8fde\u63a5\u5217\u8868\uff0c\u6bcf\u4e00\u884c\u4ee3\u8868\u8fde\u63a5\u7684\u8d77\u59cb\u5355\u5143Id\u4e0e\u7ec8\u6b62\u5355\u5143Id(\u8fde\u63a51\u20143\u4e0e3\u20141\u4e3a\u4e0d\u540c\u8fde\u63a5)\uff0c\u51712\u5217\uff0c\u6309\u5355\u5143Id\u5347\u5e8f\u6392\u5217</p> <p>cIndexInverse</p> <p>\u8fde\u63a5\u7684\u53cd\u5411\u8fde\u63a5Id\uff0c\u7528\u4e8e\u8ba1\u7b97\u5b54\u9699\u7f51\u7edc</p> <p>cIndexNext</p> <p>\u8fde\u63a5\u7684\u4e0b\u4e00\u4e2a\u8fde\u63a5Id\uff0c\u540c\u4e00\u9897\u7c92\u7684\u8fde\u63a5\u6309\u9006\u65f6\u9488\u6392\u5e8f\uff0c\u7528\u4e8e\u8ba1\u7b97\u5b54\u9699\u7f51\u7edc</p> <p>cPore</p> <p>\u8fde\u63a5\u6240\u5728\u5b54\u9699Id\uff0c\u8fde\u63a5\u65b9\u5411\u4e0e\u5b54\u9699\u9075\u5faa\u53f3\u624b\u87ba\u65cb\u6cd5\u5219\uff0c\u6545\u8fde\u63a5\u4e0e\u5b54\u9699\u4e00\u4e00\u5bf9\u5e94\uff0c\u8fb9\u754c\u8fde\u63a5\u4e0d\u5728\u4efb\u4f55\u5b54\u9699\u4e2d\uff0c\u5176\u503c\u4e3a\u53cd\u5411\u8fde\u63a5\u6240\u5728\u5b54\u9699</p> <p>cPoreInverse</p> <p>\u53cd\u5411\u8fde\u63a5\u6240\u5728\u5b54\u9699Id</p> <p>cDiameter</p> <p>\u8fde\u63a5\u5bf9\u5e94\u5b54\u5589\u7684\u5b9e\u9645\u5bbd\u5ea6\uff08\u5b54\u5589\u5782\u76f4\u4e8e\u8fde\u63a5\uff09</p> <p>cLength</p> <p>\u8fde\u63a5\u957f\u5ea6</p> <p>cPathLength</p> <p>\u5b54\u5589\u957f\u5ea6\uff0c\u7b49\u4e8e\u5b54\u5589\u5bf9\u5e94\u7684\u4e24\u4e2a\u5355\u5143\u8f83\u5c0f\u7684\u534a\u5f84\uff08\u4e0d\u662f\u76f4\u5f84\uff01\uff09</p> <p>cKFlow</p> <p>\u8fde\u63a5\uff08\u5b54\u5589\uff09\u6e17\u900f\u7cfb\u6570</p> <p>cnIndex</p> <p>\u8fde\u63a5\u5728nBall\u4e2d\u7684\u7d22\u5f15\uff0c\u7528\u4e8e\u5c06nBall\u5927\u5c0f\u7684\u586b\u5145\u77e9\u9635\u8f6c\u5316\u4e3a\u5bf9\u5e94\u63a5\u89e6\u5bf9\u6570\u7ec4 e.g. cbFilter=d.mo.bFilter(cnIndex);%bonded filter of cList</p> <p>\u89c1\u793a\u4f8bPoreHydraulicStatic3</p> <p>nBallP</p> <p>\u5b54\u9699\u8fde\u63a5\u5bf9\u5e94\u7684nBall\uff0c\u5f53\u51fa\u73b0\u5b64\u7acb\u9897\u7c92\u65f6\uff0c\u9700\u8981\u52a0\u5165\u989d\u5916\u90bb\u5c45\u9897\u7c92\uff0c\u53ef\u80fd\u4e0ed.mo.nBall\u4e0d\u540c</p> <p>nConnectFilter1</p> <p>\u4e0enBallP\u5bf9\u5e94\u7684\u6784\u6210\u6709\u6548\u5b54\u9699\u8fde\u63a5\u7684\u8fc7\u6ee4\u5668</p> <p>nConnectFilter2</p> <p>\u7528\u4e8e\u8bb0\u5f55\u5b64\u7acb\u9897\u7c92(\u56e2)\u7684\u8fde\u63a5\u8fc7\u6ee4\u5668\uff0c\u907f\u514d\u5b54\u9699\u9762\u79ef\u8ba1\u7b97\u51fa\u9519</p> <p>aWaterdR</p> <p>\u5355\u5143\u6d41\u4f53\u4f5c\u7528\u51cf\u5c11\u534a\u5f84\uff0c\u7528\u4e8e\u5b9a\u4e49cDiameterAdd</p> <p>NcPore</p> <p>\u5355\u5143\u90bb\u5c45\u5b54\u9699Id\uff0cmNum\u884c\uff0c\u6bcf\u884c\u8bb0\u5f55\u5bf9\u5e94\u5355\u5143\u90bb\u5c45\u5b54\u9699Id</p> <p>poreC</p> <p>\u5b54\u9699\u5bf9\u5e94\u8fde\u63a5\u5143\u80de\u6570\u7ec4</p> <p>poreNearby</p> <p>\u5b54\u9699\u7684\u90bb\u5c45\u5b54\u9699\u5143\u80de\u6570\u7ec4</p> <p>poreFlowMass</p> <p>\u5b54\u9699\u6e17\u6d41\u6d41\u4f53\u8d28\u91cf\u5143\u80de\u6570\u7ec4</p> <p>poreIndex</p> <p>\u5b54\u9699Id\u5bf9\u5e94\u5143\u80de\u6570\u7ec4</p> <p>poreP</p> <p>\u5b54\u9699\u6784\u6210\u9897\u7c92\u5143\u80de\u6570\u7ec4\uff08\u9996\u5c3e\u5217\u76f8\u540c\uff09</p> <p>poreCAngle</p> <p>*\u7528\u4e8e\u5b54\u9699\u51e0\u4f55\u8ba1\u7b97</p> <p>porePAngle</p> <p>*\u540c\u4e0a</p> <p>porePAngleOverlap1</p> <p>*\u540c\u4e0a</p> <p>porePAngleOverlap2</p> <p>*\u540c\u4e0a</p> <p>porePOuterLength</p> <p>*\u540c\u4e0a</p> <p>porePOuterAngle</p> <p>*\u540c\u4e0a</p> <p>fluid_k</p> <p>obj.pDensity=obj.fluid_k*obj.pPressure+obj.fluid_c;</p> <p>fluid_c</p> <p>obj.pDensity=obj.fluid_k*obj.pPressure+obj.fluid_c;</p> <p>pNum</p> <p>\u5212\u5206\u5b54\u9699\u6570\u76ee</p> <p>pPoints</p> <p>\u5b54\u9699\u6784\u6210\u5355\u5143\u5143\u80de\u6570\u7ec4\uff0cpNum\u884c\uff0c\u6bcf\u884c\u8bb0\u5f55\u6784\u6210\u5b54\u9699\u7684\u9897\u7c92Id\uff0c\u7531\u4e8eporeP\u8f6c\u5316\u5f97\u5230</p> <p>pMass</p> <p>\u5b54\u9699\u6d41\u4f53\u8d28\u91cf\u5217\u8868</p> <p>pArea</p> <p>\u5b54\u9699\u6d41\u4f53\u9762\u79ef\u5217\u8868</p> <p>pDensity</p> <p>\u5b54\u9699\u6d41\u4f53\u5bc6\u5ea6\u5217\u8868</p> <p>pPressure</p> <p>\u5b54\u9699\u6d41\u4f53\u538b\u529b\u5217\u8868</p> <p>pK</p> <p>fluid_k of each pore</p> <p>pC</p> <p>fluid_c of each pore</p> <p>dT</p> <p>\u6d41\u4f53\u8ba1\u7b97\u65f6\u95f4\u6b65</p> <p>totalT</p> <p>\u5f53\u524d\u8ba1\u7b97\u65f6\u523b</p> <p>isCouple</p> <p>\u662f\u5426\u8026\u5408\u56fa\u4f53\uff0cisCouple=0\u6d41\u4f53\u4e0d\u5bf9\u9897\u7c92\u4ea7\u751f\u529b\u4f5c\u7528\uff0cisCouple=1\uff0c\u6d41\u4f53\u5bf9\u9897\u7c92\u4ea7\u751f\u529b\u4f5c\u7528\uff0c\u6d89\u53ca\u5b54\u9699\u7684\u91cd\u65b0\u5256\u5206\u53ca\u6570\u636e\u4f20\u9012</p> <p>pThickness</p> <p>\u5b54\u9699\u539a\u5ea6\uff08\u6cbfY\u65b9\u5411\uff09</p> <p>isGPU</p> <p>\u662f\u5426\u542f\u7528GPU\u8ba1\u7b97</p> Methods <p>addSolutePara(obj,para)</p> <p>\u6dfb\u52a0\u6eb6\u8d28\u8fd0\u79fb\u95ee\u9898\u7684\u6c42\u89e3\u53c2\u6570\uff0c\u5982\u6e29\u5ea6\uff0c\u6eb6\u8d28\u6d53\u5ea6\u7b49\uff0c\u5e76\u521d\u59cb\u5316\u5c5e\u6027\u503c(\u8bb0\u5f55\u4e8ep.SET\u4e2d)</p> <p>obj: pore\u5bf9\u8c61; para: \u6c42\u89e3\u53c2\u6570\u7ed3\u6784\u4f53\uff0c\u8bb0\u5f55\u4e8ep.solutePara\u4e2d</p> <p>\u89c1GeoThermalBox\u793a\u4f8b</p> <p>balance(obj,varargin)</p> <p>\u6d41\u4f53\u8fed\u4ee3\u8ba1\u7b97</p> <p>varargin\uff1a\u53ef\u53d8\u8f93\u5165\u53c2\u6570\uff080-3\u4e2a\uff09\uff0c\u8be6\u89c1\u4e0b\u65b9</p> <p>pId=getBallConnectedPore(obj,bId)</p> <p>\u6839\u636e\u9897\u7c92Id\u5f97\u5230\u90bb\u5c45\u5b54\u9699Id</p> <p>bId\uff1a\u9897\u7c92Id</p> <p>pId: \u5b54\u9699Id</p> <p>setFlowPath(obj)</p> <p>\u8bbe\u7f6e\u5b54\u5589\u5bbd\u5ea6(cDiameter)\u53ca\u6e17\u5f84\u957f\u5ea6(cPathLength)</p> <p>setInitialPores(obj)</p> <p>\u641c\u7d22\u5b54\u9699\u5e76\u521d\u59cb\u5316\u5b54\u9699\u53c2\u6570</p> <p>conFilter\uff0c\u4e0eplaten\u8fde\u901a\u7684\u8fc7\u6ee4\u5668</p> <p>\u89c1GeoThermalBox\u793a\u4f8b</p> <p>setPressure(obj,varargin)</p> <p>\u8bbe\u7f6e\u5b54\u9699\u6d41\u4f53\u6d41\u4f53\u538b\u529b\uff0c\u5e76\u66f4\u65b0\u76f8\u5173\u53c2\u6570</p> <p>varargin: \u65e0\u8f93\u5165\u6216\u4e0ep.pPressure\u7b49\u5927\u6570\u7ec4</p> <p>show(obj,varargin)</p> <p>\u540e\u5904\u7406\u7ed8\u56fe\u51fd\u6570\uff0c\u8be6\u89c1\u4e0b\u65b9</p> <p>setNewPore(obj)</p> <p>\u66f4\u65b0\u5b54\u9699\u62d3\u6251\u7ed3\u6784</p> <p>setPlaten(obj,type)</p> <p>\u8bbe\u7f6eplaten\u5355\u5143\u72b6\u6001</p> <p>type:\u53d6\u503c\u2018fix'\u6216\u2019unfix', \u662f\u5426\u9501\u5b9aplaten\u5355\u5143\u5750\u6807</p> <p>\u89c1GeoThermalBox\u793a\u4f8b</p> <p>pId=setBallPressure(obj,bId,pressure)</p> <p>\u90e8\u5206\u66f4\u65b0\u9897\u7c92\u90bb\u5c45\u5b54\u9699\u6d41\u4f53\u538b\u529b\uff0c\u5e76\u66f4\u65b0\u76f8\u5e94\u53c2\u6570(\u5bc6\u5ea6\uff0c\u8d28\u91cf\u7b49\uff09\uff1b\u5e38\u7528\u4e8e\u8bbe\u7f6e\u538b\u529b\u8fb9\u754c\u6761\u4ef6</p> <p>bId\uff1a\u9897\u7c92Id; pressure: \u538b\u529b\u6570\u7ec4\uff0c\u5927\u5c0f\u4e0ebId\u76f8\u540c</p> <p>pId: bId\u5bf9\u5e94\u9897\u7c92\u90bb\u5c45\u5b54\u9699Id</p> <p>\u89c1GeoThermalBox\u793a\u4f8b</p> <p>setDensity(obj,varargin)</p> <p>\u8bbe\u7f6e\u90e8\u5206\u5b54\u9699\u6d41\u4f53\u5bc6\u5ea6\uff0c\u5e76\u66f4\u65b0\u8d28\u91cf\u7b49\u76f8\u5e94\u53c2\u6570\uff0c\u7c7b\u4f3csetPressure</p> <p>\u7c7b\u4f3csetPressure</p> <p>obj=pore(d)</p> <p>\u521d\u59cb\u5316\u5b54\u9699\u7c7b</p> <p>d: build\u5bf9\u8c61</p> <p>obj\uff1apore\u5bf9\u8c61</p> <p>\u89c1GeoThermalBox\u793a\u4f8b</p> <p>setMass(obj,varargin)</p> <p>\u8bbe\u7f6e\u5b54\u9699\u6d41\u4f53\u8d28\u91cf\uff0c\u5e76\u66f4\u65b0\u76f8\u5173\u53c2\u6570\uff0c\u53ef\u7528\u4e8e\u8bbe\u7f6e\u6d41\u91cf\u8fb9\u754c\u6761\u4ef6\uff0c\u7c7b\u4f3csetPressure</p> <p>setNewNBall(obj)</p> <p>d.mo.nBall\u66f4\u65b0\u65f6\uff0c\u91cd\u65b0\u641c\u7d22\u5b54\u9699</p> <p>balanceConvection(obj,varargin)</p> <p>\u5bf9\u6d41\u8ba1\u7b97\uff08\u7531\u4e8e\u6e17\u6d41(\u901f\u5ea6)\u5f15\u8d77\u7684\u70ed\u5bf9\u6d41\uff0c\u673a\u68b0\u6269\u6563\u7b49\u8fc7\u7a0b\uff09</p> <p>varargin\uff1a\u65e0\u8f93\u5165\u65f6\uff0c\u8ba1\u7b97\u6240\u6709\u6c42\u89e3\u53c2\u6570(\u8bb0\u5f55\u4e8ep.solutePara)</p> <p>balanceConvection0(obj,paraI)</p> <p>\u5bf9\u6d41\u8ba1\u7b97\u57fa\u7840\u51fd\u6570</p> <p>paraI\uff1a\u6c42\u89e3\u53c2\u6570\u7ed3\u6784\u4f53</p> <p>balanceDiffusion0(obj,paraI)</p> <p>\u6269\u6563\u8ba1\u7b97\uff08\u7531\u4e8e\u6e29\u5ea6\u68af\u5ea6\uff0c\u6d53\u5ea6\u68af\u5ea6\u5f15\u8d77\u7684\u70ed\u4f20\u5bfc\uff0c\u5206\u5b50\u6269\u6563\u7b49\u8fc7\u7a0b\uff09</p> <p>paraI\uff1a\u540c\u4e0a</p> <p>balanceFluid(obj)</p> <p>\u6e17\u6d41\u8ba1\u7b97</p> <p>ball2Fluid(obj)</p> <p>\u6839\u636e\u56fa\u4f53\u9897\u7c92\u5806\u79ef\u8ba1\u7b97\u5b54\u9699\u6d41\u4f53\u9762\u79ef,\u5bc6\u5ea6,\u538b\u529b\u7b49</p> <p>density2Mass(obj)</p> <p>\u901a\u8fc7\u5b54\u9699\u6d41\u4f53\u5bc6\u5ea6\u66f4\u65b0\u8d28\u91cf</p> <p>density2Pressure(obj)</p> <p>\u901a\u8fc7\u5b54\u9699\u6d41\u4f53\u5bc6\u5ea6\u66f4\u65b0\u538b\u529b</p> <p>dispNote(obj,note)</p> <p>\u6d88\u606f\u8f93\u51fa</p> <p>note: \u6d88\u606f\u5b57\u7b26\u4e32</p> <p>fluid2Ball(p)</p> <p>\u8ba1\u7b97\u6d41\u4f53\u5bf9\u56fa\u4f53\u4f5c\u7528\u529b\uff0c\u66f4\u65b0d.mo.mPX, d.mo.mPZ</p> <p>gpuStatus=setGPU(obj,type0)</p> <p>\u540cbuild\u7c7b</p> <p>mass2Density(obj)</p> <p>\u901a\u8fc7\u5b54\u9699\u6d41\u4f53\u8d28\u91cf\u66f4\u65b0\u5bc6\u5ea6</p> <p>nConnectFilter2New=getNConnectFilter2(obj,nConnectFilter1)</p> <p>\u7528\u4e8e\u66f4\u65b0nConnectFilter2\uff0c\u907f\u514d\u5b64\u7acb\u9897\u7c92(\u56e2)\u5f15\u8d77\u8ba1\u7b97\u51fa\u9519</p> <p>obj1=setNearbyPore(obj)</p> <p>\u91cd\u65b0\u641c\u7d22\u5b54\u9699\u62d3\u6251\u7ed3\u6784\uff0c\u7528\u4e8e\u6570\u636e\u4f20\u9012</p> <p>obj\uff1apore\u5bf9\u8c61</p> <p>pArea0=getPoreArea(p)</p> <p>\u8ba1\u7b97\u5b54\u9699\u9762\u79ef</p> <p>pDensityNew=transferData(objOld,objNew)</p> <p>\u57fa\u4e8e\u65b0\u8001\u5b54\u9699\u62d3\u6251\u7ed3\u6784\u66f4\u65b0\u5b54\u9699\u6d41\u4f53\u5bc6\u5ea6(\u4ee5\u6ee1\u8db3\u8d28\u91cf\u5b88\u6052)\uff0c\u8fdb\u800c\u66f4\u65b0\u6d41\u4f53\u538b\u529b</p> <p>pId=setBallPara(obj,type,bId,value)</p> <p>\u90e8\u5206\u66f4\u65b0\u9897\u7c92\u90bb\u5c45\u5b54\u9699\u6c42\u89e3\u53c2\u6570 \u8bb0\u5f55\u4e8ep.SET\u4e2d</p> <p>type: \u53c2\u6570\u540d; bId: \u9897\u7c92Id, value: \u9897\u7c92\u5c5e\u6027\u503c</p> <p>\u89c1GeoThermalBox\u793a\u4f8b</p> <p>recordStatus(obj)</p> <p>*\u5f85\u5f00\u53d1</p> <p>setWaterdR(obj)</p> <p>\u57fa\u4e8ep.aWaterdR\u8bbe\u7f6e\u5b54\u5589\u7684\u6c34\u529b\u534a\u5f84\uff0c\u7528\u4e8e\u8ba1\u7b97cDiameterAdd</p> <p>showData(obj,vName)</p> <p>\u7ed8\u56fe\u57fa\u51fd\u6570\uff0c\u4e00\u822c\u4e0d\u76f4\u63a5\u4f7f\u7528</p> <p>vName: \u5c5e\u6027\u540d\uff0c\u7ed8\u56fe\u5185\u5bb9</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"book/","title":"TOC","text":"<ul> <li>\u7406\u8bba\u7bc7<ul> <li>\u51e0\u4f55\u5efa\u6a21\u548c\u6750\u6599\u8bbe\u7f6e</li> <li>\u8377\u8f7d\u8bbe\u7f6e\u548c\u6570\u503c\u8ba1\u7b97</li> <li>\u540e\u5904\u7406\u548c\u7cfb\u7edf\u51fd\u6570</li> </ul> </li> <li>\u5e94\u7528\u7bc7<ul> <li>\u5ca9\u571f\u5de5\u7a0b\u57fa\u7840\u5e94\u7528</li> <li>\u5ca9\u571f\u4f53\u79bb\u6563\u5143\u8bd5\u9a8c</li> <li>\u590d\u6742\u4e09\u7ef4\u6a21\u578b\u7684\u5efa\u6a21</li> <li>\u52a8\u529b\u4f5c\u7528\u6570\u503c\u6a21\u62df</li> <li>\u591a\u573a\u8026\u5408\u6570\u503c\u6a21\u62df</li> </ul> </li> </ul>"},{"location":"book/BoxPile/","title":"\u6869\u571f\u4f5c\u7528","text":"<p>\u538b\u6869\u548c\u62d4\u6869\u5747\u6d89\u53ca\u5230\u5927\u53d8\u5f62\u7834\u574f\u548c\u52a8\u6001\u8fc7\u7a0b\uff0c\u79bb\u6563\u5143\u6570\u503c\u6a21\u62df\u80fd\u6709\u6548\u5730\u6a21\u62df\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u5e76\u4e3a\u7814\u7a76\u548c\u8bbe\u8ba1\u63d0\u4f9b\u53c2\u8003\u3002MatDEM\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801BoxPile\u6f14\u793a\u4e86\u5982\u4f55\u5efa\u7acb\u6700\u7b80\u5355\u7684\u6869\u571f\u4f5c\u7528\u6a21\u578b\uff0c\u4f7f\u7528\u8005\u53ef\u5728\u6b64\u57fa\u7840\u4e4b\u4e0a\u5efa\u7acb\u66f4\u52a0\u590d\u6742\u7684\u6a21\u578b\u3002</p>"},{"location":"book/BoxPile/#_2","title":"\u5806\u79ef\u5730\u5c42\u6a21\u578b","text":"<p>\u5728BoxPile1\u4e2d\uff0c\u5efa\u7acb\u4e86\u539f\u59cb\u5730\u5c42\u5806\u79ef\u6a21\u578b\uff08\u5806\u79ef\u6a21\u578b\u76f8\u5173\u4ecb\u7ecd\u89c13.1\u8282\uff09\u3002\u9996\u5148\uff0c\u9700\u8981\u6784\u9020\u6a21\u62df\u7bb1\u7c7bobj_Box\u7684\u5bf9\u8c61B\u5e76\u8bbe\u7f6e\u4e00\u4e9b\u53c2\u6570\uff0c\u7136\u540e\u5efa\u7acb\u521d\u59cb\u6a21\u578b\uff1a</p> user_BoxPile1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='BoxPile';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.1;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.25;%define distribution of ball radius, \nB.sampleW=20;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=20;\nB.BexpandRate=4;%boundary is 4-ball wider than \nB.PexpandRate=0;\nB.type='topPlaten';%add a top platen to compact model\nB.isSample=1;\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\n</code></pre> <pre><code>B=obj_Box;\nB.name='BoxPile';\nB.GPUstatus='auto';\nB.ballR=0.2;\nB.distriRate=0.25;\nB.isClump=0;\nB.isSample=1;\nB.isShear=0;\nB.sampleW=20;  \nB.sampleL=0;  \nB.sampleH=20;\nB.BexpandRate=4;  \nB.PexpandRate=0;\nB.type='topPlaten';  \nB.setType();\nB.buildInitialModel();\n</code></pre> <p>\u6a21\u578b\u4e2d\u7684\u53c2\u6570\u5747\u91c7\u7528\u56fd\u9645\u5355\u4f4d\u5236\uff0c\u5982\u957f\u5ea6\u5355\u4f4d\u4e3a\u7c73\uff08m\uff09\uff0c\u5bc6\u5ea6\u5355\u4f4d\u4e3a\u5343\u514b\u6bcf\u7acb\u65b9\u7c73\uff08kg/m3\uff09\u7b49\u3002\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u5efa\u7acb\u4e86\u4e00\u4e2a20m\u00d720m\uff08<code>sampleW\u00d7sampleH</code>\uff09\u7684\u4e8c\u7ef4\u5730\u5c42\u6a21\u578b\uff0c\u5e76\u4f7f\u6a21\u578b\u8fb9\u754c\u5411\u5916\u5ef6\u4f38\u4e864\u4e2a\u5355\u5143\u7684\u957f\u5ea6\uff08<code>BexpandRate=4</code>\uff09\uff0c\u4f7f\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u8fb9\u754c\u5f62\u6210\u201c\u4e95\u201d\u5b57\u5f62\uff0c\u4ee5\u9632\u6b62\u6837\u54c1\u5355\u5143\u5916\u6cc4\u3002\u7531\u4e8e<code>sampleL</code>\u8bbe\u4e3a0\uff0c\u6a21\u578b\u4e2d\u6240\u6709\u5355\u5143\u7684Y\u5750\u6807\u5747\u4e3a0\uff0c\u4e3a\u4e8c\u7ef4\u6a21\u578b\uff0c\u8be6\u89c1\u7b2c\u4e09\u7ae0\u4e2d\u76f8\u5e94\u7ae0\u8282\u3002\u540c\u65f6\uff0c\u901a\u8fc7<code>B.type= 'topPlaten'</code>\u547d\u4ee4\u6dfb\u52a0\u4e86\u4e00\u5757\u4e0a\u538b\u529b\u677f<code>topPlaten</code>\uff0c\u5176\u7528\u4e8e\u5728\u7b2c\u4e00\u6b65\u4e2d\u538b\u5b9e\u5806\u79ef\u6837\u54c1\uff0c\u5728\u672c\u793a\u4f8b\u7b2c\u4e8c\u6b65\u4e2d\uff0c<code>topPlaten</code>\u4f1a\u8fde\u540c\u6837\u54c1\u9876\u90e8\u7684\u5355\u5143\u88ab\u4e00\u8d77\u5220\u9664\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e9b\u5176\u4ed6\u7684\u53c2\u6570\uff0c\u5982\uff1a\u6a21\u62df\u65f6\u662f\u5426\u8003\u8651\u526a\u5207\u529b<code>isShear</code>\u3001\u662f\u5426\u5c06\u82e5\u5e72\u4e2a\u5355\u5143\u7ec4\u5408\u5728\u4e00\u8d77\u5f62\u6210\u56e2\u7c07<code>isClump</code>\u3001\u662f\u5426\u751f\u6210\u521d\u59cb\u7684\u6837\u54c1\u5355\u5143<code>isSample</code>\u7b49\u3002\u8fd9\u4e9b\u53c2\u6570\u7684\u5b9a\u4e49\u4e5f\u5728\u5e2e\u52a9\u4e2d\u8bf4\u660e\u4e86\uff0c\u5728\u6b64\u4e0d\u9010\u4e00\u4ecb\u7ecd\u3002</p> <p>\u5728\u751f\u6210\u4e86\u521d\u59cb\u7684\u51e0\u4f55\u6a21\u578b\u540e\uff0c\u53ef\u4ee5\u81ea\u884c\u8c03\u6574\u6a21\u578b\u5355\u5143\u7684\u534a\u5f84\uff0c\u7136\u540e\u8fdb\u884c\u91cd\u529b\u6c89\u79ef\u5e76\u538b\u5b9e\u6a21\u578b2\u6b21\uff1a</p> user_BoxPile1.m<pre><code>d=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\nd.mo.aR=d.aR;\n%--------------end initial model------------\n\n%---------- gravity sedimentation\nB.gravitySediment();%you may use B.gravitySediment(10); to increase sedimentation time (10)\nd.mo.aMUp(:)=0;\n%B.compactSample(2);%input is compaction time\n%mfs.reduceGravity(d,1);%reduce the gravity of element\n</code></pre> <pre><code>d=B.d;\n%Change the particle size distribution here, e.g.:d.mo.aR=d.aR*0.9;\nd.mo.aR=d.aR;\nB.gravitySediment();\nd.mo.aMUp(:)=0;\nB.compactSample(2);\n%mfs.reduceGravity(d,1); %reduce the gravity if necessary.\n</code></pre> <p>\u4e3a\u4f7f\u5355\u5143\u5806\u79ef\u7684\u66f4\u52a0\u5bc6\u5b9e\uff0c\u53ef\u4ee4\u6240\u6709\u5355\u5143\u7684\u6469\u64e6\u7cfb\u6570\uff08<code>aMUp</code>\uff09\u4e3a0\u3002\u5982\u9700\u5236\u5907\u65e0\u91cd\u529b\u4f5c\u7528\u7684\u6837\u54c1\uff0c\u8fd8\u9700\u901a\u8fc7\u5efa\u6a21\u51fd\u6570<code>mfs.reduceGravity</code>\u9010\u6b65\u51cf\u5c0f\u91cd\u529b\uff0c\u8be6\u89c1\u7b2c\u4e09\u7ae0\u4e2d\u76f8\u5e94\u7ae0\u8282\u3002</p> <p>\u901a\u8fc7\u4ee5\u4e0a\u6b65\u9aa4\u5373\u53ef\u5efa\u7acb\u521d\u59cb\u7684\u51e0\u4f55\u6a21\u578b\uff0c\u968f\u540e\u5373\u53ef\u4fdd\u5b58\u6570\u636e\u5e76\u8fdb\u884c\u540e\u5904\u7406\u663e\u793a\u3002\u5728\u4fdd\u5b58\u4e4b\u524d\uff0c\u9996\u5148\u5c06GPU\u8ba1\u7b97\u5173\u95ed\uff0c\u5373\u628a\u6240\u6709\u6570\u636e\u90fd\u8f6c\u5230CPU\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5728\u6ca1\u6709GPU\u7684\u8ba1\u7b97\u673a\u4e2d\u6253\u5f00\u6570\u636e\u65f6\u9020\u6210\u9519\u8bef\u3002\u7136\u540e\u8fd0\u884c<code>d.clearData(1)</code>\uff0c\u5c06\u6570\u636e\u8fdb\u884c\u538b\u7f29\u3002\u4fdd\u5b58\u5b8c\u6570\u636e\u540e\uff0c\u518d\u8fd0\u884c<code>d.calculateData()</code>\uff0c\u91cd\u65b0\u83b7\u53d6\u5b8c\u6574\u7684\u6570\u636e\uff0c\u5e76\u7528\u4e8e\u540e\u5904\u7406\u663e\u793a\u3002</p> <pre><code>%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxPile1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate) 'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> <p>\u901a\u8fc7\u4ee5\u4e0a\u547d\u4ee4\uff0c\u53ef\u5f97\u5230\u4e8c\u7ef4\u5730\u5c42\u5806\u79ef\u6a21\u578b\u5982\u56fe6.1-1\u6240\u793a\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u6a21\u578b\u4e2d\u51fa\u73b0\u660e\u663e\u7684\u529b\u94fe\uff0c\u8fd9\u662f\u9897\u7c92\u5806\u79ef\u4f53\u7684\u91cd\u8981\u73b0\u8c61\uff0c\u666e\u904d\u5b58\u5728\u4e8e\u9897\u7c92\u6750\u6599\u4e2d\uff0c\u8be6\u60c5\u53ef\u67e5\u9605\u76f8\u5173\u8d44\u6599\u3002</p> <p></p>"},{"location":"book/BoxPile/#_3","title":"\u5efa\u7acb\u6869\u571f\u4f5c\u7528\u6a21\u578b","text":""},{"location":"book/BoxPile/#_4","title":"\u5229\u7528\u8fc7\u6ee4\u5668\u524a\u5e73\u5730\u5c42","text":"<p>\u7b2c\u4e00\u6b65\u4e2d\u6a21\u62df\u771f\u5b9e\u4e16\u754c\u7684\u5806\u79ef\u8fc7\u7a0b\uff0c\u6784\u5efa\u4e86\u4e00\u4e2a\u521d\u59cb\u7684\u5806\u79ef\u5730\u5c42\u3002\u7b2c\u4e8c\u6b65\u4e2d\u5bf9\u5730\u5c42\u8fdb\u884c\u5207\u5272\u548c\u8d4b\u6750\u6599\u3002\u5728BoxPile2\u4e2d\uff0c\u9996\u5148\u9700\u8981\u5c06\u5728\u7b2c\u4e00\u6b65\u4e2d\u5f97\u5230\u7684\u6570\u636e\u8f7d\u5165\u5e76\u521d\u59cb\u5316\uff1a</p> <pre><code>load('TempModel/BoxPile1.mat');\nB.setUIoutput();\nd=B.d;\nd.mo.setGPU('off');\nd.calculateData();\nd.getModel();\n</code></pre> <p>\u8fdb\u4e00\u6b65\uff0c\u91c7\u7528\u8fc7\u6ee4\u5668<code>topLayerFilter</code>\u5c06\u4e0a\u538b\u529b\u677f\u548c\u539f\u59cb\u5730\u5c42\u7684\u9876\u90e8\u5220\u9664\uff1a</p> <pre><code>mZ=d.mo.aZ(1:d.mNum);\ntopLayerFilter=mZ&gt;max(mZ)*0.7;\nd.delElement(find(topLayerFilter));\n</code></pre> <p>\u8fdb\u884c\u4ee5\u4e0a\u64cd\u4f5c\u7684\u539f\u56e0\u662f\uff1a\u4e0a\u538b\u529b\u677f\u4ec5\u7528\u4e8e\u5728\u7b2c\u4e00\u6b65\u4e2d\u538b\u5b9e\u6837\u54c1\uff0c\u4e4b\u540e\u4fbf\u53ef\u79fb\u9664;\u800c\u539f\u59cb\u5730\u5c42\u8ddd\u4e0a\u8fb9\u754c\u8fc7\u8fd1\uff08\u89c1\u56fe6.1-1\uff09\uff0c\u6545\u524a\u53bb\u4e3a\u62d4\u6869\u8fc7\u7a0b\u9884\u7559\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u540c\u65f6\u5f97\u5230\u5e73\u6574\u7684\u5730\u5c42\u8868\u9762\u3002</p> <p>\u5728MatDEM\u4e2d\uff0c\u5220\u9664\u6307\u5b9a\u5355\u5143\u6216\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\u7684\u5173\u952e\u5728\u4e8e\u83b7\u5f97\u5bf9\u5e94\u5355\u5143\u7f16\u53f7\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u9996\u5148\u83b7\u53d6\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u7684\u5e03\u5c14\u77e9\u9635\uff0c\u5373\u8fc7\u6ee4\u5668\u77e9\u9635\uff08\u5982<code>topLayerFilter</code>\uff09\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u8c03\u7528Matlab\u81ea\u5e26\u51fd\u6570<code>find</code>\uff0c\u904d\u5386\u8be5\u5e03\u5c14\u77e9\u9635\u4e2d\u503c\u4e3a1\uff08true\uff09\u7684\u5143\u7d20\uff0c\u6765\u83b7\u5f97\u6240\u9700\u5355\u5143\u5bf9\u5e94\u7f16\u53f7\u3002\u6709\u5173\u8fc7\u6ee4\u5668\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528\u8bf7\u53c2\u89c15.3\u8282\u3002</p>"},{"location":"book/BoxPile/#_5","title":"\u5efa\u7acb\u6750\u6599\u6570\u7ec4","text":"<p>\u5728\u524a\u53bb\u5730\u5c42\u9876\u90e8\u53ca\u4e0a\u538b\u529b\u677f\u540e\uff0c\u9700\u8981\u5bfc\u5165\u5e76\u8bbe\u7f6e\u6750\u6599\uff1a</p> <pre><code>matTxt=load('Mats\\soil1.txt');\nMats{1,1}=material('Soil1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\StrongRock.txt');\nMats{2,1}=material('StrongRock',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;\nd.setGroupMat('sample', 'Soil1');\nd.groupMat2Model({'sample'},1);\n</code></pre> <p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u5bfc\u5165\u4e86\u4e24\u79cd\u6750\u6599\uff0cSoil1\u548cStrongRock\uff0c\u5176\u4e2d\u524d\u8005\u4f5c\u4e3a\u5730\u5c42\u6750\u6599\uff0c\u540e\u8005\u4f5c\u4e3a\u6869\u4f53\u6750\u6599\u3002\u6b64\u65f6\uff0c\u7531\u4e8e\u6a21\u578b\u4e2d\u9664\u8fb9\u754c\u5916\u53ea\u6709sample\u7ec4\uff0c\u56e0\u6b64\u53ea\u9700\u8bbe\u7f6esample\u7ec4\u7684\u6750\u6599\uff0c\u5e76\u5c06\u5176\u5e94\u7528\u4e8e\u6a21\u578b\u3002\u5f53\u7136\uff0c\u771f\u5b9e\u4e16\u754c\u4e2d\u5730\u5c42\u7684\u7ec4\u6210\u5f80\u5f80\u8f83\u4e3a\u590d\u6742\uff0c\u4f8b\u5982\u5728\u957f\u6c5f\u4e09\u89d2\u6d32\u5730\u533a\uff0c\u7802\u7c98\u4e92\u5c42\u7684\u6cb3\u6f2b\u6ee9\u4e8c\u5143\u7ed3\u6784\u5c31\u76f8\u5f53\u5e38\u89c1\u3002\u4f7f\u7528\u8005\u5e94\u5f53\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5c06\u6a21\u578b\u5206\u5c42\u5e76\u8d4b\u4e88\u4e0d\u540c\u7684\u6750\u6599\uff0c\u6709\u5173\u5185\u5bb9\u8be6\u89c1\u7b2c\u4e09\u7ae0\uff0c\u4ee5\u53caMatDEM\u63d0\u4f9b\u7684\u793a\u4f8bBoxSlope\u3001BoxLayer\u7b49\u3002</p> <p>\u6b64\u5904\u901a\u8fc7<code>d.setGroupMat('sample', 'Soil1')</code>\u547d\u4ee4\u5c06sample\u7ec4\u7684\u6750\u6599\u58f0\u660e\u4e3aSoil1\uff0c\u5e76\u8fdb\u4e00\u6b65\u901a\u8fc7<code>d.groupMat2Model</code>\u51fd\u6570\u5c06\u6750\u6599\u8d4b\u7ed9\u5355\u5143\u3002\u51fd\u6570<code>groupMat2Model</code>\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u662f\u4e00\u4e2a\u5143\u80de\u6570\u7ec4\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u9ed8\u8ba4\u6750\u6599Id\u3002\u901a\u8fc7\u8be5\u51fd\u6570\u53ef\u5c06\u5143\u80de\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7ec4\u6750\u6599\u8bbe\u5b9a\u4e3a\u524d\u671f\u58f0\u660e\u7684\u6750\u6599\uff0c\u800c\u5176\u4f59\u7ec4\u8bbe\u5b9a\u4e3a\u9ed8\u8ba4\u6750\u6599\u3002\u8fd0\u884c\u547d\u4ee4<code>groupMat2Model({'sample'},1)</code>\uff0c\u5c06\u8bbe\u7f6esample\u7ec4\u7684\u6750\u6599\uff0c\u800c\u5176\u4f59\u5355\u5143\u7684\u6750\u6599\u5219\u8bbe\u4e3a\u6750\u65991\u3002</p>"},{"location":"book/BoxPile/#_6","title":"\u5229\u7528\u7ed3\u6784\u4f53\u5efa\u7acb\u6869","text":"<p>\u968f\u540e\uff0c\u9700\u8981\u5efa\u7acb\u6869\u7684\u7ed3\u6784\u4f53\u5e76\u5c06\u5176\u52a0\u5165\u5df2\u6709\u7684\u5730\u5c42\u6a21\u578b\uff1a</p> <pre><code>pileW=0.8; pileL=0; pileH=8; ballR=B.ballR;\nRrate=0.7; drivingDis=6;\nsampleId=d.GROUP.sample;\nsampleTop=max(d.mo.aZ(sampleId)+d.mo.aR(sampleId));\npile1=mfs.denseModel(0.8,@mfs.makeBox,pileW,pileL,pileH,ballR);\npile1.Y(:)=0;\n</code></pre> <p>\u5728\u521b\u5efa\u6869\u6a21\u578b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8c03\u7528\u4e86\u51fd\u6570<code>mfs.denseModel</code>\u5e76\u5c06\u53e5\u67c4<code>@mfs.makeBox</code>\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\u4f20\u9012\uff0c\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u7531\u82e5\u5e72\u5355\u5143\u7684X\u3001Y\u3001Z\u5750\u6807\u53ca\u5176\u534a\u5f84R\u7ec4\u6210\u7684\u7ed3\u6784\u4f53\uff08struct\uff09\uff0c\u5176\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bbd0.8\u7c73\u3001\u9ad88\u7c73\u7684\u957f\u65b9\u5f62\u3002\u957f\u65b9\u5f62\u7684\u6784\u6210\u5355\u5143\u95f4\u6709\u4e00\u5b9a\u7684\u91cd\u53e0\u91cf\uff08\u56fe6.2-1\uff09\uff0c\u8fd9\u4e2a\u91cd\u53e0\u91cf\u901a\u8fc7\u7b2c\u4e00\u4e2a\u8f93\u5165\u53c2\u6570<code>Rrate</code>\uff08\u6b64\u5904\u4e3a0.8\uff09\u5b9a\u4e49\uff0c\u5373\u76f8\u90bb\u5355\u5143\u7403\u5fc3\u8ddd\u4e0e\u5176\u76f4\u5f84\u4e4b\u6bd4\u3002<code>Rrate</code>\u8d8a\u5c0f\uff0c\u91cd\u53e0\u91cf\u8d8a\u5927\uff0c\u6869\u4f53\u8868\u9762\u8d8a\u5149\u6ed1\uff0c\u4f46\u8ba1\u7b97\u91cf\u4e5f\u4f1a\u76f8\u5e94\u589e\u5927\u3002\u5982\u679c\u76f4\u63a5\u8c03\u7528<code>mfs.makeBox</code>\uff0c\u5219\u4f1a\u5efa\u7acb\u4e00\u4e2a\u5355\u5143\u4e4b\u95f4\u6070\u597d\u76f8\u4e92\u63a5\u89e6\u7684\u957f\u65b9\u5f62\u6a21\u578b \uff08\u65e0\u91cd\u53e0\uff09\u3002\u4f7f\u7528\u8005\u4e5f\u53ef\u4ee5\u7f16\u5199\u81ea\u5b9a\u4e49\u51fd\u6570\u6765\u6784\u5efa\u4efb\u610f\u51e0\u4f55\u4f53\uff0c\u6709\u5173\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u5185\u5bb9\u8be6\u89c15.5\u3002\u7531\u4e8e\u793a\u4f8b\u4ee3\u7801\u4e2d\u521b\u5efa\u7684\u662f\u4e8c\u7ef4\u6869\u4f53\uff0c\u56e0\u6b64\u9700\u8981\u4ee4\u8fd9\u6839\u6869\u7684\u6240\u6709\u5355\u5143\u7684Y\u5750\u6807\u4e3a0\uff0c\u5373<code>pile1.Y(:)=0</code>\u3002</p>"},{"location":"book/BoxPile/#_7","title":"\u5c06\u6869\u653e\u5165\u5730\u5c42\u4e2d","text":"<p>\u63a5\u7740\u5c06\u4e0a\u8ff0\u6869\u7684\u7ed3\u6784\u4f53\u6dfb\u52a0\u5230\u6a21\u578b\u4e2d\uff0c\u5e76\u8d4b\u4e88\u5176\u6750\u6599StrongRock\u7684\u529b\u5b66\u6027\u8d28\u3002\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a</p> <pre><code>pileId1=d.addElement('StrongRock',pile1);\nd.addGroup('Pile1',pileId1);\nd.setClump('Pile1');\nd.moveGroup('Pile1',(B.sampleW-pileW)/2,0,sampleTop-drivingDis);\nd.minusGroup('sample','Pile1',0.4);\nd.addFixId('X',d.GROUP.Pile1);\n</code></pre> <p>\u9996\u5148\uff0c\u901a\u8fc7\u51fd\u6570<code>d.addElement</code>\u5411\u6a21\u578b\u4e2d\u6dfb\u52a0\u5355\u5143\uff0c\u8be5\u51fd\u6570\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6750\u6599\u540d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u6240\u9700\u6dfb\u52a0\u7684\u7ed3\u6784\u4f53\uff0c\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c<code>pileId1</code>\u5219\u662f\u7ed3\u6784\u4f53\u88ab\u6dfb\u52a0\u5230\u6a21\u578b\u4e2d\u540e\u7684\u5355\u5143\u7f16\u53f7\u3002\u968f\u540e\uff0c\u901a\u8fc7\u51fd\u6570<code>addGroup</code>\u5c06\u65b0\u589e\u5355\u5143\u58f0\u660e\u4e3a\u7ec4<code>Pile1</code>\uff0c\u5e76\u901a\u8fc7\u51fd\u6570<code>setClump</code>\u628a\u6869\u4f53\u5355\u5143\u58f0\u660e\u4e3a\u56e2\u7c07\u3002\u8fd9\u662f\u7531\u4e8e\u5728\u4e0a\u4e00\u90e8\u5206\u4ee3\u7801\u4e2d\uff0c\u6869\u7ed3\u6784\u4f53\u662f\u7531\u51fd\u6570<code>denseModel</code>\u751f\u6210\uff0c\u6869\u5355\u5143\u95f4\u6709\u4e00\u5b9a\u91cd\u53e0\u91cf\uff0c\u4ece\u800c\u4f7f\u5f97\u6869\u4f53\u8868\u9762\u8f83\u4e3a\u5149\u6ed1\u3002\u800c\u5355\u5143\u91cd\u53e0\u65f6\u4f1a\u4ea7\u751f\u5de8\u5927\u7684\u76f8\u4e92\u4f5c\u7528\u529b\uff0c\u4e00\u65e6\u8fdb\u884c\u5e73\u8861\u8fed\u4ee3\u6a21\u578b\u53ef\u80fd\u4f1a\u201c\u7206\u70b8\u201d\u56e0\u6b64\uff0c\u6b64\u5904\u5c06\u6869Pile1\u58f0\u660e\u4e3a\u56e2\u7c07clump\u3002\u5728\u8fdb\u884c\u8be5\u64cd\u4f5c\u540e\uff0cMatDEM\u4f1a\u8bb0\u5f55\u6b64\u65f6\u5355\u5143\u95f4\u7684\u76f8\u4e92\u91cd\u53e0\u91cf\uff0c\u5e76\u8bb0\u5f55\u5728<code>d.mo.nClump</code>\u77e9\u9635\u4e2d\uff0c\u5728\u8fed\u4ee3\u8ba1\u7b97\u4e2d\uff0c\u8ba1\u7b97\u5355\u5143\u95f4\u76f8\u4e92\u4f5c\u7528\u529b\u65f6\u4f1a\u51cf\u53bb\u8fd9\u90e8\u5206\u91cd\u53e0\u91cf\uff0c\u5e76\u4fdd\u8bc1\u5355\u5143\u7684\u53d7\u529b\u5e73\u8861\u3002\u5173\u4e8eclump\u5177\u4f53\u7279\u6027\uff0c\u8bf7\u53c2\u89c1\u7b2c\u4e8c\u7ae0\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7531\u51fd\u6570<code>denseModel</code>\u751f\u6210\u7684\u6869\u7684\u5de6\u4e0b\u89d2\u4f4d\u4e8e\u539f\u70b9\uff0c\u6b64\u65f6\uff0c\u53ef\u901a\u8fc7\u51fd\u6570<code>d.moveGroup</code>\uff0c\u5c06\u6869\u79fb\u52a8\u81f3\u6307\u5b9a\u4f4d\u7f6e\u3002\u5728\u793a\u4f8b\u4ee3\u7801\u4e2d\uff0c\u6869\u5728X\u65b9\u5411\u4e0a\u7684\u79fb\u52a8\u91cf\u4e3a<code>(B.sampleW-pileW)/2</code>\uff0c\u5373\u6a21\u578b\u7684\u5bbd\u5ea6\u4e0e\u6869\u7684\u5bbd\u5ea6\u4e4b\u5dee\u7684\u4e00\u534a\uff0c\u901a\u8fc7\u8be5\u547d\u4ee4\u5c06\u6869\u79fb\u52a8\u5230\u6a21\u578b\u7684\u6b63\u4e2d\u95f4\uff1b\u56e0\u4e3a\u672c\u793a\u4f8b\u662f\u4e8c\u7ef4\u6a21\u578b\uff0c\u5728Y\u65b9\u5411\u4e0a\u7684\u4f4d\u79fb\u4e3a0\uff1b\u800c\u5728Z\u65b9\u5411\u79fb\u52a8\u4e3a<code>sampleTop-drivingDis</code>\uff0c\u5176\u4e2d<code>drivingDis</code>\u4e3a\u6869\u8981\u6253\u5165\u5730\u5c42\u4e2d\u7684\u6df1\u5ea6\u3002</p> <p>\u5c06\u6869\u79fb\u52a8\u5230\u571f\u5c42\u4e2d\u540e\uff0c\u6869\u4f53\u5355\u5143\u4e0e\u5730\u5c42\u5355\u5143\u53d1\u751f\u91cd\u53e0\uff0c\u6b64\u65f6\u9700\u8981\u901a\u8fc7\u51fd\u6570<code>d.minusGroup</code>\u79fb\u9664\u91cd\u53e0\u90e8\u5206\u7684\u5730\u5c42\u5355\u5143\u3002\u8fd9\u6761\u547d\u4ee4\u7684\u7b2c\u4e00\u548c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5206\u522b\u4e3asample\u548cPile1\uff0c\u5373\u7528sample\u51cf\u53bbPile1\uff0c\u800c\u7b2c\u4e09\u4e2a\u53c2\u6570\u5219\u5b9a\u4e49\u4e86Pile1\u5355\u5143\u7684\u534a\u5f84\u7cfb\u6570Rrate\u3002Rrate\u5b9a\u4e49\u4e86Pile1\u5355\u5143\u534a\u5f84\u6240\u8981\u4e58\u4ee5\u7684\u7cfb\u6570\u3002\u5f53\u5176\u4e3a0.4\u65f6\uff0cPile1\u7684\u5355\u5143\u534a\u5f84\u7f29\u5c0f\u4e3a\u539f\u672c\u768440%\uff0c\u5e76\u4e0esample\u6765\u5224\u65ad\u91cd\u53e0\uff0c\u5c06sample\u7ec4\u4e2d\u91cd\u53e0\u90e8\u5206\u5355\u5143\u53bb\u9664\u3002\u901a\u8fc7\u5b9a\u4e49Rrate\uff0c\u53ef\u4ee5\u8c03\u6574\u88ab\u5220\u9664\u5355\u5143\u7684\u91cf\uff0cRrate\u5fc5\u987b\u5927\u4e8e0\uff0c\u4e14\u4e0d\u80fd\u592a\u5c0f\uff08\u5982\u5c0f\u4e8e0.2\uff09\u3002</p> <p>\u7531\u4e8e\u8fd9\u4e2a\u793a\u4f8b\u7684\u5efa\u6a21\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u5148\u6316\u51fa\u6869\u5b54\uff0c\u7136\u540e\u518d\u5c06\u6869\u653e\u5165\u5b54\u4e2d\u3002\u6240\u4ee5\uff0c\u5f53\u79fb\u9664\u91cd\u53e0\u7684\u5355\u5143\u540e\uff0c\u6869\u4e0e\u571f\u4e4b\u95f4\u672a\u8fbe\u5230\u5145\u5206\u63a5\u89e6\u3002\u6b64\u65f6\uff0c\u6869\u548c\u571f\u4e4b\u95f4\u4ecd\u6709\u95f4\u9699\uff0c\u56e0\u800c\u8981\u91cd\u65b0\u5e73\u8861\u6a21\u578b\uff0c\u5176\u5927\u81f4\u601d\u8def\u4e3a\uff1a\u79fb\u9664\u6869\u5468\u56f4\u5730\u5c42\u5355\u5143\u4e4b\u95f4\u7684\u80f6\u7ed3\uff0c\u4f7f\u5b83\u4eec\u5728\u91cd\u529b\u4f5c\u7528\u4e0b\u586b\u5145\u95f4\u9699\uff1b\u6a21\u578b\u5145\u5206\u5e73\u8861\u540e\uff0c\u6839\u636e\u9700\u6c42\u518d\u91cd\u65b0\u80f6\u7ed3\u5730\u5c42\u3002\u5728\u586b\u5145\u8fc7\u7a0b\u4e2d\uff0c\u6869\u53ef\u80fd\u53d1\u751f\u503e\u659c\u3002\u56e0\u6b64\uff0c\u901a\u8fc7<code>d.addFixed</code>\u9501\u5b9a\u6869\u7684X\u5750\u6807\uff0c\u4f7f\u6869\u4fdd\u6301\u7ad6\u7acb\uff0c\u540c\u65f6\u6869\u4ecd\u53ef\u5728Z\u65b9\u5411\u4e0a\u8fd0\u52a8\u3002\u5e73\u8861\u8fed\u4ee3\u64cd\u4f5c\u5c06\u5728\u6dfb\u52a0\u5b8c\u7b2c\u4e8c\u6839\u6869\u540e\u8fdb\u884c\u3002</p>"},{"location":"book/BoxPile/#_8","title":"\u6dfb\u52a0\u7b2c\u4e8c\u6839\u6869","text":"<p>\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u5411\u6a21\u578b\u4e2d\u6dfb\u52a0\u7b2c\u4e8c\u6839\u6869\uff1a</p> <pre><code>pile2=mfs.denseModel(0.5,@mfs.makeBox,pileH,pileL,pileW,ballR);\npile2.Y(:)=0;\npile2.X=pile2.X+B.sampleW-pileH/2;pile2.Z=pile2.Z+B.sampleW/2;\npileId2=d.addElement('StrongRock',pile2,'wall');\nd.addGroup('Pile2',pileId2);\nd.setClump('Pile2');\nd.moveGroup('Pile2',1,0,2);\nd.rotateGroup('Pile2','XZ',30);\nd.minusGroup('sample','Pile2',0.5);\n%d.removeGroupForce(d.GROUP.Pile2,d.GROUP.rigB);\n</code></pre> <p>\u5efa\u7acb\u7b2c\u4e8c\u6839\u6869\u7684\u601d\u8def\u4e0e\u7b2c\u4e00\u6839\u6869\u7c7b\u4f3c\uff0c\u4f46\u5728\u4f7f\u7528\u51fd\u6570<code>d.moveGroup</code>\u5bf9\u6869\u8fdb\u884c\u5e73\u79fb\u4e4b\u540e\uff0c\u8c03\u7528\u4e86\u51fd\u6570<code>d.rotateGroup</code>\u5bf9\u5176\u8fdb\u884c\u65cb\u8f6c\uff0c\u4f7f\u5f97\u6869Pile2\u4e0e\u53f3\u8fb9\u754crigB\u76f8\u4ea4\u3002\u540c\u65f6\uff0c\u5728\u8c03\u7528<code>d.addElement</code>\u65f6\uff0c\u8f93\u5165\u4e86\u7b2c\u4e09\u4e2a\u53c2\u6570<code>'wall'</code>\uff0c\u58f0\u660e\u4e86\u8981\u6dfb\u52a0\u5355\u5143\u7684\u7c7b\u578b\u662f\u56fa\u5b9a\u7684\u5899\u5355\u5143\u3002</p> <p>\u82e5Pile\u6ca1\u6709\u88ab\u58f0\u660e\u4e3a <code>'wall'</code>\uff08\u5373\u5899\u5355\u5143\uff09\uff0c\u7531\u4e8e\u6869Pile2\u4e0e\u53f3\u8fb9\u754crigB\u76f8\u4ea4\uff0c\u540e\u7eed\u9700\u8981\u901a\u8fc7\u51fd\u6570<code>d.removeGroupForce</code>\u79fb\u9664\u4e8c\u8005\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u529b\u3002\u6b64\u5904\uff0c\u53ef\u901a\u8fc7' % '\u7b26\u53f7\u5c06\u5176\u6ce8\u91ca\u6389\u3002\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6869\u7684\u5782\u76f4\u5ea6\u5e94\u6ee1\u8db3\u65bd\u5de5\u8981\u6c42\uff0c\u5efa\u6a21\u65f6\u4e5f\u5c3d\u53ef\u80fd\u907f\u514d\u6a21\u578b\u4e0e\u8fb9\u754c\u76f8\u4ea4\uff0c\u5f53\u524d\u793a\u4f8b\u4ee3\u7801\u4ec5\u4e3a\u4e86\u6f14\u793a\u51fd\u6570<code>d.rotateGroup</code>\u3001<code>d.addElement</code>\u4e0e<code>d.removeGroupForce</code>\u7684\u7528\u6cd5\u3002</p> <p>\u5728\u5c06\u6869\u7f6e\u5165\u5730\u5c42\u540e\uff0c\u9700\u91cd\u65b0\u5e73\u8861\u6a21\u578b\uff0c\u5176\u5927\u81f4\u601d\u8def\u4e0a\u5c0f\u8282\u5df2\u4ecb\u7ecd\uff1a</p> <pre><code>d.mo.bFilter(:)=false;\nd.mo.zeroBalance();\nd.resetStatus();\nd.mo.setGPU('auto');\nd.balance('Standard',8);\nd.connectGroup('sample');\nd.connectGroup('sample','Pile1');\nd.mo.zeroBalance();\nd.balance('Standard',2);\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u547d\u4ee4<code>d.connectGroup('sample','Pile1')</code>\u8fde\u63a5\u4e86\u6869\u4e0e\u5730\u5c42\u8fd9\u4e24\u4e2a\u7ec4\uff0c\u76f8\u5f53\u4e8e\u5728\u94bb\u5b54\u704c\u6ce8\u6869\u65bd\u5de5\u8fc7\u7a0b\u4e2d\u6df7\u51dd\u571f\u51dd\u56fa\u540e\u4e0e\u5730\u57fa\u571f\u80f6\u7ed3\u5728\u4e00\u8d77\u3002\u81f3\u6b64\uff0c\u5df2\u5b8c\u6210\u6869\u571f\u4f5c\u7528\u7684\u5efa\u6a21\u8fc7\u7a0b\uff0c\u4fdd\u5b58\u6570\u636e\u5e76\u8fdb\u884c\u540e\u5904\u7406\u5373\u53ef\u3002\u7b2c\u4e8c\u6b65\u5f97\u5230\u7684\u6a21\u578b\u5982\u56fe6.1-2\u6240\u793a\uff0c\u4e00\u6839\u6869\u7ad6\u76f4\u57cb\u5165\u5730\u5c42\u4e2d\uff0c\u800c\u53e6\u4e00\u6839\u6869\u5219\u4e0e\u6c34\u5e73\u9762\u544830\u00b0\u5939\u89d2\u659c\u5367\u5e76\u4e0e\u53f3\u8fb9\u754c\u76f8\u4ea4\uff0c\u4e14\u5728\u63a5\u4e0b\u6765\u7684\u6a21\u62df\u4e2d\u59cb\u7ec8\u56fa\u5b9a\u4e0d\u52a8\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u7531\u4e8ed.<code>minusGroup</code>\u4e2dRrate\u91c7\u75280.4\uff0c\u5220\u9664\u7684\u571f\u5c42\u5355\u5143\u8f83\u5c11\uff0c\u5728\u6807\u51c6\u5e73\u8861\u65f6\uff0c\u90e8\u5206\u8868\u9762\u571f\u5c42\u5355\u5143\u56e0\u4e0e\u6869\u91cd\u53e0\u91cf\u8f83\u5927\u800c\u53d1\u751f\u98de\u8dc3\uff08\u56fe6.1-2\uff09\u3002\u6b64\u65f6\uff0c\u901a\u8fc7<code>d.show('mV')</code>\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u6a21\u578b\u7684\u901f\u5ea6\u573a\uff0c\u4ee5\u53ca\u4f7f\u7528d.show()\u547d\u4ee4\u67e5\u770b\u79bb\u6563\u5143\u7cfb\u7edf\u7684\u5404\u7c7b\u529b\u548c\u80fd\u91cf\u7684\u53d8\u5316\u66f2\u7ebf\u3002\u901a\u8fc7\u5206\u6790\u8fd9\u4e9b\u573a\u56fe\u548c\u66f2\u7ebf\uff0c\u53d1\u73b0\u7cfb\u7edf\u80fd\u91cf\u8fd8\u672a\u5e73\u8861\uff0c\u4ecd\u9700\u7ee7\u7eed\u8fdb\u884c\u5e73\u8861\u8fed\u4ee3\u8ba1\u7b97\uff0c\u4ee5\u51cf\u5c11\u7cfb\u7edf\u4e2d\u7684\u52a8\u80fd\u3002\u5177\u4f53\u67e5\u770b\u548c\u5206\u6790\u65b9\u6cd5\u8bf7\u53c2\u89c13.5\u8282\uff0c\u4e5f\u53ef\u53c2\u80037.2\u8282\u3002</p> <p></p>"},{"location":"book/BoxPile/#_9","title":"\u62d4\u6869\u8fc7\u7a0b\u7684\u6570\u503c\u6a21\u62df","text":""},{"location":"book/BoxPile/#_10","title":"\u521d\u59cb\u5316\u548c\u8377\u8f7d\u8bbe\u7f6e","text":"<p>\u5728BoxPile3\u4e2d\uff0c\u9996\u5148\u52a0\u8f7d\u6570\u636e\u5e76\u521d\u59cb\u5316\u6a21\u578b\uff1a</p> <pre><code>load('TempModel/BoxPile2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();\nd.status=modelStatus(d);\n</code></pre> <p>\u968f\u540e\uff0c\u5728\u6b63\u5f0f\u62d4\u6869\u4e4b\u524d\u8fdb\u884c\u4e00\u4e9b\u5fc5\u8981\u7684\u8bbe\u7f6e\uff1a</p> <pre><code>d.mo.bFilter(:)=0;\nd.mo.isHeat=1;\nd.mo.setGPU('auto');\nd.setStandarddT();\npile1Id=d.GROUP.Pile1;\npile1Z=d.mo.aZ(pile1Id);\ntopPileId=pile1Id(pile1Z&gt;max(pile1Z)-B.ballR*0.1);\nd.addGroup('topPile',topPileId);\nd.addFixId('Z',d.GROUP.topPile);\n</code></pre> <p>\u5728\u771f\u5b9e\u4e16\u754c\u4e2d\u538b\u6869\u6216\u62d4\u6869\u65f6\uff0c\u529b\u4f5c\u7528\u5728\u6869\u9876\u90e8\u3002\u56e0\u6b64\uff0c\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u9996\u5148\u7b5b\u9009\u51fa\u6869Pile1\u9876\u90e8\u90e8\u5206\u5355\u5143\u7684\u7f16\u53f7\uff0c\u5e76\u5c06\u5176\u58f0\u660e\u4e3a\u7ec4topPile\u3002\u8fdb\u4e00\u6b65\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5bf9topPile\u65bd\u52a0\u529b\u7684\u4f5c\u7528\uff0c\u4ece\u800c\u6a21\u62df\u538b\u6869\u6216\u62d4\u6869\u8fc7\u7a0b\u3002\u540c\u65f6\uff0c\u5e94\u529b\u6ce2\u5728\u6869\u4f53\u4e2d\u4f20\u64ad\u7684\u8fc7\u7a0b\u4e5f\u80fd\u5f97\u5230\u6709\u6548\u6a21\u62df\u3002</p> <p>\u8be5\u6b65\u4e2d\u8fd8\u9700\u901a\u8fc7<code>d.addFixId</code>\u547d\u4ee4\u9501\u5b9atopPile\u7ec4\u7684Z\u5750\u6807\u3002\u8fd9\u662f\u7531\u4e8e\u5728\u538b\u6869\u6216\u62d4\u6869\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6b21\u52a0\u8f7d\u4e4b\u540e\uff0c\u6869\u4f1a\u53d7\u5230\u5730\u5c42\u9897\u7c92\u5355\u5143\u7684\u53cd\u529b\u6216\u91cd\u529b\u4f5c\u7528\uff0c\u5982\u679c\u4e0d\u9501\u5b9a\u6869\u9876\u5355\u5143\u7684\u81ea\u7531\u5ea6\uff0c\u90a3\u4ea7\u751f\u7684\u53cd\u529b\u6216\u91cd\u529b\u4f1a\u4f7f\u6869\u4f53\u4ea7\u751f\u56de\u5f39\u6216\u56de\u843d\uff0c\u5f71\u54cd\u6a21\u62df\u7ed3\u679c\u3002\u5982\u9700\u6a21\u62df\u6869\u4f53\u56de\u5f39\u7684\u5de5\u6cd5\uff0c\u5c06\u547d\u4ee4<code>d.addFixId('Z',d.GROUP.topPile)</code>\u5220\u9664\u5373\u53ef\u3002</p>"},{"location":"book/BoxPile/#_11","title":"\u8fed\u4ee3\u8ba1\u7b97","text":"<pre><code>totalCircle=20;\nstepNum=100;\ndis=1;\ndDis=dis/totalCircle/stepNum;\nd.tic(totalCircle*stepNum);\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);\n</code></pre> <p>\u5728\u8fed\u4ee3\u8ba1\u7b97\u4e2d\uff0c\u5c06\u6869\u4e0a\u62d41\u7c73\u7684\u8fc7\u7a0b\u5206\u621020\u6b65\uff08totalCircle\uff09\uff0c\u518d\u5c06\u6bcf\u4e00\u6b65\u5206\u6210100\u5c0f\u6b65\uff08stepNum\uff09\u3002\u5982\u7b2c\u56db\u7ae0\u4e2d\u6240\u8ff0\uff0c\u5728\u5e73\u8861\u8fed\u4ee3\u603b\u6b21\u6570\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u589e\u5927stepNum\u53ef\u4ee5\u63d0\u9ad8\u6a21\u62df\u7ed3\u679c\u7684\u7cbe\u5ea6\u3002\u5b9e\u9645\u6a21\u62df\u4e2d\uff0c\u9700\u8981\u589e\u5927stepNum\uff08\u59821000\u4ee5\u4e0a\uff09\uff0c\u5c06\u62d4\u6869\u8fc7\u7a0b\u5fae\u5206\u6210\u66f4\u5c0f\u7684\u4f4d\u79fb\u6b65dDis\u3002\u5728\u6bcf\u6b21\u5e73\u8861\u8fed\u4ee3\u4e2d\uff0c\u6869\u4f1a\u88ab\u4e0a\u62d4dDis\uff0c\u5982\u679cdDis\u592a\u5927\uff0c\u5219\u6a21\u62df\u7ed3\u679c\u7cbe\u5ea6\u5c06\u96be\u4ee5\u6ee1\u8db3\u8981\u6c42\u3002</p> <pre><code>for i=1:totalCircle\nfor j=1:stepNum\n    d.toc();\n    d.moveGroup('topPile',0,0,dDis);\n    d.balance('Standard',0.01);\nend\nd.clearData(1);\nsave([fName num2str(i) '.mat']);\nd.calculateData();\nend\n</code></pre> <p>\u5728\u8fed\u4ee3\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u65bd\u52a0\u8377\u8f7d\u7684\u5f62\u5f0f\u5305\u62ec\u5e94\u529b\u8377\u8f7d\u3001\u4f4d\u79fb\u8377\u8f7d\u4ee5\u53ca\u4e8c\u8005\u7684\u6df7\u5408\u3002\u4f8b\u5982\uff0c\u53ef\u901a\u8fc7\u538b\u529b\u677f\u6765\u5b9e\u73b0\u5e94\u529b\u8377\u8f7d\u7684\u65bd\u52a0\uff0c\u5373\u5bf9\u538b\u529b\u677f\u7684\u5355\u5143\u65bd\u52a0\u7279\u5b9a\u7684\u4f53\u529b\uff1b\u800c\u4f4d\u79fb\u8377\u8f7d\u5219\u53ef\u901a\u8fc7\u79fb\u52a8\u7279\u5b9a\u7684\u7ec4\u6765\u5b9e\u73b0\u3002\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7\u51fd\u6570<code>d.moveGroup</code>\u79fb\u52a8\u6869\u9876\uff08topPile\uff09\u6765\u6a21\u62df\u62d4\u6869\u7684\u8fc7\u7a0b\u3002\u6bcf\u4e0a\u62d4dDis\u8ddd\u79bb\uff0c\u5373\u8fdb\u884c0.01\u6b21\u7684\u6807\u51c6\u5e73\u8861\uff08<code>d.balance('Standard',0.01)</code>\uff09\u3002\u7531\u4e8etopPile\u7684Z\u5750\u6807\u662f\u9501\u5b9a\u7684\uff0c\u6869\u9876\u4ee5\u4e0b\u7684\u5355\u5143\u5728\u62c9\u529b\u4f5c\u7528\u4e0b\u5411\u4e0a\u79fb\u52a8\uff0c\u5e76\u4e0e\u6869\u5468\u571f\u4ea7\u751f\u4f5c\u7528\uff0c\u4ece\u800c\u5b9e\u73b0\u6869\u571f\u4f5c\u7528\u7684\u6a21\u62df\u3002</p> <p>\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\uff0c\u901a\u8fc7save\u547d\u4ee4\u4e0d\u65ad\u4fdd\u5b58\u6bcf\u4e00\u6b65\u7684\u6570\u636e\u6587\u4ef6\u3002\u5728\u5b8c\u6210\u6570\u503c\u6a21\u62df\u540e\uff0c\u901a\u8fc7\u540e\u5904\u7406\u6216makeGIF\u4ee3\u7801\uff0c\u53ef\u751f\u6210\u62d4\u6869\u8fc7\u7a0b\u7684GIF\u52a8\u753b\uff0c\u7b49\u3002\u7b2c\u4e09\u6b65\u5f97\u5230\u7684\u7ed3\u679c\u5982\u56fe6.1-3\u901f\u5ea6\u573a\u56fe\u6240\u793a\uff1aPile1\u88ab\u4e0a\u62d4\u4e86\u4e00\u5b9a\u8ddd\u79bb\uff0c\u6869\u7aef\u4e0e\u5730\u5c42\u4e4b\u95f4\u51fa\u73b0\u4e86\u660e\u663e\u7684\u7a7a\u9699\uff0c\u800cPile2\u7531\u4e8e\u5728\u7b2c\u4e8c\u6b65\u4e2d\u88ab\u58f0\u660e\u4e3a\u56fa\u5b9a\u5355\u5143\uff0c\u5728\u6a21\u62df\u4e2d\u59cb\u7ec8\u4fdd\u6301\u4e0d\u52a8\u3002\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u7531\u4e8e\u5206\u6b65\u5bf9\u6869\u9876\u65bd\u52a0\u4f4d\u79fb\uff0c\u5f53\u62d4\u6869\u901f\u5ea6\u975e\u5e38\u5feb\u7684\u65f6\u5019\uff0c\u6869\u4e2d\u51fa\u73b0\u660e\u663e\u7684\u5e94\u529b\u6ce2\u3002</p> <p> </p> <p>BoxPile\u662fMatDEM\u4e2d\u51e0\u4e2a\u8f83\u4e3a\u7b80\u5355\u7684\u793a\u4f8b\u4e4b\u4e00\uff0c\u4e3b\u8981\u6f14\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u81ea\u5b9a\u4e49\u51fd\u6570\u5efa\u7acb\u7b80 \u5355\u5f62\u6001\u7684\u7ed3\u6784\u4f53\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u6a21\u578b\u4e2d\u3002\u540c\u65f6\uff0c\u793a\u4f8b\u4e2d\u5305\u62ec\u4e86\u5806\u79ef\u5efa\u6a21\u3001\u8fc7\u6ee4\u5668\u4f7f\u7528\u3001\u5bfc\u5165\u548c\u8bbe\u7f6e\u6750\u6599\u3001\u9501\u5b9a\u5355\u5143\u81ea\u7531\u5ea6\u7b49\u5df2\u5728\u7406\u8bba\u7bc7\u4e2d\u9610\u8ff0\u7684\u77e5\u8bc6\u70b9\u3002\u5728\u638c\u63e1\u8fd9\u4e9b\u64cd\u4f5c\u7684\u57fa\u7840\u4e0a\uff0c\u53ef\u6839\u636e\u5b9e\u9645\u9700\u8981\uff0c\u5efa\u7acb\u66f4\u4e3a\u590d\u6742\u7684\u6a21\u578b\u3002</p>"},{"location":"download/","title":"Downloads","text":"<ul> <li>download-test</li> </ul>"},{"location":"examples/","title":"Examples","text":""},{"location":"examples/#gallery","title":"Gallery","text":""},{"location":"examples/#examples2018","title":"examples2018","text":"<p>3AxialNew</p> <p>3DJointStress</p> <p>3DSlope</p> <p>BoxCrash</p> <p>BoxModel</p> <p>BoxShear</p> <p>BoxSlope</p> <p>BoxStruct</p> <p>CuTestNew</p> <p>Earthquake</p> <p>Exploision</p> <p>LandSubsidence</p> <p>makeGif</p> <p>MatTraining</p> <p>MixMat</p> <p>Pile</p> <p>SlopeNet</p> <p>SoilCrackNew</p> <p>TBMCutter</p> <p>Tunnel</p> <p>TunnelHeat</p> <p>TunnelNew</p> <p>TwoBalls</p> <p>UniaxialTest</p>"},{"location":"examples/#examples2019","title":"examples2019","text":"<p>3DSlope</p> <p>GeoThermalBox</p> <p>MonteCarlo</p> <p>PoreFlood</p> <p>PoreHydraulic</p> <p>PorePermeability</p> <p>Roller</p>"},{"location":"examples/#examples2020","title":"examples2020","text":"<p>BoxCrash</p> <p>BoxWave</p> <p>EarthMoon</p> <p>HydraulicBlock</p> <p>Pore3dTest</p> <p>PoreTunnel</p> <p>RollerNew</p> <p>RollerNewPack</p> <p>ScrewConveyor</p>"},{"location":"examples/#examples2021","title":"examples2021","text":"<p>BallInFrame</p> <p>BoxCompaction</p> <p>BoxPorosity</p> <p>BoxTunnelNew</p> <p>HighSizeRatio</p> <p>LavaBlock</p> <p>ParticleMigration</p> <p>Pore3dCouple</p> <p>Powder</p> <p>SandPenetration</p> <p>TwoPore</p> <p>xJoint</p>"},{"location":"examples/#examplesmodel","title":"examplesModel","text":"<p>BoxFiberCouple</p> <p>BoxLayer</p> <p>BoxWord</p> <p>Cable</p> <p>Columns</p> <p>DropOnNet</p> <p>Functions</p> <p>LineModel</p> <p>MicroParticle</p> <p>models</p>"},{"location":"examples/#app","title":"App","text":"<ul> <li>user_Apps.m \u6f14\u793a\u8fd0\u884cApp</li> <li>TwoBalls_exported.m \u4e24\u4e2a\u5c0f\u7403\u78b0\u649e\u7684\u7a97\u53e3App, \u5bf9\u5e94matlab\u6e90\u6587\u4ef6TwoBalls.mlapp</li> <li>UI_Function2Object_exported.m \u6f14\u793a\u901a\u8fc7\u51fd\u6570\u6765\u5efa\u6a21\u7684App</li> <li>UI_Roller_exported.m \u6eda\u7b52\u6405\u62cc\u7a97\u53e3App</li> <li>UI_MaterialTraining_exported.m \u6750\u6599\u81ea\u52a8\u8bad\u7ec3</li> <li>UI_Demo_exported.m \u7ba1\u5b50\u793a\u4f8b</li> <li>UI_BoxModel.m \u7b80\u5355\u6ed1\u5761\u793a\u4f8b</li> <li>UI_Aerolite.m \u9668\u77f3\u649e\u51fb\u5730\u9762</li> </ul>"},{"location":"examples/examples2018/3AxialNew/","title":"3AxialNew","text":"Step 1Step 2Step 3 user_3AxialNew1.m<pre><code>%step1: packing of model\nclear;\n%-------------initial parameters and build model--------------\nA=obj_3AxisTester();%build tester\nA.randomSeed=1;\nA.waterPressure=0.1e6;%static water pressure\nA.isClump=0;%particle is not clump\nA.ballR=0.005;%average element radius\nA.name='3AxialTest';\nA.type='3Axial';%type='uniaxialC';%uniaxial compression\nA.distriRate=0.2;%distribution coefficient\nA.loadingType='stress';%displacement or stress\nA.stressStep=-[50;100;200;400;800;1600;3200]*1e3;\nA.maxStrain=0.15;\nA.setType();\nA.buildIntialModel();\nA.setUIoutput();%set output of form\nd=A.d;\nd.mo.setGPU('auto');\n\nsampleId=d.GROUP.sample;\n%d.mo.aR(sampleId)=d.mo.aR(sampleId)*0.99;d.mo.setNearbyBall();%adjust element radius here\n\nd.mo.setGPU('auto');%set auto GPU\nA.gravitySediment();%sedimentation of elements\ntopPlatenId=d.GROUP.topPlaten;\nd.mo.mGZ(topPlatenId)=d.mo.mGZ(topPlatenId)*10;\nmfs.reduceGravity(d,5);\nd.balance(50,20+d.SET.packNum);\n\nd.status.dispEnergy();%display energy information\nd.showFilter('SlideY',0.3,1);\nd.show('StressZZ');\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('AxialStep1Finish');\nsave(['TempModel/' A.name '1.mat'],'A','d');\nsave(['TempModel/' A.name '1R' num2str(A.ballR) '-distri' num2str(A.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_3AxialNew2.m<pre><code>%step2: assign formal mechanical parameters\n%-------------assign new properties--------------\nclear;\nload('TempModel/3AxialTest1.mat');\nA.setUIoutput();%set the output message\nbalanceNum=100;%define the balance number in the following simulation\nd=A.d;\nd.mo.setGPU('off');%please always close the GPU when modifing the model\nA.importModel(d);\nd=A.getFinalModel();%get the model from the object\n%-----------use low gravity to balance the model---------------\n%Hertz Model\n%d.mo.FnCommand='nFN1=obj.nKNe.*nIJXn;nR=obj.aR(1:m_Num)*nRow;nJR=obj.aR(obj.nBall);Req=nR.*nJR./(nR+nJR);nE=obj.aKN(1:m_Num)*nRow./(pi*nR);nJE=obj.aKN(obj.nBall)./(pi*nJR);Eeq=nE.*nJE./(nE+nJE);nFN2=-4/3*Eeq.*Req.^(1/2).*abs(nIJXn).^(3/2);f=nIJXn&lt;0;nFN0=nFN1.*(~f)+nFN2.*f;';\nd.mo.mGZ(:)=0;\nd.status=modelStatus(d);\naMUp0=d.mo.aMUp;%record the friction coefficient\nd.mo.aMUp(:)=0;%no friction between balls\nd.mo.dT=d.mo.dT*4;%use greater step time\nd.mo.setGPU('auto');%set auto GPU\nd.balance(balanceNum,20+d.SET.packNum);%d.SET.packNum is the particle number along vertical direction\nA.setTubeFixId();%set the fixed Id of tube\nd.balance(balanceNum,20+d.SET.packNum);\nd.mo.aMUp=aMUp0;%restore friction coefficient\nd.mo.dT=d.mo.dT/4;%restore the step time\n\nd.showFilter('SlideY',0.3,1);\nd.show('StressZZ');\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('AxialStep2Finish');%record the time\nsave(['TempModel/' A.name '2.mat'],'A','d');\nsave(['TempModel/' A.name '2R' num2str(A.ballR) '-distri' num2str(A.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_3AxialNew3.m<pre><code>clear;\nload('TempModel/3AxialTest2.mat');\nA.setUIoutput();%set the output message\nd=A.d;\nd.calculateData();\nd.mo.setGPU('off');%please always close the GPU when modifing the model\n%----------set the parameters of numerical simulation\nbalanceRate=1;\nbalanceNum=20;%balance number in each step\nloopNum=0;\ntotalCircle=5;%default value is 50\nstepNum=100;\nisSave=1;%save the .mat data\n\nd.setStandarddT();%set the standard step time\nd.mo.dT=d.mo.dT/balanceRate;\nA.moveTop();%move top boundary to the top of the sample\n%-----------set the loop-------------\nplatenArea=pi*A.sampleR^2;%the area of the platen\nforceStep=A.stressStep*platenArea;%get the force step on the platen\nbotPlatenNum=length(d.GROUP.botPlaten);%element number of the platen\nsampleH=mean(d.mo.aZ(d.GROUP.topPlaten))-mean(d.mo.aZ(d.GROUP.botPlaten));%original height of model\nd.status=modelStatus(d);%initialize the status recorder\nif strcmp(A.loadingType,'stress')\n    totalCircle=length(forceStep);\nend\n\nbotPlatenZZ=zeros(totalCircle+1,1);%initialize the position of bottom platen\ntopPlatenZZ=zeros(totalCircle+1,1);\nbotStressZZ=zeros(totalCircle+1,1);%initialize the position of bottom boundary\ntopStressZZ=zeros(totalCircle+1,1);\nbotPlatenZZ(1)=mean(d.mo.aZ(d.GROUP.botPlaten));\ntopPlatenZZ(1)=mean(d.mo.aZ(d.GROUP.topPlaten));\nd.mo.mGZ(:)=0;\n%-----------end set the loop-------------\n%-----------the loop-------------\nfName=['data/step/' A.name  num2str(A.ballR) '-' num2str(A.distriRate) 'loopNum'];\nd.tic(totalCircle*stepNum);%record start time\nsave([fName '0.mat']);%return;\nfor circle=1:totalCircle\n    if strcmp(A.loadingType,'stress')%when loading type is stress\n        d.mo.mGZ(d.GROUP.topPlaten)=forceStep(circle)/botPlatenNum;%increase the stress\n    end\n    for step=1:stepNum\n        for i=1:balanceNum*balanceRate\n            d.mo.balance();\n        end\n        %d.status.SET.isWHT=1;%record the WHT in recordStatus\n        d.recordStatus();\n        d.toc();%show the note of time\n    end\n    botPlatenZZ(circle+1)=mean(gather(d.mo.aZ(d.GROUP.botPlaten)));\n    topPlatenZZ(circle+1)=mean(gather(d.mo.aZ(d.GROUP.topPlaten)));\n    botStressZZ(circle+1)=gather(d.status.bottomBFs(end,3))/platenArea;\n    topStressZZ(circle+1)=gather(d.status.topBFs(end,3))/platenArea;\n    if isSave==1\n        d.clearData(1);\n        save([fName num2str(circle) '.mat']);\n        d.calculateData();\n    end\nend\nA.data.topPlatenZZ=topPlatenZZ;%record the data\nA.data.topStressZZ=topStressZZ;\nA.data.botPlatenZZ=botPlatenZZ;\nA.data.botStressZZ=botStressZZ;\nA.data.sampleH=sampleH;\n\nif  strcmp(A.loadingType,'stress')&amp;&amp;strcmp(A.type,'3Axial')\n    loopNum=10;\nend\nfor circle=1:loopNum%additional balance loops\n    d.balance(100,5);%balance the model 500 times, record 5 times\n    save(['data\\step\\' A.type '-R' num2str(A.ballR) '-' num2str(A.distriRate) 'circleLoop' num2str(circle) '.mat'],'A','d');\nend\n%-----------end the loop-------------\n\n%------------return and save result--------------\nd.setData();%set data for show()\ndata=A.data;\n%calculate the strain and stress of sample\ndPlatenZZ=data.topPlatenZZ-data.topPlatenZZ(1);\nA.data.strain=-dPlatenZZ/data.sampleH;\nA.data.stress=-data.botStressZZ;\nfigure;\nplot(A.data.strain,A.data.stress,'-o');\nxlabel('StrainZZ');\nylabel('StressZZ');\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('AxialStep3Finish');\nsave(['TempModel/' A.name '3.mat'],'A','d');\nsave(['TempModel/' A.name '3R' num2str(A.ballR) '-distri' num2str(A.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/3DJointStress/","title":"3DJointStress","text":"Step 1Step 2Step 3 user_Box3DJointStress1.m<pre><code>%make a box model, which will be put on a slope\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='3DJointStress';\nB.GPUstatus='auto';\nB.ballR=0.005;\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=0.1;\nB.sampleL=0.1;\nB.sampleH=0.15;\nB.BexpandRate=B.sampleW*0.1/B.ballR;\nB.PexpandRate=B.sampleW*0.1/B.ballR;\nB.setType('TriaxialCompression');\nB.buildInitialModel();%B.show();\nB.setUIoutput();\n\nd=B.d;\n%--------------end initial model------------\nB.gravitySediment();\n%B.compactSample(2);%input is compaction time\n%mfs.reduceGravity(d,10);%reduce the gravity of element\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n%d.showFilter('Group',{'sample'});\nd.show('mGZ');\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_Box3DJointStress2.m<pre><code>%set the material of the model\nclear\nload('TempModel/3DJointStress1.mat');\n%------------initialize model-------------------\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n%------------end initialize model-------------------\n\n%-------------set new material----------------\nmatTxt=load('Mats\\StrongRock.txt');\nMats{1,1}=material('StrongRock',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\nd.groupMat2Model({'sample'},1);\n%-------------end set new material----------------\n\n%-------------------apply stress, and balance model------------------\nB.SET.stressXX=-6e6;\nB.SET.stressYY=-6e6;\nB.SET.stressZZ=-10e6;\nB.setPlatenFixId();\nd.resetStatus();\nB.setPlatenStress(B.SET.stressXX,B.SET.stressYY,B.SET.stressZZ,B.ballR*5);\n\nd.balanceBondedModel0(4);\nd.mo.dT=d.mo.dT*4;%increase the dT to increase the speed of balance\naMUp=d.mo.aMUp;d.mo.aMUp(:)=0;%remove friction\nd.balance('Standard',5);\nd.mo.aMUp=aMUp;%restore friction\nd.mo.dT=d.mo.dT/4;\n%-------------------end apply stress, and balance model------------------\n\n%--------------------save data-----------------------\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n%--------------------end save data-----------------------\n\nd.calculateData();\nd.show('ZDisplacement');\n</code></pre> user_Box3DJointStress3.m<pre><code>%-------------------user_mxSlope3.m;\nclear;\nload('TempModel/3DJointStress2.mat');\nB.setUIoutput();\n%------------initialize model-------------------\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.mo.bFilter(:)=true;\nd.deleteConnection('boundary');\nd.mo.zeroBalance();\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();\nd.mo.isHeat=1;%calculate heat in the model\nd.setStandarddT();\nd.mo.isCrack=1;\nd.moveBoundary('right',B.sampleW*0.2,0,0);\nd.moveBoundary('back',0,B.sampleL*0.2,0);\nd.mo.isCrack=1;%will record crack data\n\n%------------end initialize model-------------------\n%--------------------apply initial stress-----------------------\ntype='break';%change type to 'break' to create crack\nif strcmp(type,'glue')\n    d.mo.bFilter(:)=false;\nend\n\n%------------crack-------------\nTriX=[0.01,0.08,0.02];TriY=[0.05,0.1,0.05];TriZ=[0,0.05,0.1];\nbondFilter=mfs.setBondByTriangle(d,TriX,TriY,TriZ,type);%make triangle crack, run d.mo.zeroBalance() after the function\nd.mo.zeroBalance();\nd.showFilter('Group',{'sample'});\n%------------end crack-------------\n\nbondFilter=bondFilter&amp;(d.mo.cFilter|d.mo.bFilter);\nconnectFilter=sum(bondFilter,2)&gt;0;\nconnectId=find(connectFilter);\nd.addGroup('JointLayer',connectId);%add a new group\nfigure;\nd.showFilter('Group','JointLayer','aR');\n\n%------------weak or strong joint-------------\nTriX=[0.09,0.09,0.1,0.01];TriY=[0,0.1,0,0.1];TriZ=[0,0,0.1,0.1];\nbondFilter=mfs.setBondByPolygon(d,TriX,TriY,TriZ,'glue');%make triangle crack\nd.mo.nBondRate(bondFilter)=2;%make strong joint\n%------------end weak or strong joint------------\n\nd.show('Crack','Stereo');\n\n%-------------using Tool_Cut Triangle-------------\nTriX2=[TriX(1:3);TriX([1,3,4])]-0.05;\nTriY2=[TriY(1:3);TriY([1,3,4])];\nTriZ2=[TriZ(1:3);TriZ([1,3,4])];\nC=Tool_Cut(d);\nC.setTriangle(TriX2,TriY2,TriZ2);\nbondFilter=C.setBondByTriangle(type);\nd.mo.nBondRate(bondFilter)=0.5;%make weak joint, BF and FS0 will reduce\nd.show('BondRate');\nC.showTriangle();\n%-------------end using Tool_Cut Triangle-------------\n\n%added in MatDEM 2.01\n%------------nBondRate for breaking force (BF), friction coefficient (MUp), initial shear resistance (FS0)\nd.mo.isBondRate=1;\nnBondRateMUp=ones(size(d.mo.nBall));\nnBondRateMUp(bondFilter)=0;\nd.mo.SET.nBondRate.MUp=nBondRateMUp;%MUp could be replaced by 'BF', 'FS0'\nd.show('BondRateMUp');\n%------------end nBondRate for breaking force (BF), friction coefficient (MUp), initial shear resistance (FS0)\n\n%---------------make triangle by scattered points----------------\n%we modify Surf SurfTri or TriangleX,Y,Z to build new surface\nfs.randSeed(2);\nd.mo.bFilter(:)=false;\nd.mo.zeroBalance();\nrandN=10;\nPX=rand(randN,1)*0.1;PY=rand(randN,1)*0.1;PZ=0.05+rand(randN,1)*0.04;\nC.addSurf(PX,PY,PZ);\nC.getSurfTri(1,1);\nC.getTriangle(1);\nbondFilter=C.setBondByTriangle(type);\nd.mo.bFilter=bondFilter;\nd.showFilter('Group',{'sample'});\nd.show('--');\nC.showTriangle();\n%---------------end make triangle by scattered points----------------\n\n%--------------------start calculation-----------------------\ntotalCircle=5;\nd.tic(totalCircle);%record the initial time of loop\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\ngpuStatus=d.mo.setGPU('auto');\nfor i=1:totalCircle\n    B.setPlatenStress(B.SET.stressXX,B.SET.stressYY,B.SET.stressZZ*(1+i/totalCircle),B.ballR*5);\n    d.balance('Standard',1);%standard balance\n    d.clearData(1);\n    d.mo.setGPU('off');\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.mo.setGPU(gpuStatus);\n    d.toc();%show the note of time;\nend\nd.recordCalHour('Step3Finish');\nd.mo.setGPU('off');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.showFilter('Group',{'sample'},'StressZZ');\n</code></pre>"},{"location":"examples/examples2018/3DSlope/","title":"3DSlope","text":"Step 1Step 2Step 3Step 4Step 5 XYZ2Surf.m<pre><code>%converting scattered XYZ data to digital elevation model, which can be\n%used to define a surface and to cut discrete element model\nclear;\nd1=load('slope/XYZData.txt');%scattered XYZ data\n\nX1=d1(:,1);Y1=d1(:,2);Z1=d1(:,3);\n[X1,Y1]=mfs.rotateIJ(X1,Y1,90);%rotate the surface data\nx1=min(X1);x2=max(X1);%find the span of the data\ny1=min(Y1);y2=max(Y1);\n\n%make function for scattered data, see Matlab scatteredInterpolant\nF1=scatteredInterpolant(X1,Y1,Z1,'natural','nearest');\ngSide=20;%side of grid\n[gX,gY]=meshgrid(x1:gSide:x2,y1:gSide:y2);%X, Y mesh coordinates\ngZ=F1(gX,gY);%calculate Z by using function of scattered data\n\nfigure\nsurface(gX,gY,gZ,gZ);\nfs.general3Dset();\nview(120,30);\n</code></pre> user_Box3DSlope0.m<pre><code>%-------------This file is used to create surface of model layers\nclear;\nr=10;%radius of element, in this example, it is between 5-20 m\nsurfPackNum=4;%number of surface element along depth direction\nsurfPackNum2=1;%additional surface element\n\nbotPackNum=1.5;topPackNum=1.5;%\nload('slope/slopeSurface.mat');%you may use user_L3lpsXYZ2Surf.m to generate similar data\n%Digital Elevation Model of model is saved in S, see Matlab commands\n%\"scatteredInterpolant\" \"meshgrid\" \"surf\"\ngSide=S.Y(2)-S.Y(1);\n%--------------cut slope data;\ncutX1=floor(250/gSide);cutX2=floor(150/gSide);%cut the digital elevation  data\ncutY1=floor(400/gSide);cutY2=floor(300/gSide);\nS.X=S.X(1+cutY1:end-cutY2,1+cutX1:end-cutX2);\nS.Y=S.Y(1+cutY1:end-cutY2,1+cutX1:end-cutX2);\nS.Z1=S.Z1(1+cutY1:end-cutY2,1+cutX1:end-cutX2);%Z1 is original height\nS.Z2=S.Z2(1+cutY1:end-cutY2,1+cutX1:end-cutX2);%Z2 is the height after landslide\nS.X=S.X-min(S.X(:));\nS.Y=S.Y-min(S.Y(:));\nS.dZ=S.Z2-S.Z1;\n%--------------end cut slope data;\n\n[imH,imW]=size(S.X);\nS.Z=S.Z1;\nS0min.X=S.X;S0min.Y=S.Y;\nS0min.Z=min(S.Z1,S.Z2);\nS0.X=S.X;S0.Y=S.Y;\nS0.Z=S.Z1;\n\nS2=S0;\noldSlopeT=30/3;\nslopeOldFilter=mfs.image2RegionFilter('slope/slopeOld.png',imH,imW);\nse1=strel('disk',40);%\nslopeOldFilter2=imerode(slopeOldFilter,se1);\nslopeOldFilter3=imerode(slopeOldFilter2,se1);\n%imshow(slopeOldFilter3);return;\nS2.Z(slopeOldFilter)=S2.Z(slopeOldFilter)-oldSlopeT;\nS2.Z(slopeOldFilter2)=S2.Z(slopeOldFilter2)-oldSlopeT;\nS2.Z(slopeOldFilter3)=S2.Z(slopeOldFilter3)-oldSlopeT;\n\nS_bot=mfs.moveMeshGrid(S0min,-r*2*(surfPackNum+botPackNum));\n%thickAreaFilter=mfs.loadImageRegion('slope/thickarea.png',imH,imW);\n%S_bot.Z(~thickAreaFilter)=S0.Z(~thickAreaFilter)-2*r*2;\nS1=mfs.moveMeshGrid(S_bot,r*2*botPackNum);\n\nS_top=mfs.moveMeshGrid(S0,r*2*(topPackNum+surfPackNum2));\ntopRate=0.3;%add elements on top\ndZ=max(S_top.Z(:))-min(S_top.Z(:));\ntopFilter=S_top.Z&gt;max(S_top.Z(:))-dZ*topRate;\ntopAddH=100;\ntopZ=S_top.Z(topFilter);\ndTopZ=topAddH*(topZ-min(topZ))/(dZ*topRate);\n\nS_top.Z(topFilter)=S_top.Z(topFilter)+dTopZ;\nS_top0=mfs.moveMeshGrid(S_top,-r*2*topPackNum);\n\nS_source=S0;\nS_source.Z=S.Z2;\nsourceFilter=mfs.image2RegionFilter('slope/slopesource.png',imH,imW);\n%imshow(sourceFilter);return;\nS_source.Z(~sourceFilter)=max(S_source.Z(:))+100;\nS_source.Z(sourceFilter)=S_source.Z(sourceFilter)-10;\n\nV=S0;%original surface\nsurface(V.X,V.Y,V.Z,-1000*ones(size(V.X)));\nhold all;\nV=S_source;%slope source\n%surface(V.X,V.Y,V.Z,mx.Z2-mx.Z1);\n%surface(V.X,V.Y,S.Z2,S.Z2-S.Z1);\nV=S1;%surface above bottom surface\n%surface(V.X,V.Y,V.Z,50*ones(size(V.X)));\nV=S2;%surface of bottom side of soil,soil2\n%surface(V.X,V.Y,V.Z,1000*ones(size(V.X)));\nV=S_bot;%bottom surface\n%surface(V.X,V.Y,V.Z,0*ones(size(V.X)));\nV=S_top;%top surface\n%surface(V.X,V.Y,V.Z,10*ones(size(V.X)));\nV=S_top0;%bottom side of top surface\n%surface(V.X,V.Y,V.Z,30*ones(size(V.X)));\n\nsave('data/slopeSurface2.mat','S_bot','S_top','S_top0','S0','S1','S2','S_source','r');\n%colorbar\nfs.general3Dset();\n</code></pre> user_Box3DSlope1.m<pre><code>%-------------------user_mxSlope1.m;\n%build the geometrical model;\nclear;\nload('data/slopeSurface2.mat');\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='3DSlope';\n%--------------initial model------------\nB.GPUstatus='auto';\nboxWidth=2800;boxLength=1500;boxHeight=1800;ballR=r;\ndistriRate=0.2;%define distribution of ball radius, \nisClump=0;\n%--------------initial model------------;\nB.isUI=1;%when run the code in UI_command, isUI=1\nB.ballR=ballR;\nB.isClump=isClump;\nB.distriRate=distriRate;\nB.sampleW=boxWidth;\nB.sampleL=boxLength;\nB.sampleH=boxHeight;\nB.platenStatus(:)=0;%no platen in the model\nB.buildModel();\nB.createSample();%create balls in the box\nB.sample.R=B.sample.R*2^(1/12);%R deviation between close packing and cube packing is 2^(1/6)\nS_Bbot=S_bot;\nS_Bbot.Z=S_Bbot.Z-ballR*4;\nS_Btop=S_top;%top limit of boundary\nS_Btop.Z=S_Btop.Z+1000;%boundary limit greater\nB.addSurf(S_bot);%add the bottom surface\nB.addSurf(S_top);%add the top surface\n\nB.addSurf(S_Bbot);%add the bot surface of boundary\nB.addSurf(S_Btop);%add the top surface of boundary\nB.cutGroup({'sample','botB','topB'},1,2);%cut sample and remove top boundary\nB.cutGroup({'lefB','rigB','froB','bacB'},3,4);\n\nB.finishModel();%built the geometric model\nB.setSoftMat();%set soft balls to increase the speed of computing\n\n%-------------end initial parameters and build model--------------;\n%------------generate random-packing balls-------------;\nB.d=B.exportModel();%tranform model data to build object\nB.d.mo.isShear=0;\n%B.R=B.R*0.5;B.show();\n\nd=B.d;d.showB=1;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%d.show('aR');return\n\nC=Tool_Cut(d);%use the tool to cut sample and get layers\nC.addSurf(S_bot);\nC.addSurf(S1);\nC.addSurf(S2);\nC.addSurf(S0);\nC.addSurf(S_top0);\nC.addSurf(S_top);\nC.addSurf(S_source);\nC.setLayer({'sample'},[1,2,3,4,5,6]);%set layers according geometrical data\n%layer1 is between surface 1 and 2, etc\n\ngNames={'layer1';'layer2';'layer3';'layer4';'layer5'};\nd.makeModelByGroups(gNames);%make the model by using the layers.\nd.defineWallElement('layer1');\nd.mo.aR(d.GROUP.layer1)=B.ballR*1.3;\n\nmo=d.mo;\nmo.isFix=1;%fix coordinates;\ngId_top=d.getGroupId('layer5');%get element Id of group\nmo.FixXId=gId_top;%fix X coordinate\nmo.FixYId=gId_top;\nmo.FixZId=gId_top;\n\nnBall=d.mo.nBall;\nbcFilter=sum(nBall&gt;d.mNum&amp;nBall~=d.aNum,2)&gt;0;%boundary connected ball filter\ngFilter=zeros(size(bcFilter));\ngFilter(gId_top)=1;\nmo.aR(gId_top)=B.ballR;\nmo.aR(gFilter&amp;(~bcFilter))=B.ballR*1.3;%not a boundary connected ball\nd.setClump('layer5');\n\n%d.show('aR');return;\n\nB.uniformGRate=1;%the parameter used in B.gravitySediment\nB.gravitySediment(0.5);\nd.mo.FixZId=[];%unfix all Z coordinates\n\nd.mo.dT=d.mo.dT*4;\nd.balance('Standard');\nd.mo.dT=d.mo.dT/4;\n\n%--------------end initial model------------;\n%B.compactSample(6);%input is compaction time;\n%------------return and save result--------------;\nd.status.dispEnergy();%display the energy of the model;\nd.clearData(1);%clear dependent data\nd.recordCalHour('Box3DSlope1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d','C');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_Box3DSlope2.m<pre><code>%set the material of the model\nclear;\nload('TempModel/3DSlope1.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%------------set the material of the model;\nload('Mats\\Mat_mxRock2.mat');%load a trained material\n%you may use user_BoxMatTraining to train a material\nMats{1,1}=Mat_mxRock2;\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\mxSoil.txt');%load a un-trained material file\nMats{2,1}=material('mxSoil',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;\n\n%--------------redefine layers and apply new material\n%because layer elements moved, the layers should be redefined.\nd.addGroup('slopeBottom',d.GROUP.layer1);\nd.protectGroup('slopeBottom','on');%protect the group, of which the element will not be removed\nd.delGroup({'layer1';'layer2';'layer3';'layer4';'layer5'});\nC.layerNum=0;\n%original layer1 is changed to slopeBottom, and be protected, so new layer1\n%is between surfaces 1 and 3\nC.setLayer({'sample'},[2,3,4,5]);%set layers according to geometrical data\ngNames={'layer1';'layer2';'layer3'};\nd.makeModelByGroups(gNames);\nd.setGroupMat('layer2','mxSoil');\nd.groupMat2Model(gNames,1);\n\n%d.showB=3;d.show('aR');return;\n%-----------------define wall area to increase speed of code\nsX=d.mo.aX(1:d.mNum);sY=d.mo.aY(1:d.mNum);\n\nimH=302;imW=561;%height and width of image\n%read the image and change the size,image is in black and white color\nregionFilter=mfs.image2RegionFilter('slope/slopepack.png',imH,imW);%white is true\nsFilter=mfs.applyRegionFilter(regionFilter,sX,sY);\nsFilter=~sFilter;\nsId=find(sFilter);\nsId(sId&gt;d.mNum)=[];\nd.addGroup('slopeWall',sId);\n\nd.defineWallElement('slopeWall');\nd.protectGroup('slopeWall','on');\n%-----------------end define wall area to increase speed of code\n%d.showB=3;d.show('aR');return;\n%---------------balance the model\nd.balanceBondedModel0(0.5);\nd.mo.mVis=d.mo.mVis*5;\nd.balanceBondedModel(0.5);%bond all elements and balance the model\nd.mo.setGPU('off');\n\n%--------------balance model 2, cut the model to get final shape\nd.delGroup({'layer1';'layer2';'layer3'});\nC.layerNum=0;\nC.setLayer({'sample'},[1,3,4]);%set layers according to geometrical data\nC.setLayer({'sample'},[7,4]);%set layers according to geometrical data\ngNames={'layer1';'layer2';'layer3'};\nd.makeModelByGroups(gNames);\n\nd.setGroupMat('layer2','mxSoil');\nd.groupMat2Model(gNames,1);\nd.mo.zeroBalance();\n%d.showB=3;d.show('aR');return;\n%----------------reduce friction and balance model\n\naKS=d.mo.aKS;\nd.mo.aKS(:)=1;d.mo.setKNKS();%reduce the stiffness of element\nd.balanceBondedModel0();\nd.mo.aKS=aKS;d.mo.setKNKS();%restore the stiffness of element\nd.mo.mVis=d.mo.mVis*5;\nd.balanceBondedModel();\n\n%-----------save the model\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Box3DSlope2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d','C');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_Box3DSlope3.m<pre><code>%-------------------user_mxSlope3.m;\nclear;\nload('TempModel/3DSlope2.mat');\nd.calculateData();\nB.setUIoutput();\nd.mo.setGPU('off');\n%d.showB=3;d.show('StressXX');return;\n\n%setup of calculation\nd.getModel();%d.setModel();%reset the initial status of the model\nd.mo.aHeat(:)=0;\nd.status=modelStatus(d);%initialize model status, which records running information\nd.breakGroupOuter({'layer3'});%break the outer connection of the group\nd.breakGroup({'layer3'});%break the outer connection of the group\n\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=0.00001;%ok\nd.mo.mVis=d.mo.mVis*visRate;\nd.setStandarddT();\n\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\ngpuStatus=d.mo.setGPU('auto');\ntotalCircle=10;\nd.tic(totalCircle);\nfor i=1:totalCircle\n    d.balance('Standard');\n    d.clearData(1);\n    d.mo.setGPU('off');\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.mo.setGPU(gpuStatus);\n    d.toc();%show the note of time;\nend\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Box3DSlope3Finish');\nsave(['TempModel/' B.name '3.mat'],'d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre>"},{"location":"examples/examples2018/BoxCrash/","title":"BoxCrash","text":"Step 1Step 2Step 3 user_BoxCrash1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='BoxCrash';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=5*0.1;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=500;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=300;\nB.BexpandRate=4;%boundary is 4-ball wider than sample\nB.PexpandRate=0;\nB.type='topPlaten';%add a top platen to compact model\nB.isSample=1;\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\n\nd.mo.setGPU('auto');\n%1. The simpleContact is the default contact model\n%d.mo.balanceCommand='ContactModel.simpleContact(obj);';\n%2. The normalContact only consider the normal force of element\n%d.mo.balanceCommand='ContactModel.normalContact(obj);';\n%3. The normalContact model is defined in a function file\nd.mo.setBalanceFunction('fun/normalContact.m');%user-defined normal model\n%--------------end initial model------------\n\n%---------- gravity sedimentation\nB.gravitySediment();%you may use B.gravitySediment(10); to increase sedimentation time (10)\n%d.show('mV');return;\n%B.compactSample(1);%input is compaction time\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxCrash2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxCrash1.mat');\nB.setUIoutput();%set the output\nd=B.d;\nd.calculateData();%calculate data\nd.mo.setGPU('off');%close the GPU calculation\nd.getModel();%get xyz from d.mo\n%---------------delele elements on the top\nmZ=d.mo.aZ(1:d.mNum);%get the Z of elements\ntopLayerFilter=mZ&gt;max(mZ)*0.5;\nd.delElement(find(topLayerFilter));%delete elements according to id\n\n%--------------assign new material\nmatTxt=load('Mats\\WeakRock.txt');%load material file\nMats{1,1}=material('WeakRock',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\StrongRock.txt');\nMats{2,1}=material('StrongRock',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;%assign new material\nd.groupMat2Model({'sample'},1);%apply the new material\n\n%----------make disc sample------------\nsampleId=d.GROUP.sample;\nsX=d.aX(sampleId);sZ=d.aZ(sampleId);sR=d.aR(sampleId);\ndiscCX=mean(sX);discCZ=mean(sZ);\ndiscR=20;\ndiscFilter=(d.aX-discCX).^2+(d.aZ-discCZ).^2&lt;discR^2;\n%d.setData();d.data.showFilter=discFilter;d.show('aR');\nd.addGroup('Disc0',find(discFilter));%add a new group\ndiscObj=d.group2Obj('Disc0');\n\ndiscId=d.addElement('StrongRock',discObj);%mat Id, obj\nd.addGroup('Disc',discId);%add a new group\ndisZ=max(sZ+sR)-min(discObj.Z-discObj.R);\nd.moveGroup('Disc',0,0,disZ);%move the group\n\nd.balanceBondedModel0();%balance the bonded model without friction\nd.show('aMatId');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxCrash3.m<pre><code>ufs.setTitle('MatDEM\u9668\u77f3\u649e\u51fb\u5730\u9762\u5b9e\u65f6\u6a21\u62df');\nclear;\nload('TempModel/BoxCrash2.mat');\nd.calculateData();\nd.mo.setGPU('off');\nB.setUIoutput();\nd=B.d;\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\nd.mo.isShear=0;\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=0.0001;\nd.mo.mVis=d.mo.mVis*visRate;\ndiscId=d.GROUP.Disc;\nd.setStandarddT();\nd.mo.dT=d.mo.dT*4;%increase step time to increase computing speed\n\nd.mo.mVZ(discId)=-2000;\nd.mo.mVX(discId)=-1000;\n\nd.showB=0;\nd.status.legendLocation='West';\n\n%----------set the drawing of result during iterations\nsetappdata(0,'simpleFigure',1);\nsetappdata(0,'ballRate',0.01);\nshowType='StressZZ';\n%----------end set the drawing of result during iterations\n\ngpuStatus=d.mo.setGPU('auto');\ntotalCircle=50;\nd.tic(totalCircle);\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    d.balance('Standard',0.0005);\n    d.figureNumber=d.show(showType);%result will be shown in one figure\n    pause(0.05);\nend\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxCrush3Finish');\nsave(['TempModel/' B.name '3.mat'],'d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/BoxModel/","title":"BoxModel","text":"Step 1Step 2Step 3 user_BoxModel1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(2);%build random model\nB=obj_Box;%build a box object\nB.name='BoxModel';\nB.GPUstatus='auto';\nB.ballR=1;\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=100;\nB.sampleL=0;\nB.sampleH=80;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='topPlaten';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\n\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(1);%input is compaction time\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxModel1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_BoxModel2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxModel1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%---------cut the model to make slope\nC=Tool_Cut(d);%cut the model\nlSurf=load('slope/layer surface.txt');%load the surface data\nC.addSurf(lSurf);%add the surfaces to the cut\nC.setLayer({'sample'},[1,2,3,4]);%set layers according geometrical data\ngNames={'lefPlaten';'rigPlaten';'botPlaten';'layer1';'layer2';'layer3'};\nd.makeModelByGroups(gNames);\n%---------end cut the model to make slope\n\n%----------set material of model\nmatTxt=load('Mats\\Soil1.txt');\nMats{1,1}=material('Soil1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\Soil2.txt');\nMats{2,1}=material('Soil2',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;\n%----------end set material of model\n\n%---------assign material to layers and balance the model\nd.setGroupMat('layer2','Soil2');\nd.groupMat2Model({'sample','layer2'});\nd.balanceBondedModel();\n%---------end assign material to layers and balance the model\n\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxModel2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxModel3.m<pre><code>clear;\nload('TempModel/BoxModel2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%d.setModel();%reset the initial status of the model\nd.status=modelStatus(d);%initialize model status, which records running information\n\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=0.001;\nd.mo.mVis=d.mo.mVis*visRate;\ngpuStatus=d.mo.setGPU('auto');\nd.setStandarddT();%reset the step time to default value\n\ntotalCircle=20;\nd.tic(totalCircle);\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    d.balance('Standard',0.2);\n    d.clearData(1);\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.toc();%show the note of time\nend\n\nd.show('aR');\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxModel3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/BoxShear/","title":"BoxShear","text":"Step 1Step 2Step 3Step 4Step 5 user_BoxShear0.m<pre><code>%make a box model, which will be put on a slope\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\n%B.name='BoxShear';\nB.name='BoxShear';\nB.SET.shearType='torsional';%may change it to shear\nB.GPUstatus='auto';\nB.ballR=0.005;\nB.isClump=0;\nB.distriRate=0.2;\nB.SET.sampleR=0.0309;\nB.SET.sampleH=0.02;\nif strcmp(B.SET.shearType,'torsional')\n    B.SET.sampleR=0.0309;\n    B.SET.sampleH=0.06;\nend\n\nB.sampleW=B.SET.sampleR*2.2;\nB.sampleL=B.SET.sampleR*2.2;\nB.sampleH=B.SET.sampleH*1.5;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='topPlaten';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(2);%input is compaction time\nmfs.reduceGravity(d,10);%reduce the gravity of element\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.show('aR');\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step0Finish');\nsave(['TempModel/' B.name '0.mat'],'B','d');\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_BoxShear1.m<pre><code>clear\nload('TempModel/BoxShear0.mat');\nsampleR=B.SET.sampleR;\nsampleH=B.SET.sampleH;\nballR=B.ballR;\nRrate=0.7;\ntubeR=sampleR+ballR;\nringWidth=0.005;\ninnerWidth=sampleR*0.9;\ninnerHeight=sampleH/6;\nbotTubeH=sampleH/2+ballR*2;\nboxType='wall';%boxType could be 'model' or 'wall', see element type in help\n\nboxSampleId=d.getGroupId('sample');\nsX=d.mo.aX(boxSampleId);sY=d.mo.aY(boxSampleId);sZ=d.mo.aZ(boxSampleId);\ndipD=0;dipA=0;radius=sampleR-ballR;height=sampleH-ballR;\ncolumnFilter=f.run('fun/getColumnFilter.m',sX,sY,sZ,dipD,dipA,radius+B.ballR,height);\nd.addGroup('column',find(columnFilter));\nsampleObj=d.group2Obj('column');\n\nsampleObj=mfs.moveObj2Origin(sampleObj);\n%------------------------make object of shearBox-----------------\n\nbotTubeObj=mfs.denseModel(Rrate,@mfs.makeTube,tubeR+(1-Rrate)*ballR*2,botTubeH,ballR);\ndiscObj=mfs.denseModel(Rrate,@mfs.makeDisc,sampleR+(1-Rrate)*ballR*1,ballR);\nbotTubeObj=mfs.moveObj2Origin(botTubeObj);\ndiscObj=mfs.moveObj2Origin(discObj);\n[botTubeObj,botDiscObj]=mfs.alignObj('bottom',botTubeObj,discObj);\nbotBoxObj=mfs.combineObj(botTubeObj,botDiscObj);\n\nbotBoxObj=mfs.align2Value('bottom',botBoxObj,0);\nbotBoxTopZ=mfs.getObjEdge('top',botBoxObj);\nbotRingObj=mfs.makeRing2(tubeR+ballR-ballR*(1-Rrate)*2,tubeR+ballR+ringWidth,ballR,Rrate);\nbotRingObj=mfs.align2Value('top',botRingObj,botBoxTopZ);\nbotBoxObj=mfs.combineObj(botBoxObj,botRingObj);\n\nif strcmp(B.SET.shearType,'torsional')\n    planeObj=mfs.makeBox(innerWidth,innerHeight,ballR,ballR);\n    planeObj=mfs.rotate(planeObj,'YZ',90);\n    planeObj=mfs.move(planeObj,sampleR-innerWidth,0,ballR*2);\n    planeObj=mfs.rotateCopy(planeObj,60,6);\n    botBoxObj=mfs.combineObj(botBoxObj,planeObj);\nend\n\ntopTubeObj=mfs.align2Value('bottom',botTubeObj,botBoxTopZ);\n[topTubeObj,topPlatenObj]=mfs.alignObj('top',topTubeObj,botDiscObj);\ntopTubeBotZ=mfs.getObjEdge('bottom',topTubeObj);\ntopRingObj=mfs.align2Value('bottom',botRingObj,topTubeBotZ);\ntopTubeRingObj=mfs.combineObj(topTubeObj,topRingObj);\n\n%------------------------end make object of shearBox-----------------\n%make a big box for the simulation\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='BoxShear';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=ballR;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=(sampleR+ringWidth)*2.5;\nB.sampleL=(sampleR+ringWidth)*2.5;\nB.sampleH=sampleH*1.2;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=0;\nB.type='botPlaten';\nB.isSample=0;\n%B.type='TriaxialCompression';\nB.setType();\nB.SET.boxType=boxType;\nB.buildInitialModel();\nd=B.d;\nd.mo.setGPU('off');\nB.SET.sampleR=sampleR;\nB.SET.sampleH=sampleH;\n\nbotBoxId=d.addElement(1,botBoxObj,boxType);\nd.addGroup('botBox',botBoxId);%add a new group\nd.setClump('botBox');\ntopTubeRingId=d.addElement(1,topTubeRingObj,boxType);\nd.addGroup('topTubeRing',topTubeRingId);%add a new group\nd.setClump('topTubeRing');\ntopPlatenId=d.addElement(1,topPlatenObj);\nd.addGroup('topPlaten',topPlatenId);%add a new group\nd.setClump('topPlaten');\nd.addGroup('shearBox',[d.GROUP.botBox;d.GROUP.topTubeRing;d.GROUP.topPlaten]);\nd.delElement('botPlaten');\n\nd.moveGroup('shearBox',B.sampleW/2,B.sampleL/2,0);\n\nboxSampleId=d.addElement(1,sampleObj);\nd.addGroup('sample',boxSampleId);%add a new group\nboxZ=d.mo.aZ(d.GROUP.shearBox);\nd.moveGroup('sample',B.sampleW/2,B.sampleL/2,mean(boxZ));\nd.minusGroup('sample','shearBox',0.5);\n\n%d.showFilter('Group',{'shearBox'},'aR');return;\n\nd.removeGroupForce(d.GROUP.topTubeRing,d.GROUP.topPlaten);\nd.mo.zeroBalance();\nfixId=[d.GROUP.botBox;d.GROUP.topTubeRing];\nd.addFixId('X',[fixId;d.GROUP.topPlaten]);\nd.addFixId('Y',[fixId;d.GROUP.topPlaten]);\nd.addFixId('Z',fixId);\n\n%------------return and save result--------------\nB.gravitySediment(0.5);\nB.compactSample(2);%input is compaction time\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.showFilter('SlideY',0.3,1,'StressXX');\n</code></pre> user_BoxShear2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxShear1.mat');\n%------------initialize model-------------------\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n%------------end initialize model-------------------\n\n%-------------set new material----------------\nmatTxt=load('Mats\\Soil1.txt');\nMats{1,1}=material('Soil1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\nd.groupMat2Model({'sample'},1);\n%-------------end set new material----------------\n\n%-------------------apply stress, and balance model------------------\nd.resetStatus();\nB.SET.platenArea=pi*B.SET.sampleR*B.SET.sampleR;\nverticalStress=50e3;\nverticalForce=verticalStress*B.SET.platenArea/length(d.GROUP.topPlaten);\nd.mo.mGZ(d.GROUP.topPlaten)=-verticalForce;\nd.breakGroup();\nd.mo.zeroBalance();\nB.compactSample(2);%input is compaction time\nd.balance('Standard',2);\nd.showFilter('SlideY',0.3,1,'mV');\n\n\n%--------------------save data-----------------------\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n%--------------------end save data-----------------------\nd.calculateData();\n</code></pre> user_BoxShear3.m<pre><code>clear;\nload('TempModel/BoxShear2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\n%initializing\nd.getModel();%d.setModel();%reset the initial status of the model\nd.status=modelStatus(d);%initialize model status, which records running information\nif strcmp(B.SET.boxType,'model')\nd.status.SET.FX=[];\nd.status.recordCommand='gId=d.GROUP.topTubeRing;FX=sum(sum(d.mo.nFnX(gId,:)));obj.SET.FX=[obj.SET.FX;FX];';\nend\n\nd.mo.bFilter(:)=0;%break all bonds, no tensile force\nd.mo.isHeat=1;%calculate heat in the model\nd.mo.setGPU('auto');\nd.setStandarddT();\n\ntotalCircle=20;\nstepNum=10;\ndis=0.005;%total distance\ndDis=dis/totalCircle/stepNum;%distance of each step\nd.tic(totalCircle*stepNum);\n%.mat files will be saved in the folder data/step\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\n\nfor i=1:totalCircle\n    for j=1:stepNum\n        d.toc();%show the note of time\n        d.moveGroup('botBox',dDis,0,0,'mo');\n        d.balance('Standard',0.1);%\n    end\n    d.clearData(1);%clear data in d.mo\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxPile3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxShearTorsional3.m<pre><code>clear;\nload('TempModel/BoxShear2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nB.name='BoxShearTorsional';\n%initializing\nd.getModel();%d.setModel();%reset the initial status of the model\nd.status=modelStatus(d);%initialize model status, which records running information\n\nd.mo.bFilter(:)=0;%break all bonds, no tensile force\nd.mo.isHeat=1;%calculate heat in the model\nd.mo.setGPU('auto');\nd.setStandarddT();\n\nd.addGroup('topBox',[d.GROUP.topTubeRing;d.GROUP.topPlaten]);\n\ntotalCircle=20;\nstepNum=10;\nangle=60;%total rotation\ndAngle=angle/totalCircle/stepNum;%distance of each step\nd.tic(totalCircle*stepNum);\n%.mat files will be saved in the folder data/step\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\n\nfor i=1:totalCircle\n    for j=1:stepNum\n        d.toc();%show the note of time\n        d.rotateGroup('botBox','XY',dAngle,B.sampleW/2,B.sampleL/2,0,'mo');%only d.mo data will be rotate\n        d.balance('Standard',0.1);%\n    end\n    d.clearData(1);%clear data in d.mo\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxPile3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/BoxSlope/","title":"BoxSlope","text":"Step 1Step 2Step 3 user_BoxSlope1.m<pre><code>%make a box model, which will be put on a slope\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='BoxSlope';\nB.GPUstatus='auto';\nB.ballR=0.035;\nB.isClump=1;\nB.distriRate=0.2;\nB.sampleW=0.8;\nB.sampleL=0.8;\nB.sampleH=1.5;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='GeneralSlope';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\n\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(2);%input is compaction time\nmfs.reduceGravity(d,5);\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.show('aR');\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxSlope1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_BoxSlope2.m<pre><code>%step1: packing the elements\nclear;\nload('TempModel/BoxSlope1.mat');\nB.d.mo.setGPU('off');\npackBallR=B.ballR;%record the ballR of the small box block\npackBoxObj=B.d.group2Obj('sample');%make struct object from a group\n\n%make a big box for the simulation\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='BoxSlope';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=packBallR;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=6;%width, length, height, average radius\nB.sampleL=4;%when L is zero, it is a 2-dimensional model\nB.sampleH=3;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=0;\nB.type='botPlaten';%add a top platen to compact model\nB.isSample=0;\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();\nd=B.d;\nd.mo.setGPU('off');%close GPU when modifing the model\nd.showB=3;\nd.delElement('topB');%remove top boundary\n%d.show('aR');return;\nslopeW=3;slopeL=B.sampleL;slopeH=B.ballR;\nslope=mfs.denseModel(0.8,@mfs.makeBox,slopeW,slopeL,slopeH,B.ballR);%make a pile struct\nslopeId=d.addElement(1,slope,'boundary');%add a slope boundary\nd.addGroup('slope',slopeId);%add a new group\nrotateX=max(d.aX(d.GROUP.slope));rotateZ=max(d.aZ(d.GROUP.slope));\nd.rotateGroup('slope','XZ',-30,rotateX,0,rotateZ);%rotate the group along XZ plane\nd.moveGroup('slope',-min(d.aX(d.GROUP.slope)),0,-min(d.aZ(d.GROUP.slope)));%move the slope\n\n%import a regular packing box on the top right side of the model\nsmallBoxW=slopeW/4;\nsmallBox=mfs.denseModel(1.1,@mfs.makeBox,smallBoxW,smallBoxW,smallBoxW,B.ballR);%make a box struct\nboxId=d.addElement(1,smallBox);\nd.addGroup('box',boxId);%add a new group\nd.moveGroup('box',B.sampleW*3/4,B.sampleL*1/4,B.sampleH*2/4);\n\n%import the packed box (from step 1) on the top left side of the model\nboxObjId=d.addElement(1,packBoxObj);%add regular model elements (not boundary)\nd.addGroup('boxObj',boxObjId);%add a new group\nd.setClump();%d.GROUP.groupId&lt;-10 will be clump\nd.moveGroup('boxObj',B.sampleW/8,B.sampleL*1/2,B.sampleH*2/4);\nd.delElement('botPlaten');%remove bottom platen\nd.show('aR');\n\n%------------record data\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data in d\nd.recordCalHour('BoxSlope2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxSlope3.m<pre><code>clear;\nload('TempModel/BoxSlope2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%d.setModel();%reset the initial status of the model\nd.status=modelStatus(d);%initialize model status, which records running information\n\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=0.0001;\nd.mo.mVis=d.mo.mVis*visRate;%use low viscosity for dynamic simulation\ngpuStatus=d.mo.setGPU('auto');\nd.setStandarddT();\n\ntotalCircle=20;\nd.tic(totalCircle);\n%.mat files will be saved in the folder data/step\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    d.balance(50,d.SET.packNum);\n    d.clearData(1);\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.toc();%show the note of time\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxSlope3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/BoxStruct/","title":"BoxStruct","text":"Step 1Step 2Step 3Step 4 user_BoxStruct0.m<pre><code>%build the geometrical model\nclear;\n%--------------initial model------------\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='BoxStruct';\n%B.type='TriaxialCompression';\nB.GPUstatus='auto';\nB.ballR=200;%average radius of elements\nB.isClump=0;%make clump particles?\nB.distriRate=0.2;%distribution coefficient\nB.sampleW=10000;%sample size, width\nB.sampleL=20000;%length\nB.sampleH=4000;%height\nB.setType();\n\nB.buildInitialModel();%B.show();\nB.setUIoutput();%set the output of the message\n\nd=B.d;\nd.showB=1;%show boundary elements\n%d.breakGroup('sample');d.breakGroup('lefPlaten');\n\n%--------------end initial model------------\nB.gravitySediment(0.5);\nB.compactSample(1);%input is compaction time\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxStruct0Finish');\nsave(['TempModel/' B.name '0.mat'],'B','d');\nsave(['TempModel/' B.name '0R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_BoxStruct1.m<pre><code>clear\nload('TempModel/BoxStruct0.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%---------------delele elements\nd.showFilter('SlideX',0.1,0.8);\nd.showFilter('SlideY',0.1,0.8);\nd.showFilter('SlideZ',0.1,0.6);\nsFilter=d.data.showFilter(1:d.mNum);%showFilter result is recorded in d.data.showFilter\nframeFilter=~sFilter;\nd.delElement(find(frameFilter));%delete elements according to id\n\nmatTxt=load('Mats\\Rock1.txt');\nMats{1,1}=material('Rock1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;%assigne materials to the model\n\n%---------------define box\nboxW=B.sampleW*0.8;\nboxL=B.sampleL*0.8;\nboxH=B.sampleH*0.7;\n\nRrate=0.8;\nnum=1;\ndDis=B.ballR*2*Rrate;\ndiameter=B.ballR*2;\nlefObj=mfs.denseModel(Rrate,@mfs.makeBox,B.ballR,boxL+diameter,boxH+diameter,B.ballR);\nfroObj=mfs.denseModel(Rrate,@mfs.makeBox,boxW+diameter,B.ballR,boxH+diameter,B.ballR);\nbotObj=mfs.denseModel(Rrate,@mfs.makeBox,boxW+diameter,boxL+diameter,B.ballR,B.ballR);\nlefObj=mfs.expandAlong(lefObj,'Y',dDis,num);\nlefObj=mfs.move(lefObj,0,B.ballR,B.ballR);\n\nfroObj=mfs.expandAlong(froObj,'X',dDis,num);\nfroObj=mfs.move(froObj,B.ballR,0,B.ballR);\n\nbotObj=mfs.expandAlong(botObj,'Y',dDis,num);\nbotObj=mfs.move(botObj,B.ballR,B.ballR,0);\n\nrigObj=mfs.move(lefObj,boxW+diameter,0,0);\nbacObj=mfs.move(froObj,0,boxL+diameter,0);\n\nlefId=d.addElement(1,lefObj);\nd.addGroup('lefP',lefId);\nd.setClump('lefP');\n\nfroId=d.addElement(1,froObj);\nd.addGroup('froP',froId);\nd.setClump('froP');\n\nbotId=d.addElement(1,botObj);\nd.addGroup('botP',botId);\nd.setClump('botP');\n\nrigId=d.addElement(1,rigObj);\nd.addGroup('rigP',rigId);\nd.setClump('rigP');\n\nbacId=d.addElement(1,bacObj);\nd.addGroup('bacP',bacId);\nd.setClump('bacP');\n\nG=d.GROUP;\nboxId=[G.lefP;G.rigP;G.froP;G.bacP;G.botP];\nd.addGroup('box',boxId);\n%d.show('aR');return\n\nf.run('fun/moveGroup2Center.m',B,'box');\nf.run('fun/moveGroup2Center.m',B,'sample');\n\nd.minusGroup('sample','box',0.5);\nd.addFixId('X',d.GROUP.box);\nd.addFixId('Y',d.GROUP.box);\nd.addFixId('Z',d.GROUP.box);\n%force between the elements will be removed in the calculation\nd.removeGroupForce([d.GROUP.lefP;d.GROUP.rigP],[d.GROUP.botP;d.GROUP.froP;d.GROUP.bacP]);\nd.removeGroupForce([d.GROUP.botP],[d.GROUP.froP;d.GROUP.bacP]);\nd.mo.zeroBalance();\n\nd.balanceBondedModel0(0.5);\nd.mo.bFilter(:)=false;\nd.balance('Standard',4);\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxStruct1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxStruct2.m<pre><code>clear\nload('TempModel/BoxStruct1.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\nG=d.GROUP;\nsZ=d.mo.aZ(G.sample);\nbotSampleId=find(sZ&lt;min(sZ)+B.ballR*1.5);\nbotLayerId=[botSampleId;G.botP;G.froP];\nd.addGroup('botLayer',botLayerId);\nbotX=d.mo.aX(botLayerId);\nblLayerId=botLayerId(botX&lt;mean(botX));\nbrLayerId=botLayerId(botX&gt;=mean(botX));\n\nd.addGroup('blLayer',blLayerId);\nd.addGroup('brLayer',[brLayerId;G.rigP]);\nd.GROUP.groupId(d.GROUP.sample)=0;\nd.GROUP.groupId(d.GROUP.blLayer)=1;\nd.GROUP.groupId(d.GROUP.brLayer)=2;\nd.mo.bFilter(:)=true;\nd.mo.isCrack=1;\nd.mo.zeroBalance();\nd.mo.setGPU('auto');\nd.balance('Standard',0.5);\nd.show('groupId');\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxStruct2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxStruct3.m<pre><code>clear;\nload('TempModel/BoxStruct2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%d.setModel();%reset the initial status of the model\nd.mo.bFilter(:)=true;\nd.mo.zeroBalance();\nd.resetStatus();\nd.mo.isHeat=1;%calculate heat in the model\nd.setStandarddT();\nd.mo.isCrack=1;\nd.addFixId('Y',d.GROUP.brLayer);\n\nd.mo.aBF=d.mo.aBF/10;\nd.mo.aFS0=d.mo.aFS0/10;\nDisY=B.sampleL*0.01;\n\ntotalCircle=20;stepNum=100;\nd.tic(totalCircle*stepNum);\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat'],'-v7.3');%return;\ndis=DisY/(totalCircle*stepNum);\ngpuStatus=d.mo.setGPU('auto');\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    for j=1:stepNum\n        d.moveGroup('brLayer',0,-dis,0);\n        d.balance(5);\n        d.recordStatus();\n        d.toc();%show the note of time\n    end\n    d.clearData(1);\n    save([fName num2str(i) '.mat'],'-v7.3');\n    d.calculateData();\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxStruct3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d','-v7.3');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat'],'-v7.3');\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/CuTestNew/","title":"CuTestNew","text":"Step 1Step 2 user_BoxCuTestNew1and2.m<pre><code>clear\n%---------------set parameters for material training\nmatName='mxRock';\nmatFile='Mats\\mxRock.txt';%material file (.txt or material obj), [E,v,Tu,Cu,Mui],Mui is coefficient of intrinsic friction\nblockW=0.1;blockL=0.1;blockH=0.2;ballR=0.01;%width, length, height, radius\ndistriRate=0.25;%define distribution of ball radius,\nrandSeed=1;%change the seed to create a block with different element size\nrandPositionSeed=2;%change it to make a new packing\n\nsaveFileLevel=2;%2:save all files, 1:save important files, 0: save one result file, -1: do not save\nuniaxialStressRate=1;%default value is 1, generally do not have to change it\nStandardBalanceNum=50;%define the balance number of simulation, 1-50\n\n%--------------build initial model\nB=obj_Box;%build a box object\nB.GPUstatus='auto';\nB=mfs.makeUniaxialTestModel0(B,blockW,blockL,blockH,ballR,distriRate,randSeed);%build initial box model\n%you may change element size here\nmfs.mixGroupElement(B.d,'sample',randPositionSeed);%mix elements in sample\n%B.d.show('aR');return;\n\n%end you may change element size here\nB.name='CuTestNew';\nB.saveFileLevel=saveFileLevel;%save all related files\nB.SET.uniaxialStressRate=uniaxialStressRate;\nB.d.SET.StandardBalanceNum=StandardBalanceNum;%the balance number \n%-------------assign material to model\nB=mfs.makeUniaxialTestModel1(B);%sedimentation, data will be save in 'TempModel/boxUniaxial1.mat'\nmfs.makeUniaxialTestModel2(B,matFile);%set the material of the model\nB.d.balance('Standard',2);%two times of standard balance\nfs.save(['TempModel/' B.name '1.mat'],'B',B);\n</code></pre> user_BoxCuTestNew3.m<pre><code>clear\nload('TempModel/CuTestNew1.mat');\nallStressSteps=mfs.getBoxUniaxialStressSteps(B);\nstressSteps=allStressSteps.CuStressSteps;\nfs.disp('&lt;----------------------Start mfs.makeUniaxialCuTest----------------------&gt;');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.status=modelStatus(d);%initialize model status, which records running information\nd.setStandarddT();\nd.mo.isHeat=1;%calculate heat in the model\nd.setStandarddT();\ntotalCircle=length(stressSteps);\nd.tic(totalCircle);\n%set the file saving\nfName=['data/step/' B.name '-MatUniaxialCu-R'  num2str(B.ballR) '-' num2str(B.distriRate) 'aNum' num2str(d.aNum) 'loopNum'];\nif B.saveFileLevel&gt;1\n    d.clearData(1);\n    fs.save([fName '0.mat'],'B',B);\n    d.calculateData();\nend\nd.mo.isFix=0;\n%reduce the stiffness of lateral boundary for uniaxial test\nbId=[d.GROUP.lefB;d.GROUP.rigB;d.GROUP.froB;d.GROUP.bacB];\nd.mo.aKN(bId)=1e-100;d.mo.aKS(bId)=1e100;\nd.mo.setKNKS();\n%set the default value of test\nif ~isfield(d.SET,'divNum')\n    d.SET.divNum=10;\nend\nif ~isfield(d.SET,'balanceRate')||d.SET.balanceRate&lt;=0\n    d.SET.balanceRate=0.4;\nend\n\ndivNum=d.SET.divNum;\nbalanceRate=d.SET.balanceRate;\nstressStep=0;\nmaxForce=0;\nd.mo.setGPU('auto');\nfor i=1:totalCircle\n    for j=1:divNum\n        B.setPlatenStress('StressZZ',stressStep+(stressSteps(i)-stressStep)/divNum*j);\n        d.balance('Standard',balanceRate,'off');\n        d.status.SET.isWHT=1;%record the WHT in recordStatus\n        d.recordStatus();\n    end\n    if B.saveFileLevel&gt;1\n        d.clearData();\n        fs.save([fName num2str(i) 'divNum' num2str(divNum) 'balanceRate' num2str(balanceRate) '.mat'],'B',B);\n        d.calculateData();\n    end\n    d.toc();%show the note of time;\n    stressStep=stressSteps(i);\n    newForce=-d.status.bottomBFs(end,3);\n    if newForce&gt;maxForce\n        maxForce=newForce;\n    end\n    if newForce&lt;0.9*maxForce\n        break;\n    end\n\n    %calculate the strain, when it &gt;0.4, break\n    meanTopPlatenZ0=mean(d.aZ(d.GROUP.topPlaten));\n    meanTopPlatenZ1=mean(d.mo.aZ(d.GROUP.topPlaten));\n    minSampleZ0=min(d.aZ(d.GROUP.sample));\n    strainZZ=(meanTopPlatenZ0-meanTopPlatenZ1)/(meanTopPlatenZ0-minSampleZ0);\n    if strainZZ&gt;0.4\n        break;\n    end\nend\nCu=d.status.calculateCu();%calculate Cu based on the saved data in d.statu.TAG, WHT and WHTTIds\n\nd.recordCalHour('BoxTest3Finish');\nif B.saveFileLevel&gt;0\n    d.clearData(1);\n    fs.save(['data/' B.name '-MatUniaxialCu-R'  num2str(B.ballR) '-' num2str(B.distriRate) 'aNum' num2str(d.aNum) '.mat'],'B',B);\n    d.calculateData();\nend\nfs.disp('&lt;----------------------End mfs.makeUniaxialCuTest----------------------&gt;');\n%post-processing\nfigure('Position',[50,50,1200,400]);\nsubplot(1,2,1);\nd.status.showBoundaryStresses();\nxlabel('Time [s]');\nylabel('Magnitude of boundary stress [Pa]');\nsubplot(1,2,2);\nd.status.showStrainStress();\nxlabel('StressZZ [Pa]');\n\nfigure\nS=fs.getBlockStrainStress(d.status);\nplot(-S.strainZZ,-S.stressZZ,'k','LineWidth',1);\nxlabel('Magnitude of StrainZZ');\nylabel('Magnitude of StressZZ [Pa]');\ntitle('StressZZ-StrainZZ Curve during Cu test');\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxCuTestNewFinish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/Earthquake/","title":"Earthquake","text":"Step 1Step 2Step 3 user_L2Earthquake1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(2);%build random model\nB=obj_Box;%build a box object\nB.name='BoxEarthquake';\nB.GPUstatus='auto';\nB.ballR=1;%default value is 0.5, use 1 to increase speed\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=200;\nB.sampleL=0;\nB.sampleH=160;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='topPlaten';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\n\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(1);%input is compaction time\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('Box1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_L2Earthquake2.m<pre><code>%initilization\nclear\nload('TempModel/BoxEarthquake1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%---------set material of model\nmatTxt=load('Mats\\Soil3.txt');%material of soil\nMats{1,1}=material('Soil1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\Rock1.txt');\nMats{2,1}=material('Rock1',matTxt2,B.ballR);%material of rock\nMats{2,1}.Id=2;\nd.Mats=Mats;\n%---------end set material of model\n%---------cut the model and make layers\nC=Tool_Cut(d);%cut the model\nlSurf=load('slope/Earthquake.txt');%load the surface data\nC.addSurf(lSurf);%add the surfaces to the cut\nC.setLayer({'sample'},[1,2,3,4]);%set layers according geometrical data\ngNames={'lefPlaten';'rigPlaten';'botPlaten';'layer1';'layer2';'layer3'};\nd.makeModelByGroups(gNames);%build new model\n%---------end cut the model and make layers\n%---------set material of group\nd.setGroupMat('layer1','Rock1');\nd.setGroupMat('layer2','Soil1');\nd.setGroupMat('layer3','Rock1');\nd.groupMat2Model({'layer1','layer2','layer3'},2);\n%---------end set material of group\n\n%---------balance the model\nd.balanceBondedModel0();%balance the bonded model without friction\n\n%---------define a block on left side of the model to generate wave\nmX=d.mo.aX(1:d.mNum);\nleftBlockId=find(mX&lt;0.05*max(mX));%choose element Id of block\nd.addGroup('LeftBlock',leftBlockId);%add a new group\nd.setClump('LeftBlock');%set the block clump\nd.mo.zeroBalance();\n%---------end define a block on left side of the model to generate wave\n\n%---------balance the model\nd.mo.bFilter(:)=true;\nd.mo.dT=d.mo.dT*4;\nd.balance('Standard',1);\nd.mo.bFilter(:)=true;\nd.balance('Standard',0.5);\nd.mo.dT=d.mo.dT/4;\n%---------end balance the model\n\nd.show('aMatId');%show material of model\n%---------save data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxModel2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L2Earthquake3.m<pre><code>clear;\nload('TempModel/BoxEarthquake2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\n\nd.mo.isHeat=1;%calculate heat in the model\nd.mo.isCrack=1;%record in the model\nvisRate=0.000001;\nd.mo.mVis=d.mo.mVis*visRate;\ngpuStatus=d.mo.setGPU('auto');\nd.setStandarddT();\n\n%------------move left boundary to generate compressive wave\nd.moveBoundary('left',0.01,0,0);\n\ntotalCircle=40;\nd.tic(totalCircle);\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    d.balance('Standard',0.01);\n    d.clearData(1);\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.toc();%show the note of time\nend\n\nd.show('mV');\n\n%-----------save data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxModel3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/Exploision/","title":"Exploision","text":"Step 1Step 2Step 3 user_BoxModel1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(2);%build random model\nB=obj_Box;%build a box object\nB.name='BoxModel';\nB.GPUstatus='auto';\nB.ballR=1;\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=100;\nB.sampleL=0;\nB.sampleH=80;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='topPlaten';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\n\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(1);%input is compaction time\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxModel1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_BoxModel2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxModel1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%---------cut the model to make slope\nC=Tool_Cut(d);%cut the model\nlSurf=load('slope/layer surface.txt');%load the surface data\nC.addSurf(lSurf);%add the surfaces to the cut\nC.setLayer({'sample'},[1,2,3,4]);%set layers according geometrical data\ngNames={'lefPlaten';'rigPlaten';'botPlaten';'layer1';'layer2';'layer3'};\nd.makeModelByGroups(gNames);\n%---------end cut the model to make slope\n\n%----------set material of model\nmatTxt=load('Mats\\Soil1.txt');\nMats{1,1}=material('Soil1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\Soil2.txt');\nMats{2,1}=material('Soil2',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;\n%----------end set material of model\n\n%---------assign material to layers and balance the model\nd.setGroupMat('layer2','Soil2');\nd.groupMat2Model({'sample','layer2'});\nd.balanceBondedModel();\n%---------end assign material to layers and balance the model\n\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxModel2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L2Model3Exploision.m<pre><code>%note: run user_BoxModel1 and 2 before runing the code\nclear;\nload('TempModel/BoxModel2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nB.name=[B.name 'Exploision'];\n%---------enhance the strength of the slope\nd.mo.aBF=d.mo.aBF*10;\nd.mo.aFS0=d.mo.aFS0*10;\n\n%-------make an exploisive point\ncenterX=15;centerZ=20;\nbombR=2;\ndX=d.mo.aX-centerX;\ndZ=d.mo.aZ-centerZ;\nbombId=find((dX.*dX+dZ.*dZ)&lt;bombR.*bombR);%get the Id of bomb\nd.addGroup('Bomb1',bombId);%add a new group\nd.showFilter('Group',{'Bomb1'},'aR');\nd.mo.zeroBalance();\n\nd.recordStatus();\n%-------end make an exploisive point\n%-------increase the bomb element size\noldKe=d.status.elasticEs(end);%record the original energy\nbombExpandRate=1.4;\nd.mo.aR(bombId)=d.mo.aR(bombId)*bombExpandRate;%increase bomb element size\nd.mo.zeroBalance();\nd.recordStatus();\nnewKe=d.status.elasticEs(end);\ndKe=newKe-oldKe;%calculate the energy increment\n\n%calculate the TNT equivalent \nfs.disp(['Energy of the bomb is ' num2str(dKe) 'J', ' ~=' num2str(dKe/4.2e6) ' Kg TNT']);\n%-------end increase the bomb element size\n\nd.getModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\n%d.show();return;\n\n%---------initialize the simulation\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=0.00001;\nd.mo.mVis=d.mo.mVis*visRate;\ngpuStatus=d.mo.setGPU('auto');\nd.setStandarddT();\n\n%----------start simulation\ntotalCircle=10;\nd.tic(totalCircle);\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    d.balance('Standard',0.1);\n    d.clearData(1);\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.toc();%show the note of time\nend\n%----------end simulation\n\n%--------save data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxModel3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/LandSubsidence/","title":"LandSubsidence","text":"Step 1Step 2Step 3 user_L2LandSubsidence1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(2);%build random model\nB=obj_Box;%build a box object\nB.name='BoxLandSubsidence';\nB.GPUstatus='auto';\nB.ballR=1;%default value is 0.5, use 1 to increase speed\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=200;\nB.sampleL=0;\nB.sampleH=80;\nB.type='GeneralSlope';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\n\nB.setUIoutput();\nd=B.d;\nd.mo.setGPU('auto');\n%--------------end initial model------------\nB.gravitySediment();\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('Box1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_L2LandSubsidence2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxLandSubsidence1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%---------set material of model\nmatTxt=load('Mats\\SoilLandSubsidence.txt');%material of soil\nMats{1,1}=material('Soil1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\Rock1.txt');\nMats{2,1}=material('Rock1',matTxt2,B.ballR);%material of rock\nMats{2,1}.Id=2;\nd.Mats=Mats;\n%---------end set material of model\n\n%---------cut model and make layers\nC=Tool_Cut(d);%cut the model\nlSurf=load('slope/LandSubsidence.txt');%load the surface data\nC.addSurf(lSurf);%add the surfaces to the cut\nC.setLayer({'sample'},[1,2,3]);%set layers according geometrical data\ngNames={'lefPlaten';'rigPlaten';'botPlaten';'layer1';'layer2'};\nd.makeModelByGroups(gNames);%build new model using layer1 and 2\n%set material of group\nd.setGroupMat('layer1','Rock1');\nd.setGroupMat('layer2','Soil1');\nd.defineWallElement('layer1');%change rigid rock to wall\n%d.show();\nd.groupMat2Model({'layer1','layer2'});\n%---------end cut model and make layers\n\n%---------balance the model\nd.balanceBondedModel0();\nd.mo.bFilter(:)=true;\nd.balance('Standard');\nd.mo.bFilter(:)=true;\nd.balance('Standard');\n%---------end balance the model\n\n%---------save data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxModel2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L2LandSubsidence3.m<pre><code>clear;\nload('TempModel/BoxLandSubsidence2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\n\n%-------------initializing parameters\nmGZ0=d.mo.mGZ;%record the initial gravity of element\nmZ=d.mo.aZ(1:d.mNum);\nmR=d.mo.aR(1:d.mNum);\nmVolumn=4/3*pi*mR.*mR.*mR;%volumn of elements\nwaterDensity=1e3;\nwaterTable1=55;%initial water table\nwaterTable2=25;\nmBuoyancy=-waterDensity*mVolumn*d.mo.g;%buoyancy of element\n%-------------end initializing parameters\n\n%-------------initializing model\nwaterFilter=mZ&lt;waterTable1;%filter of element under the water table\nd.mo.mGZ=mGZ0+mBuoyancy.*waterFilter;\nd.balanceBondedModel0();%bond the model and balance it without friction\nd.mo.bFilter(:)=true;%bond all elements\nd.balance('Standard');\n\nd.mo.isCrack=1;%record the information of cracks\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=1;\nd.mo.mVis=d.mo.mVis*visRate;%change the viscosity of the simulation\nd.setStandarddT();\n%-------------end initializing model\n\n%-------------when water table drops\nwaterFilter=mZ&lt;waterTable2;%filter of element under the water table\nmBuoyancy=-waterDensity*mVolumn*d.mo.g;\nd.mo.mGZ=mGZ0+mBuoyancy.*waterFilter;\nd.balance('Standard');\n\nd.show('Displacement');\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxModel3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/MatTraining/","title":"MatTraining","text":"Step 1 user_BoxMatTraining.m<pre><code>clear\n%---------------set parameters for material training\nmatName='mxRock2';\nmatFile=['Mats\\' matName '.txt'];%material file, [E,v,Tu,Cu,Mui],Mui is coefficient of intrinsic friction\nblockW=0.1;blockL=0.1;blockH=0.2;ballR=0.005;%width, length, height, radius\ndistriRate=0.2;%define distribution of ball radius, value from 0 to 0.5\ninterationNum=6;%number of interation, value from 3 to 6\n\nrandSeed=2;%change the seed to create a different model\nsaveFileLevel=2;%2:save all files, 1:save important files, 0: save one result file, -1: do not save\nuniaxialStressRate=1;%default value is 1, generally do not have to change it\nStandardBalanceNum=20;%define the balance number of simulation, 1-50\n\n%--------------build initial model\nB=obj_Box;%build a box object\nB.GPUstatus='auto';\nB=mfs.makeUniaxialTestModel0(B,blockW,blockL,blockH,ballR,distriRate,randSeed);%build initial box model\n\n%you may change element size here\nB.name=matName;\nB.saveFileLevel=saveFileLevel;%save all related files\nB.SET.uniaxialStressRate=uniaxialStressRate;\nB.d.SET.StandardBalanceNum=StandardBalanceNum;\n%-------------assign material to model\nB=mfs.makeUniaxialTestModel1(B);%sedimentation, data will be save in 'TempModel/boxUniaxial1.mat'\nB.save(1);%save file in 'TempModel', file name end with 'Step-1'\nmfs.makeUniaxialTestModel2(B,matFile);%set the material of the model\nmfs.makeUniaxialTest(B);%calculate E,v,Tu,Cu of block, data will be saved in 'data' and 'data/step'\n\nfor i=1:interationNum\n    data=B.d.Mats{1}.calculateRate();\n    %-----------set material and joints, etc\n    matSet=B.d.Mats{1}.SET;%rate data is recorded in B.SET;\n    B.load(1);%load the saved file in 'TempModel'\n    mfs.makeUniaxialTestModel2(B,matFile,data.newRate);%apply the new rate\n    B.d.Mats{1}.SET=matSet;%assign the material rate data\n    mfs.makeUniaxialTest(B);%calculate E,v,Tu,Cu of block, data will be saved in 'data' and 'data/step'\nend\nB.d.Mats{1}.setTrainedMat();\nB.d.Mats{1}.save();\n</code></pre>"},{"location":"examples/examples2018/MixMat/","title":"MixMat","text":"Step 1Step 2Step 3 user_BoxMixMat1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(2);%build random model\nB=obj_Box;%build a box object\nB.name='BoxMixMat';\nB.GPUstatus='auto';\nB.ballR=0.001;\nB.isClump=1;\nB.distriRate=0.3;\nB.sampleW=0.1;\nB.sampleL=0;\nB.sampleH=0.1;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='topPlaten';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\n\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(2);%input is compaction time\nmfs.reduceGravity(d,5);%reduce the gravity of element\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxMixMat1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_BoxMixMat2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxMixMat1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n%------------------remove top elements\nmZ=d.mo.aZ(1:d.mNum);\ntopLayerFilter=mZ&gt;max(mZ)*0.85;%make filter for top layer\nd.delElement(find(topLayerFilter));%delete top layer elements\n\n%set material of model\nmatTxt=load('Mats\\Rock1.txt');\nMats{1,1}=material('Rock1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\Rock2.txt');\nMats{2,1}=material('Rock2',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;%assigne materials to the model\n\n%------------------------start mix material------------------------\ngroupId=d.GROUP.groupId;%groupId of all elements\n%groupId of sample clump&lt;-10, i.e. [-11,-12....], see d.GROUP.groupId\nmatContents=[9,1];%percentage of material 1 is 90%\nmatContents=matContents/(sum(matContents));\n\ngroupIdUnique=unique(groupId);\nclumpId=groupIdUnique(groupIdUnique&lt;-10);\nclumpNum=length(clumpId);%get the number of clump in the sample\n\nclumpFilter=groupId&lt;-10;%filter of clump\nmatSeed=mod(groupId*pi^2,1);\nmat1Filter=(matSeed&lt;matContents(1))&amp;clumpFilter;\nmat2Filter=(matSeed&gt;=matContents(1))&amp;clumpFilter;\nmat1Group=find(mat1Filter);\nmat2Group=find(mat2Filter);\n\nd.addGroup('Mat1Group',mat1Group);\nd.addGroup('Mat2Group',mat2Group);\nd.setGroupMat('Mat1Group','Rock1');\nd.setGroupMat('Mat2Group','Rock2');\nd.groupMat2Model({'Mat1Group','Mat2Group'});\n%------------------------end start mix material------------------------\nd.balanceBondedModel0(1);\nmfs.reduceGravity(d,10);%reduce the gravity of element\nd.balanceBondedModel0(1);\nd.balance('Standard',5);\nd.status.dispEnergy();%display the energy of the model\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxMixMat2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxMixMat3.m<pre><code>clear;\nload('TempModel/BoxMixMat2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\nd.mo.isHeat=1;%calculate heat in the model\nd.mo.isCrack=1;%record cracking process\ngpuStatus=d.mo.setGPU('auto');\nd.setStandarddT();%set standard dT\n\nmat2Id=d.GROUP.Mat2Group;\ntotalCircle=2;\nstepNum=10;%see the teaching video and to increase the stepNum\nelementExpandRate=0.01;%material 2 will be expanded by 1%\naR0=d.mo.aR;\ndaR=(aR0*elementExpandRate)/totalCircle/stepNum;\n\nd.tic(totalCircle*stepNum);\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    for j=1:stepNum\n        d.toc();%show the note of time\n        d.mo.aR(mat2Id)=d.mo.aR(mat2Id)+daR(mat2Id);\n        d.mo.setNearbyBall();\n        d.mo.zeroBalance();\n        d.balance('Standard',1);\n    end\n    d.clearData(1);%clear data in d.mo\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\nend\n\nd.show('Crack','aMatId');\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxMixMat3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/Pile/","title":"Pile","text":"Step 1Step 2Step 3 user_BoxPile1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='BoxPile';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.1;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.25;%define distribution of ball radius, \nB.sampleW=20;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=20;\nB.BexpandRate=4;%boundary is 4-ball wider than \nB.PexpandRate=0;\nB.type='topPlaten';%add a top platen to compact model\nB.isSample=1;\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\nd.mo.aR=d.aR;\n%--------------end initial model------------\n\n%---------- gravity sedimentation\nB.gravitySediment();%you may use B.gravitySediment(10); to increase sedimentation time (10)\nd.mo.aMUp(:)=0;\n%B.compactSample(2);%input is compaction time\n%mfs.reduceGravity(d,1);%reduce the gravity of element\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxPile1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_BoxPile2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxPile1.mat');\nB.setUIoutput();%set the output\nd=B.d;\nd.mo.setGPU('off');%close the GPU calculation\nd.calculateData();%calculate data\nd.getModel();%get xyz from d.mo\nd.showB=2;\n%---------------delele elements on the top\nmZ=d.mo.aZ(1:d.mNum);%get the Z of elements\ntopLayerFilter=mZ&gt;max(mZ)*0.7;\nd.delElement(find(topLayerFilter));%delete elements according to id\n\n%--------------assign new material\nmatTxt=load('Mats\\soil1.txt');%load material file\nMats{1,1}=material('Soil1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\StrongRock.txt');\nMats{2,1}=material('StrongRock',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;%assign new material\nd.groupMat2Model({'sample'},1);%apply the new material\n\n%---------create a pile struct, pile.X .Y .Z. R\npileW=0.8;pileL=0;pileH=8;ballR=B.ballR;Rrate=0.7;\nsampleId=d.GROUP.sample;%get the Id of sample\ndrivingDis=6;\nsampleTop=max(d.mo.aZ(sampleId)+d.mo.aR(sampleId));%get the top side of sample\n\npile1=mfs.denseModel(0.8,@mfs.makeBox,pileW,pileL,pileH,ballR);%make a pile struct\npile1.Y(:)=0;%in a 2D model Y=0\n\n%pile1.X=pile1.X+3.2;\n%pile1.X=pile1.X+B.sampleW-pileH/2;pile1.Z=pile1.Z+B.sampleW/2;\npileId1=d.addElement('StrongRock',pile1);%mat Id, obj\nd.addGroup('Pile1',pileId1);%add a new group\nd.setClump('Pile1');%set the pile clump\n\nd.moveGroup('Pile1',(B.sampleW-pileW)/2,0,sampleTop-drivingDis);%move the group\nd.minusGroup('sample','Pile1',0.4);%remove overlap elements from sample\n\nd.addFixId('X',d.GROUP.Pile1);%fix the X-coordinate of the pile\n\npile2=mfs.denseModel(0.5,@mfs.makeBox,pileH,pileL,pileW,ballR);%make a pile struct\npile2.Y(:)=0;%in a 2D model Y=0\npile2.X=pile2.X+B.sampleW-pileH/2;pile2.Z=pile2.Z+B.sampleW/2;\npileId2=d.addElement('StrongRock',pile2,'wall');%mat Id, obj\n%fs.showObj(pile1);%show the new pile object\nd.addGroup('Pile2',pileId2);%add a new group\nd.setClump('Pile2');%set the pile clump\nd.moveGroup('Pile2',1,0,2);%move the group\nd.rotateGroup('Pile2','XZ',30);\nd.minusGroup('sample','Pile2',0.5);%remove overlap elements from sample\n\nd.removeGroupForce(d.GROUP.Pile2,d.GROUP.rigB);%remove force between Pile2 and right boundary\nd.delElement(d.GROUP.topB);%delete top boundary\nd.mo.bFilter(:)=false;%break all bonds\nd.mo.zeroBalance();\nd.resetStatus();\nd.mo.setGPU('auto');\n\nd.balance('Standard',4);%balance the force and energy in the model\n%d.show('StessZZ');return;\nd.connectGroup('sample');%connect all bonds\nd.connectGroup('sample','Pile1');%connect soil and pile\nd.mo.zeroBalance();\n%d.balance('Standard',2);%balance the force and energy in the model\n\n%------------record data\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data in d\nd.recordCalHour('BoxPile2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxPile3.m<pre><code>clear;\nload('TempModel/BoxPile2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\n%initializing\nd.getModel();%d.setModel();%reset the initial status of the model\nd.status=modelStatus(d);%initialize model status, which records running information, same to d.resetStatus()\n\nd.mo.bFilter(:)=0;%break all bonds, no tensile force, same to d.breakGroup();\nd.mo.isHeat=1;%calculate heat in the model\nd.mo.setGPU('auto');\nd.setStandarddT();\npile1Id=d.GROUP.Pile1;%get the Id of pile 1\npile1Z=d.mo.aZ(pile1Id);\ntopPileId=pile1Id(pile1Z&gt;max(pile1Z)-B.ballR*0.1);%get the Id of pile top\nd.addGroup('topPile',topPileId);%add a new group\nd.addFixId('Z',d.GROUP.topPile);%fix the X-coordinate of the pile top\n\ntotalCircle=20;\nstepNum=100;\ndis=1;%total distance\ndDis=dis/totalCircle/stepNum;%distance of each step\nd.tic(totalCircle*stepNum);\n%.mat files will be saved in the folder data/step\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\n\nfor i=1:totalCircle\n    for j=1:stepNum\n        d.toc();%show the note of time\n        d.moveGroup('topPile',0,0,dDis);\n        d.balance('Standard',0.01);%\n        %d.balance('Standard',1); is d.balance(50,d.SET.packNum);\n    end\n    d.clearData(1);%clear data in d.mo\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxPile3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/SlopeNet/","title":"SlopeNet","text":"Step 1Step 2Step 3 user_BoxSlopeNet1.m<pre><code>%make a box model, which will be put on a slope\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='BoxSlopeNet';\nB.GPUstatus='auto';\nB.ballR=0.05;\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=1;\nB.sampleL=1;\nB.sampleH=1.2;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='GeneralSlope';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(2);%input is compaction time\nmfs.reduceGravity(d,10);%reduce the gravity of element\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.show('aR');\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_BoxSlopeNet2.m<pre><code>%step1: packing the elements\nclear;\nload('TempModel/BoxSlopeNet1.mat');\nB.d.mo.setGPU('off');\npackBallR=B.ballR;%record the ballR of the small box block\npackBoxObj=B.d.group2Obj('sample');%make struct object from a group\npackBoxObj=mfs.moveObj2Origin(packBoxObj);\nsphereObj=mfs.cutSphereObj(packBoxObj,B.sampleW/2-B.ballR);\nsphereObj2=mfs.cutSphereObj(packBoxObj,B.sampleW/3-B.ballR);\nboxObj=mfs.cutBoxObj(packBoxObj,B.sampleW/2,B.sampleW/2.5,B.sampleW/3);\n\n%make a big box for the simulation\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='BoxSlopeNet';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=packBallR;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=7;%width, length, height, average radius\nB.sampleL=4;%when L is zero, it is a 2-dimensional model\nB.sampleH=4;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=0;\nB.type='botPlaten';%add a top platen to compact model\nB.isSample=0;\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();\nd=B.d;\nd.mo.setGPU('off');\nd.showB=3;\ncellW=B.sampleL/10;\ncellH=B.sampleL/10;\nnetObj=mfs.denseModel(0.8,@mfs.makeNet,B.sampleL,B.sampleL/3,cellW,cellH,B.ballR);\nfs.showObj(netObj);\nnetId=d.addElement(1,netObj);%add a slope boundary\nd.addGroup('net',netId);%add a new group\nd.rotateGroup('net','XY',90,0,0,0);%rotate the group along XZ plane\nd.rotateGroup('net','XZ',180);%rotate the group along XZ plane\n%@@@@@@@@@@@@@@@@@add dZ here \nd.moveGroup('net',B.sampleW*0.8,0,0);\nd.setClump('net');\n%find the boundary of the net and fix them\nnetX=d.mo.aX(netId);netY=d.mo.aY(netId);netZ=d.mo.aZ(netId);\nyFilter=(netY==min(netY)|netY==max(netY));\nzFilter=(netZ==min(netZ));\nnetBoundaryFilter=yFilter|zFilter;\nboundaryNetId=netId(netBoundaryFilter);\nd.addFixId('X',boundaryNetId);%fix the X-coordinate\nd.addFixId('Y',boundaryNetId);\nd.addFixId('Z',boundaryNetId);\n\n%d.show('aR');return;\nslopeW=6;slopeL=B.sampleL;slopeH=B.ballR;\nslope=mfs.denseModel(0.6,@mfs.makeBox,slopeW,slopeL,slopeH,B.ballR);%make a pile struct\nslopeId=d.addElement(1,slope,'boundary');%add a slope boundary\nd.addGroup('slope',slopeId);%add a new group\nrotateX=max(d.aX(d.GROUP.slope));rotateZ=max(d.aZ(d.GROUP.slope));\nd.rotateGroup('slope','XZ',-30,rotateX,0,rotateZ);%rotate the group along XZ plane\nd.moveGroup('slope',-min(d.aX(d.GROUP.slope)),0,-min(d.aZ(d.GROUP.slope)));%move the slope\n\n% slopeW=6/4;slopeL=B.sampleL;slopeH=B.ballR;\n% slope=mfs.denseModel(0.6,@mfs.makeBox,slopeW,slopeL,slopeH,B.ballR);%make a pile struct\n% slopeId=d.addElement(1,slope,'boundary');%add a slope boundary\n% d.addGroup('step',slopeId);%add a new group\n% rotateX=max(d.aX(d.GROUP.slope));rotateZ=max(d.aZ(d.GROUP.slope));\n% d.moveGroup('step',B.sampleW*0.4/2,0,B.sampleH*0.8/2);%move the slope\n\n%import the packed box (from step 1) on the top left side of the model\nsphereObjId=d.addElement(1,sphereObj);%add regular model elements (not boundary)\nd.addGroup('sphere',sphereObjId);%add a new group\nd.moveGroup('sphere',B.sampleW/8,B.sampleL*1/2,B.sampleH*3.05/4);\nd.setClump('sphere');\n\nsphereObjId=d.addElement(1,sphereObj2);%add regular model elements (not boundary)\nd.addGroup('sphere2',sphereObjId);%add a new group\nd.moveGroup('sphere2',B.sampleW*1.7/8,B.sampleL*1.38/4,B.sampleH*3.05/4);\nd.setClump('sphere2');\n\nboxObjId=d.addElement(1,boxObj);%add regular model elements (not boundary)\nd.addGroup('box',boxObjId);%add a new group\n%d.rotateGroup('box','XZ',10);\nd.moveGroup('box',B.sampleW/8,B.sampleL*1/4,B.sampleH*2.84/4);\nd.setClump('box');\n\nd.delElement('botPlaten');%remove bottom platen\nd.show('StressZZ');\n%------------record data\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data in d\nd.recordCalHour('BoxSlopeNet2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxSlopeNet3.m<pre><code>clear;\nload('TempModel/BoxSlopeNet2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%d.setModel();%reset the initial status of the model\nd.status=modelStatus(d);%initialize model status, which records running information\n\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=0.0001;\nd.mo.mVis=d.mo.mVis*visRate;%use low viscosity for dynamic simulation\nd.mo.setGPU('auto');\nd.setStandarddT();\n%d.mo.isShear=0;\ntotalCircle=20;\nd.tic(totalCircle);\n%.mat files will be saved in the folder data/step\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    d.balance(50,d.SET.packNum*1.5);\n    d.clearData(1);%clear data in d.mo\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.toc();%show the note of time\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxSlope3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/SoilCrackNew/","title":"SoilCrackNew","text":"Step 1Step 2 user_L2SoilCrackNew1.m<pre><code>%the example shows how to build a model without the Obj_Box\n%build the geometrical model\nclear;\n%------------------initializing parameters\nfs.randSeed(1);%build random model\ndiameter=0.001;\nxyNumber=20;\nzNumber=6;\nmodelW=xyNumber*diameter;%width, length and thickness of model\nmodelL=xyNumber*diameter;\nmodelT=zNumber*diameter;\nelementR=diameter/2;%ball radius\n%------------------end initializing parameters\n\n%------------------build initial model\nd=build();%make a build object\nd.setUIoutput();\nd.g=-9.8;%gravitational acceleration\nd.name='SoilCrack';%the name of the simulation\nclay=material('clay');%define a new material\nclay.setMaterial(3e5,0.18,1e3,1e3,0.7,diameter,1800);%set the E,v,Tu,Cu,Mui, it is not trained\nd.addMaterial(clay);%add the material to the model\nMo=fs.setBlock(modelW,modelL,modelT,elementR);\nBo=fs.setBoundary(Mo.X,Mo.Y,Mo.Z,Mo.R,'model',[1.2,1.2,1.2,1.2,0.5,0]);%set top- and bottom boundaries\nMo.X=Bo.mX;Mo.Y=Bo.mY;Mo.Z=Bo.mZ;Mo.R=Bo.mR;\nd.bIndex=Bo.bIndex;\n%initialize the coordinates of boundary balls and radius\nd.aX=[Mo.X;Bo.X];d.aY=[Mo.Y;Bo.Y];d.aZ=[Mo.Z;Bo.Z];\nd.aR=[Mo.R;Bo.R];\nd.vRate=Mo.vRate;%optimized viscisity rate\nd.aNum=length(d.aR);d.mNum=length(Mo.R);\nd.aMatId=ones(size(d.aR))*clay.Id;\n\nd.setBuild();%set the data in build object, i.e. d\nd.setModel();%set the data in model object, i.e. d.mo\nd.mo.isHeat=1;%calculation of heat\nd.mo.isCrack=1;%record crack information\n%------------------end build initial model\n\nd.mo.setGPU('auto');\nd.balance('Standard',0.5);\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('SoilCrack1Finish');\nsave(['TempModel/' d.name '1.mat'],'d');\nd.calculateData();\nd.show();\n</code></pre> user_L2SoilCrackNew2.m<pre><code>clear\nload('TempModel/SoilCrack1.mat','d');\nnormFactor=1;%all element has the same properties when normFactor is 0\nd.calculateData();\nd.mo.setGPU('off');\nd.setUIoutput();\nfs.randSeed(1);%determine \n\ninitialWC=0.5;%initial water content is 50%\nd.mo.SET.aWC=ones(d.aNum,1)*initialWC;\nd.mo.SET.mWater=d.mo.mM.*d.mo.SET.aWC(1:d.mNum);\nd.mo.SET.aWC(d.mNum+1:d.aNum)=-1;%-1 indicates isulated boundary\nnormDistri=fs.getDistribution('norm',d.aNum,normFactor);\nd.mo.aBF=d.mo.aBF.*normDistri;%cracking is mainly influenced by normal breaking force\nfs.mixProperty(d,'aBF');%value of d.aBF of element is influenced by element neighbors\n\nd.mo.dT=d.mo.dT*4;%increase the speed of calculation\n\ntotalCircle=10;\nstepNum=10;%see the teaching video and to increase the stepNum\nd.tic(totalCircle*stepNum);\nfName=['data/step/' d.name 'loopNum'];\nsave([fName '0.mat']);\nfs.disp('Start calculation');\nfor i=1:totalCircle\n    for j=1:stepNum\n        d.toc();%show the note of time\n        %---------------1. determine the surface of the model\n        cbFilter=d.mo.cFilter|d.mo.bFilter;\n        mConnectNum=sum(cbFilter,2);\n        %when connection number of an element is &lt;= 10, it is a surface\n        %element\n        mSurfaceFilter=(mConnectNum&lt;=10);%this limit must be lower than 12, it can be 11 or 10\n        %-----2. calculate new water content of surface elements\n        d.mo.SET.aWC(mSurfaceFilter)=d.mo.SET.aWC(mSurfaceFilter)*0.999;%water content of surface element reduces\n        d.mo.SET.mWater=d.mo.mM.*d.mo.SET.aWC(1:d.mNum);\n\n        %-----3. update element radius and properties according to water content\n        d.mo.aR(1:d.mNum)=d.aR(1:d.mNum).*(1-0.1*(initialWC-d.mo.SET.aWC(1:d.mNum))/initialWC);%describe how radius varies with water content\n        %d.mo.setNearbyBall();%if elements are expanded, the command is required\n        %here, you may modify other properties of elements when aWC changed\n        d.mo.balance();%calculation\n\n        %-----4. calculate the water content difference, nWaterDiff\n        nRow=ones(1,size(d.mo.nBall,2));%a row whose width is the same as nBall  \n        nWaterDiff=d.mo.SET.aWC(d.mo.nBall)-d.mo.SET.aWC(1:d.mNum)*nRow;%difference of water content bewteen elements and neighbors\n        nWaterDiff(~cbFilter)=0;%if elements are not connected, water differences are zero\n        nWC=d.mo.SET.aWC(d.mo.nBall);%water content of neighboring elements\n        nWaterDiff(nWC==-1)=0;%boundary is isulated, water content differences also are zero\n        %-----5. water migation\n        nK=0.00000002;%because all elements have the same size, a uniform K is used, in case of different element radius, K will be a matrix (like nBall)\n        nWaterFlow=nWaterDiff.*nK;%similar to darcy flow\n        mWaterFlow=sum(nWaterFlow,2);%variation of water flow\n        d.mo.SET.mWater=d.mo.SET.mWater+mWaterFlow;%new water mass of element\n        d.mo.SET.aWC(1:d.mNum)=d.mo.SET.mWater./d.mo.mM;%calculate water content\n\n        d.recordStatus();\n    end\n    %clear and save data\n    d.clearData(1);\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\nend\n\nfs.disp('Calculation finished');\nd.showB=2;\nd.show('SETaWC');%show the data in d.mo.SET.aWC\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('SoilCrack2Finish');\nsave(['TempModel/' d.name '-normFactor' num2str(normFactor) '-2.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/TBMCutter/","title":"TBMCutter","text":"Step 1Step 2Step 3 user_BoxTBMCutter1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='BoxTBMCutter';\nB.GPUstatus='auto';\n%--------------initial model------------\nB.ballR=0.02;\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=1.2;\nB.sampleL=0.6;\nB.sampleH=0.6;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='topPlaten';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(2);%iput is compaction time\nmfs.reduceGravity(d,10);\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxTBMCutter1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.showFilter('Group','sample','aR');\n</code></pre> user_BoxTBMCutter2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxTBMCutter1.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();%calculate data after loading the .mat file\nd.mo.setGPU('off');%close the GPU before handling the model\nd.getModel();%get X,Y,Z,R.. from d.mo\n\n%------------------remove top elements\nmZ=d.mo.aZ(1:d.mNum);\ntopLayerFilter=mZ&gt;max(mZ)*0.5;\nd.delElement(find(topLayerFilter));\n\n%--------------set material, define strong and weak rock\nmatTxt=load('Mats\\StrongRock.txt');\nMats{1,1}=material('StrongRock',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\WeakRock.txt');\nMats{2,1}=material('WeakRock',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;%assign the material to the model\n\n%set different layers with different mechanical properties\ndipD=90;dipA=60;strongT=0.1;weakT=0.1;%dipD: dip direction of layer; dipA: dip angle of layer\nweakFilter=mfs.getWeakLayerFilter(d.mo.aX,d.mo.aY,d.mo.aZ,dipD,dipA,strongT,weakT);%make weak layer filter of the box model\nsampleId=d.getGroupId('sample');\naWFilter=false(size(weakFilter));\naWFilter(sampleId)=true;\nsampleWfilter=aWFilter&amp;weakFilter;\nd.addGroup('WeakLayer',find(sampleWfilter));%define a WeakLayer group\n\n%B.setPlatenFixId();\nd.setGroupMat('WeakLayer','WeakRock');%material of WeakLayer group is WeakRock\nd.groupMat2Model({'WeakLayer'},1);%assign material to WeakLayer group, material Id of other elements is 1\n%d.show('StressZZ');view(5,5);\n\n%create a hob, define the size of a hob\nhobR=0.2;hobT=0.1;ballR=B.ballR;Rrate=0.7;cutRate=1;\nhob=mfs.makeHob(hobR,hobT,cutRate,ballR,Rrate);\n%fs.showObj(hob);%show the hob\nhob=mfs.rotate(hob,'YZ',90);\n\n%change the hob object to a build object to get nearby ball matrix\nhobd=mfs.Obj2Build(hob);\naCN=sum(hobd.mo.nBall~=hobd.aNum,2);\naCN=[aCN;0];\nCNFilter=aCN&lt;mean(aCN)*0.88;\nhobd.showFilter('Filter',CNFilter);\n%hobd.showFilter('SlideZ',0,0.3);\nmFilter=hobd.data.showFilter(1:hobd.mNum);\nhob=mfs.filterObj(hob,mFilter);%make new object\n\n%add a central ball to record the coordinates\nhob.X=[hob.X;(max(hob.X)+min(hob.X))/2];\nhob.Y=[hob.Y;(max(hob.Y)+min(hob.Y))/2];\nhob.Z=[hob.Z;(max(hob.Z)+min(hob.Z))/2];\nhob.R=[hob.R;mean(hob.R)];\n\n%fs.showObj(hob);\n%-------------add the hob to the model\nhobId=d.addElement(1,hob);%mat Id, obj\nd.addGroup('Hob',hobId);\nsampleId=d.GROUP.sample;\nd.moveGroup('Hob',hobR,(max(d.aY(sampleId))+min(d.aY(sampleId)))/2,0);\nhobBot=min(d.mo.aZ(hobId)-d.mo.aR(hobId));\nsampleTop=max(d.mo.aZ(sampleId)+d.mo.aR(sampleId));\nd.moveGroup('Hob',0,0,sampleTop-hobBot);\nd.setClump('Hob');%define the hob as a clump\nd.removeGroupForce(d.GROUP.Hob,[d.GROUP.topB;d.GROUP.rigB]);%not force between hob and boundaries\n\nd.mo.isFix=1;\nd.addFixId('X',hobId);%fix the X-coordinate of the hob\nd.addFixId('Y',hobId);%fix the Y-coordinate of the hob\nd.mo.zeroBalance();\n%d.show('StressZZ');return;\nd.balanceBondedModel0();%setGPU Auto\nd.mo.bFilter(:)=0;\nd.balance('Standard');%==d.balance(50,d.SET.packNum);\n%d.balanceBondedModel();%bonded all elements and balance the model with element friction\nd.balanceBondedModel0();%bonded all elements and balance the model without element friction\nd.addFixId('Z',hobId);%fix the Y-coordinate of the hob\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxTBMCutter2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('ZDisplacement');\n</code></pre> user_BoxTBMCutter3.m<pre><code>clear;\nload('TempModel/BoxTBMCutter2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\n%initializing\nd.getModel();%d.setModel();%reset the initial status of the model\nd.mo.mVX(:)=0;d.mo.mVY(:)=0;d.mo.mVZ(:)=0;\nd.status=modelStatus(d);%initialize model status, which records running information\n\n\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=0.00001;\nd.mo.mVis=d.mo.mVis*visRate;\nd.setStandarddT();%set standard step time\n\n%--------------define the interation\ntotalCircle=20;stepNum=100;\nbalanceNum=5;%you may use greater stepNum and balanceNum\ndisp(['Total real time is ' num2str(d.mo.dT*totalCircle*stepNum*balanceNum)]);\nd.tic(totalCircle*stepNum);\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\n\n%define the movement of the hob\nsampleX=d.mo.aX(d.GROUP.sample);\nhobX=d.mo.aX(d.GROUP.Hob);\nhobR=(max(hobX)-min(hobX))/2+B.ballR*2;\ndis=(max(sampleX)-min(sampleX))-hobR*2;\nDis=[1,0,-0.1]*dis;\ndDis=Dis/(totalCircle*stepNum);\ndDis_L=sqrt(sum(dDis.^2));\ndAngle=dDis_L/hobR*180/pi;\n\n%d.show('Displacement');return;\nd.mo.bFilter(:)=1;%bond all elements\nd.mo.zeroBalance();\nsave([fName '0.mat']);%return;\ngpuStatus=d.mo.setGPU('auto');\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    for j=1:stepNum\n        d.moveGroup('Hob',dDis(1),dDis(2),dDis(3));\n        hobId=d.GROUP.Hob;%rotate the hob along its center (last element)\n        hobCx=gather(d.mo.aX(hobId(end)));\n        hobCy=gather(d.mo.aY(hobId(end)));\n        hobCz=gather(d.mo.aZ(hobId(end)));\n        d.rotateGroup('Hob','XZ',-dAngle,hobCx,hobCy,hobCz);\n        d.balance(balanceNum);\n        d.recordStatus();\n        d.toc();%show the note of time\n    end\n    d.clearData(1);%clear data before saving\n    save([fName num2str(i) '.mat']);\n    d.calculateData();%calculate the data for further calculation\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxTBMCutter3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2018/Tunnel/","title":"Tunnel","text":"Step 1Step 2Step 3 user_BoxTunnel1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='BoxTunnel';\nB.GPUstatus='auto';\nwidth=50;length=0;height=50;ballR=0.5;%width, length, height, radius\ndistriRate=0.2;%define distribution of ball radius, \nisClump=0;\n%--------------initial model------------\nB.ballR=ballR;\nB.isClump=isClump;\nB.distriRate=distriRate;\nB.sampleW=width;\nB.sampleL=length;\nB.sampleH=height;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='topPlaten';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\n\nd=B.d;\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(6);%input is compaction time\n%------------return and save result--------------\nmfs.reduceGravity(d,5);\nd.balance('Standard');\nd.status.dispEnergy();%display the energy of the model\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxTunnel1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_BoxTunnel2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxTunnel1.mat');\n%------------initialize model-------------------\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n%------------end initialize model-------------------\n\n%-------------set new material----------------\nmatTxt=load('Mats\\StrongRock.txt');\nMats{1,1}=material('StrongRock',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\nd.groupMat2Model({'sample'},1);\n%-------------end set new material----------------\n\n%-------------------apply stress, and balance model------------------\nB.SET.stressZZ=-10e6;\nB.setPlatenFixId();\nd.resetStatus();\nB.setPlatenStress('StressZZ',B.SET.stressZZ,B.ballR*5);\n\nd.balanceBondedModel0(4);\nd.mo.dT=d.mo.dT*4;%increase the dT to increase the speed of balance\nd.balance('Standard');\nd.mo.dT=d.mo.dT/4;\n%-------------------end apply stress, and balance model------------------\n\n%--------------------make tunnel-----------------------\nsampleId=d.getGroupId('sample');\nsX=d.mo.aX(sampleId);sY=d.mo.aY(sampleId);sZ=d.mo.aZ(sampleId);\ndipD=0;dipA=90;radius=4;height=30;\nmX=d.mo.aX(1:d.mNum);mY=d.mo.aY(1:d.mNum);mZ=d.mo.aZ(1:d.mNum);\ncolumnFilter=mfs.getColumnFilter(sX,sY,sZ,dipD,dipA,radius,height);\nd.addGroup('Tunnel',find(columnFilter));\ntunnelId=d.getGroupId('Tunnel');\nd.delElement(tunnelId);\n%--------------------end make tunnel-----------------------\n\n\n%--------------------save data-----------------------\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxTunnel2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n%--------------------end save data-----------------------\n\nd.calculateData();\nd.show('ZDisplacement');\n</code></pre> user_BoxTunnel3.m<pre><code>%-------------------user_mxSlope3.m;\nclear;\nload('TempModel/BoxTunnel2.mat');\nB.setUIoutput();\n%------------initialize model-------------------\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.mo.bFilter(:)=true;\nd.deleteConnection('boundary');\nd.mo.zeroBalance();\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();\nd.mo.isHeat=1;%calculate heat in the model\nd.setStandarddT();\nd.mo.isCrack=1;\n%------------end initialize model-------------------\n\n%--------------------apply initial stress-----------------------\nfs.setPlatenStress(d,0,0,B.SET.stressZZ,B.ballR*5);\nd.mo.setGPU('auto');\nd.balance('Standard',1);%standard balance\n\n%--------------------end apply initial stress-----------------------\n\ntotalCircle=5;\nd.tic(totalCircle);%record the initial time of loop\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\ngpuStatus=d.mo.setGPU('auto');\nfor i=1:totalCircle\n    fs.setPlatenStress(d,0,0,-20e6*i,B.ballR*5);\n    d.mo.zeroBalance();\n    d.balance('Standard',1);%standard balance\n    d.clearData(1);\n    d.mo.setGPU('off');\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.mo.setGPU(gpuStatus);\n    d.toc();%show the note of time;\nend\nd.tic(totalCircle);\nfor i=totalCircle+1:totalCircle*2\n    d.balance('Standard',0.5);%standard balance\n    d.clearData(1);\n    d.mo.setGPU('off');\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.mo.setGPU(gpuStatus);\n    d.toc();%show the note of time;\nend\nd.recordCalHour('BoxTunnel3Finish');\nd.mo.setGPU('off');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.show('aR');\n</code></pre>"},{"location":"examples/examples2018/TunnelHeat/","title":"TunnelHeat","text":"Step 1Step 2Step 3 user_L2TunnelHeat1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='BoxTunnelHeat';\nB.GPUstatus='auto';\nballR=0.1;%width, length, height, radius\ndistriRate=0.2;%define distribution of ball radius, \nisClump=0;\n%--------------initial model------------\nB.isUI=0;%when run the code in UI_command, isUI=1\nB.ballR=ballR;\nB.isClump=isClump;\nB.distriRate=distriRate;\nB.sampleW=5;\nB.sampleL=5;\nB.sampleH=5;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='topPlaten';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\n\nd=B.d;\n%d.show('aR');return;\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(1);%input is compaction time\n%------------return and save result--------------\nmfs.reduceGravity(d,5);\nd.balance('Standard');\nd.status.dispEnergy();%display the energy of the model\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxTunnelHeat1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_L2TunnelHeat2.m<pre><code>clear\nload('TempModel/BoxTunnelHeat1.mat');\n%------------initialize model-------------------\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n%------------end initialize model-------------------\n\n%---------------delele elements on the top\nmZ=d.mo.aZ(1:d.mNum);%get the Z of elements\ntopLayerFilter=mZ&gt;max(mZ)*0.9;\nd.delElement(find(topLayerFilter));%delete elements according to id\n\n%-------------set new material----------------\nmatTxt=load('Mats\\StrongRock.txt');\nMats{1,1}=material('StrongRock',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\nd.groupMat2Model({'sample'},1);\n%-------------end set new material----------------\n\n%-----------------make pipe--------------------\nmX=d.mo.aX(1:d.mNum);mY=d.mo.aY(1:d.mNum);mZ=d.mo.aZ(1:d.mNum);mR=d.mo.aR(1:d.mNum);\ninnerR=0.2;\nlayerNum=2;\nminBallR=min(mR)*0.9;\nRrate=1;\nringObj=f.run('fun/makeRing.m',innerR,layerNum,minBallR,Rrate);\ntubeL=4;\ndZ=minBallR*sqrt(3)/2;\nringNum=(tubeL-minBallR)/dZ+1;\nringZ=(1:ringNum)*dZ;\ndAngle=180/(length(ringObj.R)/layerNum);\ntubeObj=ringObj;\nfor i=1:ringNum-1\n    newObj=mfs.rotate(ringObj,'XY',dAngle*i);\n    newObj=mfs.move(newObj,0,0,dZ*i);\n    tubeObj=mfs.combineObj(tubeObj,newObj);\nend\nouterR=(max(tubeObj.X)-min(tubeObj.X))/2;\n%-----------------end make tube--------------------\n\n%--------------------make tunnel-----------------------\nsampleId=d.getGroupId('sample');\nsX=d.mo.aX(sampleId);sY=d.mo.aY(sampleId);sZ=d.mo.aZ(sampleId);\ndipD=0;dipA=0;radius=outerR;height=5;\ncolumnFilter=f.run('fun/getColumnFilter.m',sX,sY,sZ,dipD,dipA,radius+B.ballR,height);\nzFilter=sZ&gt;1;\ntunnelId=find(columnFilter&amp;zFilter);\nd.delElement(tunnelId);\n%--------------------end make tunnel-----------------------\n\n%-------------------insert the ringTube-------------------\ntubeId=d.addElement(1,tubeObj);%add a slope boundary\nd.addGroup('ringTube',tubeId);%add a new group\nd.setClump('ringTube');%set the pile clump\nd.moveGroup('ringTube',(max(mX)+min(mX))/2,(max(mY)+min(mY))/2,1);\nd.minusGroup('sample','ringTube',0.4);%remove overlap elements from sample\ninnerTubeId=find(d.mo.aR==minBallR);\nd.addGroup('innerTube',innerTubeId);%add a new group\n%-------------------end insert the ringTube-------------------\n\nd.addFixId('X', d.GROUP.ringTube);%fix the coordinates of elements of the pile\nd.addFixId('Y', d.GROUP.ringTube);\nd.addFixId('Z', d.GROUP.ringTube);\nd.balanceBondedModel0();%bond the elements and balance the model\nd.breakGroup();%break all connections\nd.balance('Standard');%balance the model before saving\n\nd.show();\n%--------------------save data-----------------------\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxTunnelHeat2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n%--------------------end save data-----------------------\n\nd.calculateData();\nd.show('ZDisplacement');\n</code></pre> user_L2TunnelHeat3.m<pre><code>%note: this is an example to show thermomechanical coupling\n%it is not completed, specified heat must considered in real applications\n%Chun Liu, Nanjing University\n%-------------------user_mxSlope3.m;\nclear;\nload('TempModel/BoxTunnelHeat2.mat');\nB.setUIoutput();\n%------------initialize model-------------------\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();\nd.mo.isHeat=1;%calculate heat in the model\nd.setStandarddT();\nd.mo.isCrack=1;\n%------------end initialize model-------------------\n%d.show();return;\n\n%--------------------set block force--------------------\ninnerTubeId=d.GROUP.innerTube;\nd.mo.SET.aT=ones(d.aNum,1)*15;%initial temperature is 15 degrees\ninitialT=d.mo.SET.aT(1:d.mNum);%record the initial temperatures\ninnerTubeT=25;\nd.mo.SET.aT(d.mNum+1:d.aNum)=-1000;%boundary is insulated\nmdR0=zeros(d.mNum,1);%deviation of radius of active elements\n%--------------------end set block force--------------------\n\ntotalCircle=10;\nstepNum=20;\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\ngpuStatus=d.mo.setGPU('auto');\nd.tic(totalCircle);%record the initial time of loop\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    for j=1:stepNum\n        %-----1. calculate the temperature difference, nTempDiff\n        d.mo.SET.aT(innerTubeId)=innerTubeT;%assign temperture to innerTube group\n        nRow=ones(1,size(d.mo.nBall,2));\n        NBall=gather(d.mo.nBall);\n        nTempDiff=d.mo.SET.aT(NBall)-d.mo.SET.aT(1:d.mNum)*nRow;%difference of water content bewteen elements and neighbors\n\n        %-----2. heat conduction\n        nThermalC=0.02;%Coefficient of thermal conductivity\n        cbFilter=gather(d.mo.cFilter|d.mo.bFilter);%define the contact filter\n        nBoundaryFilter=(d.mo.SET.aT(NBall)==-1000);%temperature of neighboring elements\n        inslatedFilter=(~cbFilter|nBoundaryFilter);\n        nTempFlow=nTempDiff.*nThermalC;%temperature various\n        nTempFlow(inslatedFilter)=0;        \n        mTempFlow=sum(nTempFlow,2);\n        d.mo.SET.aT(1:d.mNum)=d.mo.SET.aT(1:d.mNum)+mTempFlow;\n        %-----3. update element radius and properties according to temperature, i.e. aT\n        expandRate=0.001;%expanded by 0.1% when temperature increased by 1 degree\n        mdR1=gather(d.mo.aR(1:d.mNum).*(d.mo.SET.aT(1:d.mNum)-initialT)*expandRate);%describe how radius varies with T\n        d.mo.aR(1:d.mNum)=d.aR(1:d.mNum)+mdR1;\n        maxDis=gather(max(max(abs(d.mo.dis_mXYZ),[],2)+mdR1-mdR0));%transform data to CPU\n        if (maxDis&gt;0.5*d.mo.dSide)\n            fs.disp(['balanceTime' num2str(d.mo.totalT) '-&gt;expand-&gt;setNearbyBall']);\n            d.mo.setNearbyBall();\n            mdR0(:)=mdR1;\n        end\n        %here, you may modify other properties of elements when temperature changed\n        d.mo.balance();%calculation\n        d.recordStatus();\n    end\n    %clear and save data\n    d.clearData(1);\n    d.mo.setGPU('off');\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.toc();%show the note of time\nend\n\nd.recordCalHour('BoxTunnelHeat3Finish');\nd.mo.setGPU('off');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.show('aR');\n</code></pre>"},{"location":"examples/examples2018/TunnelNew/","title":"TunnelNew","text":"Step 1Step 2Step 3 user_BoxTunnelNew1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='BoxTunnelNew';\nB.GPUstatus='auto';\nwidth=50;length=0;height=50;ballR=0.2;%width, length, height, radius\ndistriRate=0.2;%define distribution of ball radius, \nisClump=0;\n%--------------initial model------------\nB.isUI=0;%when run the code in UI_command, isUI=1\nB.ballR=ballR;\nB.isClump=isClump;\nB.distriRate=distriRate;\nB.sampleW=width;\nB.sampleL=length;\nB.sampleH=height;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='topPlaten';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nd=B.d;\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(6);%input is compaction time\n%------------return and save result--------------\nmfs.reduceGravity(d,10);\nd.balance('Standard');\nd.status.dispEnergy();%display the energy of the model\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxTunnelNew1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_BoxTunnelNew2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxTunnelNew1.mat');\n%------------initialize model-------------------\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n%------------end initialize model-------------------\n\n%-------------set new material----------------\nmatTxt=load('Mats\\StrongRock.txt');\nMats{1,1}=material('StrongRock',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\nd.groupMat2Model({'sample'},1);\n%-------------end set new material----------------\n\n%-------------------apply stress, and balance model------------------\nB.SET.stressZZ=-10e6;\nB.setPlatenFixId();\nd.resetStatus();\nfs.setPlatenStress(d,0,0,B.SET.stressZZ,B.ballR*5);%apply no\n%-------------------end apply stress, and balance model------------------\n\n%--------------------make tunnel-----------------------\nsampleId=d.getGroupId('sample');\nsX=d.mo.aX(sampleId);sY=d.mo.aY(sampleId);sZ=d.mo.aZ(sampleId);\ndipD=0;dipA=90;radius=4;height=30;\nmX=d.mo.aX(1:d.mNum);mY=d.mo.aY(1:d.mNum);mZ=d.mo.aZ(1:d.mNum);mR=d.mo.aR(1:d.mNum);\ncolumnFilter=f.run('fun/getColumnFilter.m',sX,sY,sZ,dipD,dipA,radius+B.ballR,height);\nd.addGroup('Tunnel',find(columnFilter));\ntunnelId=d.getGroupId('Tunnel');\nd.delElement(tunnelId);\n%--------------------end make tunnel-----------------------\n\nB.name='BoxTunnelNew';\ninnerR=radius;\nlayerNum=3;\nminBallR=min(mR);\nRrate=0.8;\nringObj=f.run('fun/makeRing.m',innerR,layerNum,minBallR,Rrate);\nringObj=mfs.rotate(ringObj,'YZ',90);%rotate the group along XZ plane\n\nringId=d.addElement(1,ringObj);%add a slope boundary\nd.addGroup('ring',ringId);%add a new group\nd.setClump('ring');%set the pile clump\nd.moveGroup('ring',(max(mX)+min(mX))/2,0,(max(mZ)+min(mZ))/2);\nd.minusGroup('sample','ring',0.4);%remove overlap elements from sample\nd.breakGroup();\nB.gravitySediment();\nd.show();\n\n%--------------------save data-----------------------\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxTunnel2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n%--------------------end save data-----------------------\n\nd.calculateData();\nd.show('ZDisplacement');\n</code></pre> user_BoxTunnelNew3.m<pre><code>%-------------------user_mxSlope3.m;\nclear;\nload('TempModel/BoxTunnelNew2.mat');\nB.setUIoutput();\n%------------initialize model-------------------\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.mo.bFilter(:)=true;\nd.deleteConnection('boundary');\nd.mo.zeroBalance();\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();\nd.mo.isHeat=1;%calculate heat in the model\nd.setStandarddT();\nd.mo.isCrack=1;\n%------------end initialize model-------------------\n\n%--------------------apply initial stress-----------------------\nfs.setPlatenStress(d,0,0,B.SET.stressZZ,B.ballR*5);\nd.mo.setGPU('auto');\nd.balance('Standard',1);%standard balance\n\n%--------------------end apply initial stress-----------------------\n\n%--------------------set block force--------------------\ntp=d.GROUP.topPlaten;\nblockWidth=8;\ntpX=d.mo.aX(tp);\ntpXCenter=(max(tpX)+min(tpX))/2;\nblockFilter=tpX&gt;(tpXCenter-blockWidth/2)&amp;tpX&lt;(tpXCenter+blockWidth/2);\nblockId=tp(blockFilter);\nd.addGroup('block',blockId);\nblockForceZ=d.mo.mGZ(blockId);\n\n%--------------------end set block force--------------------\n\ntotalCircle=2;\nd.tic(totalCircle);%record the initial time of loop\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\ngpuStatus=d.mo.setGPU('auto');\nfor i=1:totalCircle\n    d.mo.mGZ(blockId)=d.mo.mGZ(blockId)+blockForceZ;\n    d.balance('Standard',1);%standard balance\n    d.clearData(1);\n    d.mo.setGPU('off');\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.mo.setGPU(gpuStatus);\n    d.toc();%show the note of time;\nend\n\nd.recordCalHour('BoxTunnel3Finish');\nd.mo.setGPU('off');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.show('aR');\n</code></pre>"},{"location":"examples/examples2018/TwoBalls/","title":"TwoBalls","text":"Step 1 user_TwoBalls.m<pre><code>%This\n%-----parameters-----\ndiameter=0.1;visRate=0.1;%Figure 1.3-2\n%diameter=20;visRate=0;%Figure 5.4-1\nr=diameter/2;%ball radius\nd=build();\nd.name='TwoBalls';\n%-----define struct data of model and boundary-----\nmoObj.X=[0;0];moObj.Y=[0;0];moObj.Z=diameter*[1;3];\nmoObj.R=r*[1;1];\nboObj.X=[0;0];boObj.Y=[0;0];boObj.Z=diameter*[0;4];\nboObj.R=r*[1;1];\n%-----define material-----\nballMat=material('ball');\nballMat.setMaterial(7e6,0.15,1.5e5,1e6,1,diameter,1500);\nd.addMaterial(ballMat);\n%-----initialize d-----\nd.aX=[moObj.X;boObj.X;boObj.X(end)];%add a virtual element\nd.aY=[moObj.Y;boObj.Y;boObj.Y(end)];\nd.aZ=[moObj.Z;boObj.Z;boObj.Z(end)];\nd.aR=[moObj.R;boObj.R;boObj.R(end)/4];\nd.vRate=visRate;%rate of viscosity (0-1)\nd.aNum=length(d.aR);d.mNum=length(moObj.R);\nd.aMatId=ones(size(d.aR))*ballMat.Id;\nd.g=-9.8;%gravity acceleration\nd.setBuild();\n%-----define boundary groups-----\nd.GROUP.lefB=[];d.GROUP.rigB=[];\nd.GROUP.froB=[];d.GROUP.bacB=[];\nd.GROUP.botB=3;d.GROUP.topB=4;\n%-----initialize d.mo-----\nd.setModel();\nd.mo.isHeat=1;\n%-----numerical simulation-----\nd.balance(1,800);\nd.showB=2;\nd.show();\n</code></pre>"},{"location":"examples/examples2018/UniaxialTest/","title":"UniaxialTest","text":"Step 1 user_BoxUniaxialTest.m<pre><code>clear\n%---------------step 1: make random model\nmatName='mxRock';\nmatFile='Mats\\mxRock.txt';%material file (.txt or material obj), [E,v,Tu,Cu,Mui],Mui is coefficient of intrinsic friction\nblockW=0.1;blockL=0.1;blockH=0.2;ballR=0.01;%width, length, height, radius\ndistriRate=0.25;%define distribution of ball radius,\nrandSeed=1;%change the seed to create a block with different element size\nrandPositionSeed=2;%change it to make a new packing\n\nsaveFileLevel=2;%2:save all files, 1:save important files, 0: save one result file, -1: do not save\nuniaxialStressRate=1;%default value is 1, generally do not have to change it\nStandardBalanceNum=50;%define the balance number of simulation, 1-50\n\nB=obj_Box;%build a box object\nB.GPUstatus='auto';\nB=mfs.makeUniaxialTestModel0(B,blockW,blockL,blockH,ballR,distriRate,randSeed);%build initial box model\nmfs.mixGroupElement(B.d,'sample',randPositionSeed);%mix elements in sample\n%B.d.show('aR');return;\n%---------------end step 1: make random model\n\n%---------------step 2: balance the random model\nB.name=matName;\nB.saveFileLevel=saveFileLevel;%save all related files\nB.SET.uniaxialStressRate=uniaxialStressRate;\nB.d.SET.StandardBalanceNum=StandardBalanceNum;\n%assign material to model\nB=mfs.makeUniaxialTestModel1(B);%sedimentation, data will be save in 'TempModel/boxUniaxial1.mat'\nmfs.makeUniaxialTestModel2(B,matFile);%set the material of the model\nB.d.balance('Standard',2);%two times of standard balance\nfs.save(['TempModel/' B.name '1.mat'],'B',B);%initial model\n%---------------end step 2: balance the random model\n\n%---------------step 3: make unaxial compressive (Cu), tensile (Tu) and\n%elastic tests (Young's modulus E and Poisson's ratio v)\nB.d.mo.isCrack=1;%record the cracking process\nB.d.SET.divNum=80;\nmfs.makeUniaxialTest(B);%data will be saved in the folders 'data' and 'data/step'\n%tested Cu, Tu, E and v will be recorded in B.d.Mats{1}.TAG.UniaxialTest\nfs.save(['data/' B.name '-divNum' num2str(B.d.SET.divNum) '-balanceRate' num2str(B.d.SET.balanceRate) '.mat'],'B',B);\n</code></pre>"},{"location":"examples/examples2018/makeGif/","title":"makeGif","text":"Step 1 user_makeGIF.m<pre><code>clear frames;\nindexBegin=0;%begin index of data file\nindexEnd=10;%end index of data file\nshowType='StressZZ';\nfor showCircle=(indexBegin:indexEnd)\nload([fName num2str(showCircle) '.mat']);%load the saved file\nd.calculateData();%calculate the data of the model\n%d.showFilter('SlideY',0.5,1);%cut the model if necessary\nd.showB=3;%show the frame\nd.isUI=0;\nd.show(showType);%show the result\n%view(10*showCircle,30);\nset(gcf,'Position',[10,10,1000,600]);%set the size of the figure\nframes(showCircle+(1-indexBegin))=getframe();%record the figure\npause(0.1);%pause 0.1 second\nclose;%close the figure\nend\ndTime=0.5;%time step of GIF\nfs.movie2gif([fName(11:end) showType '33.gif'],frames,dTime);%save the gif;\n</code></pre>"},{"location":"examples/examples2019/3DSlope/","title":"3DSlope","text":"Step 1Step 2Step 3Step 4Step 5 user_L3lpsXYZ2Surf.m<pre><code>%converting scattered XYZ data to digital elevation model, which can be\n%used to define a surface and to cut discrete element model\nclear;\nd1=load('slope/lps1.txt');%scattered XYZ data before sliding\nd2=load('slope/lps2.txt');%scattered XYZ data after sliding\ngSide=5;%side of grid\nbaseZ=1150;%the base level of the data\n\n%defined the coordinates of the digital elevation data\nX1=d1(:,1);Y1=d1(:,2);Z1=d1(:,3)-baseZ;\nX2=d2(:,1);Y2=d2(:,2);Z2=d2(:,3)-baseZ;\nangle=-70;%rotate the data\n[X1,Y1]=mfs.rotateIJ(X1,Y1,angle);\n[X2,Y2]=mfs.rotateIJ(X2,Y2,angle);\n\n%move the data\nminX=min(X1);minY=min(Y1);\nX1=X1-minX;Y1=Y1-minY;\nX2=X2-minX;Y2=Y2-minY;\nminX=min(X1);minY=min(Y1);\nmaxX=max(X1);maxY=max(Y1);\n\n%interpret 3D surface according to the data\nF1=scatteredInterpolant(X1,Y1,Z1,'natural','nearest');\nF2=scatteredInterpolant(X2,Y2,Z2,'natural','nearest');\n\n%get the mesh of the surface\n[gX,gY]=meshgrid(minX:gSide:maxX,minY:gSide:maxY);\ngZ1=F1(gX,gY);\ngZ2=F2(gX,gY);\ndgZ=gZ2-gZ1;\nS.X=gX;S.Y=gY;\nS.Z1=gZ1;S.Z2=gZ2;\nsave('TempModel/lps_Slope.mat');\n\nfigure\nsurface(gX,gY,gZ1,dgZ);\nfs.general3Dset();\ncolorbar\n</code></pre> user_L3lps3DSlope0.m<pre><code>%-------------This file is used to create surface of model layers\n%-----basic setup of the layer surface\nclear;\nballR=15;%radius of element, it is between 5-20 m. default value is 5, use 15 to increase speed\nadditionalDepth=15;%determine additional elements\nsurfPackNum=ceil(additionalDepth/(ballR*2));%number of surface element along depth direction\n\nsurfPackNum2=1;%additional surface element\nshellTNum=6;%thickness of wall elements\nbotPackNum=2;\ntopPackNum=1.5;%elements of bottom and top shell\n%-----end basic setup of the layer surface\n\n%------------record the basic setup parameters\nC=Tool_Cut();%use the tool to cut sample and get layers\nC.SET.additionalDepth=additionalDepth;%additional elements\nC.SET.surfPackNum=surfPackNum;%number of surface element along depth direction\n\nC.SET.surfPackNum2=surfPackNum2;%additional surface element\nC.SET.shellTNum=shellTNum;%thickness of wall elements\nC.SET.botPackNum=botPackNum;\nC.SET.topPackNum=topPackNum;%elements of bottom and top shell\nC.SET.ballR=ballR;\n%------------end record the basic setup parameters\n\nload('TempModel/lps_Slope.mat');%run user_L3lpsXYZ2Surf.m to get the data\n%Digital Elevation Model of model is saved in S, see Matlab commands\n%\"scatteredInterpolant\" \"meshgrid\" \"surf\"\ngSide=S.Y(2)-S.Y(1);\n%--------------cut slope data;\ncutX1=floor(0/gSide);cutX2=floor(120/gSide);%cut the digital elevation  data\ncutY1=floor(160/gSide);cutY2=floor(200/gSide);\nS.X=S.X(1+cutY1:end-cutY2,1+cutX1:end-cutX2);\nS.Y=S.Y(1+cutY1:end-cutY2,1+cutX1:end-cutX2);\nS.Z1=S.Z1(1+cutY1:end-cutY2,1+cutX1:end-cutX2);%Z1 is original height\nS.Z2=S.Z2(1+cutY1:end-cutY2,1+cutX1:end-cutX2);%Z2 is the height after landslide\nS.X=S.X-min(S.X(:));\nS.Y=S.Y-min(S.Y(:));\nS.dZ=S.Z2-S.Z1;\n%--------------end cut slope data;\nS0.X=S.X;S0.Y=S.Y;S0.Z=S.Z1;\nS0.name='S0';\nS0min=S;S0min.name='S0min';\nS0min.Z=min(S.Z1,S.Z2);\n\nS_bot=mfs.moveMeshGrid(S0min,-ballR*2*(botPackNum+surfPackNum));\nS_bot.name='Sbot';\nS_bot0=mfs.moveMeshGrid(S_bot,ballR*2*botPackNum);%i.e. S1 of previous code\nS_bot0.name='Sbot0';\n\nS_top=mfs.moveMeshGrid(S0,ballR*2*(topPackNum+surfPackNum2));\nS_top.name='Stop';\ntopRate=0.3;%add elements on top\ndZ=max(S_top.Z(:))-min(S_top.Z(:));\ntopFilter=S_top.Z&gt;max(S_top.Z(:))-dZ*topRate;\ntopAddH=100;\ntopZ=S_top.Z(topFilter);\ndTopZ=topAddH*(topZ-min(topZ))/(dZ*topRate);\nS_top.Z(topFilter)=S_top.Z(topFilter)+dTopZ;\n\nS_top0=mfs.moveMeshGrid(S_top,-ballR*2*topPackNum);\nS_top0.name='Stop0';\n\nS_source=S0;\nS_source.Z=S.Z2;\n[imH,imW]=size(S.X);\nsourceFilter=mfs.image2RegionFilter('slope/lps_slopesource.png',imH,imW);\n%imshow(sourceFilter);return;\nS_source.Z(~sourceFilter)=max(S_source.Z(:))+100;\nS_source.Z(sourceFilter)=S_source.Z(sourceFilter)-ballR;\nS_source.name='Ssource';\n\nC.addSurf(S_bot,'S_bot');\nC.addSurf(S_bot0,'S_bot0');\nC.addSurf(S0,'S0');\nC.addSurf(S_top0,'S_top0');\nC.addSurf(S_top,'S_top');\nC.addSurf(S_source,'S_source');\nC.addSurf(S0min,'S0min');\n\nC.SET.sampleThickness=max(abs(S.dZ(:)))+additionalDepth;\nC.SET.S=S;\n\nV=S_source;surface(V.X,V.Y,S.Z2,S.Z2-S.Z1);fs.general3Dset();colorbar\n\nsave('TempModel/lps_slopeSurface2.mat','C');\n</code></pre> user_L3lps3DSlope1.m<pre><code>%-------------------user_mxSlope1.m;\n%build the geometrical model;\nclear;\nload('TempModel/lps_slopeSurface2.mat');\n\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='lps_3DSlope';\n%--------------initial model------------\nB.GPUstatus='auto';\nS_top=C.SurfData.S_top;\nboxWidth=max(S_top.X(:));\nboxLength=max(S_top.Y(:));\nboxHeight=max(S_top.Z(:))*1.1;%increase the height of the model\nballR=C.SET.ballR;\ndistriRate=0.2;%define distribution of ball radius, \nisClump=0;\n%--------------initial model------------;\nB.isUI=1;%when run the code in UI_command, isUI=1\nB.ballR=ballR;\nB.isClump=isClump;\nB.distriRate=distriRate;\nB.sampleW=boxWidth;\nB.sampleL=boxLength;\nB.sampleH=boxHeight;\nB.platenStatus(:)=0;%no platen in the model\n%B.SET.shellHRate=0.1;%record the ratio of shell height to the height of the model\nB.buildModel();\nB.createSample();%create balls in the box\nB.sample.R=B.sample.R*2^(1/12);%R deviation between close packing and cube packing is 2^(1/6)\nS_Bbot=C.SurfData.S_bot;\nS_Bbot.Z=S_Bbot.Z-ballR*4;\nS_Btop=C.SurfData.S_top;%top limit of boundary\nS_Btop.Z=S_Btop.Z+(max(S_top.Z)-min(S_top.Z))*0.8;%boudary limit greater\n\nB.addSurf(C.SurfData.S_bot);%add the bottom surface\nB.addSurf(C.SurfData.S_top);%add the top surface\n\nB.addSurf(S_Bbot);%add the bot surface of boundary\nB.addSurf(S_Btop);%add the top surface of boundary\nB.cutGroup({'sample','botB','topB'},1,2);%cut sample and remove top platen\nB.cutGroup({'lefB','rigB','froB','bacB'},3,4);\n\nB.finishModel();%built the geometric model\nB.setSoftMat();%set soft balls to increase the speed of computing\n\n%-------------end initial parameters and build model--------------;\n%------------generate random-packing balls-------------;\nB.d=B.exportModel();%tranform model data to build object\nB.d.mo.isShear=0;\n%B.R=B.R*0.5;B.show();\n\nd=B.d;d.showB=1;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%d.show('aR');\n%return\nC.d=d;\ngNames={'botShell','slopeBody','addedBody','topShell'};\nI=C.SurfId;\nC.setLayer({'sample'},[I.S_bot,I.S_bot0,I.S0,I.S_top0,I.S_top],gNames);%set layers according geometrical data\n%layer1 is between surface 1 and 2, etc\nd.makeModelByGroups(gNames);%make the model by using the layers.\n%defined bottom shell\nd.defineWallElement('botShell');\nd.mo.aR(d.GROUP.botShell)=B.ballR*1.4;\n\n%--------------defined top shell\nmo=d.mo;\nmo.isFix=1;%fix coordinates;\ngId_top=d.getGroupId('topShell');%get element Id of group\nmo.FixXId=gId_top;%fix X coordinate\nmo.FixYId=gId_top;\nmo.FixZId=gId_top;\n\nnBall=d.mo.nBall;\nbcFilter=sum(nBall&gt;d.mNum&amp;nBall~=d.aNum,2)&gt;0;%boundary connected ball filter\ngFilter=false(size(bcFilter));\ngFilter(gId_top)=true;\nmo.aR(gId_top)=B.ballR;\nmo.aR(gFilter&amp;(~bcFilter))=B.ballR*1.3;%not a boundary connected ball\nd.setClump('topShell');\n%--------------end defined top shell\n\n%d.show('StressZZ');\n%return;\n\nB.uniformGRate=1;%the parameter used in B.gravitySediment\nsampleRate=C.SET.sampleThickness/B.sampleH;\nB.gravitySediment(sampleRate);\nd.mo.FixZId=[];%unfix all Z coordinates\n%d.show();return;\n\nd.mo.dT=d.mo.dT*4;%increase the step time to increase the computing speed\nd.balance('Standard',sampleRate*2);\nd.mo.dT=d.mo.dT/4;\n%------------return and save result--------------;\nd.status.dispEnergy();%display the energy of the model;\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finished');\nsave(['TempModel/' B.name '1.mat'],'B','d','C','-v7.3');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat'],'-v7.3');\nd.calculateData();\n</code></pre> user_L3lps3DSlope2.m<pre><code>%set the material of the model\nclear;\nload('TempModel/lps_3DSlope1.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%------------set the material of the model;\nmatTxt2=load('Mats\\lpsSoil.txt');%load a un-trained material file\nMats{1,1}=material('lpsSoil',matTxt2,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\n\n%--------------redefine layers and apply new material\n%because layer elements moved, the layers should be redefined.\nd.protectGroup('botShell','on');%protect the group, of which the element will not be removed in makeModelByGroups\ngNames={'slopeBody','addedBody','topShell'};\nd.delGroup(gNames);\n%original layer1 is changed to slopeBottom, and be protected, so new layer1\n%is between surfaces 1 and 3\ngNames={'slopeBody','addedBody'};\nID=C.SurfId;\nC.setLayer({'sample'},[ID.S_bot0,ID.S0,ID.S_top0],gNames);%set layers according to geometrical data\nd.makeModelByGroups(gNames);\n\n%d.showB=3;d.show('aR');return;\n%-----------------define wall area to increase speed of code\nsX=d.mo.aX(1:d.mNum);sY=d.mo.aY(1:d.mNum);\n\nimH=256;imW=596;%height and width of image\n%read the image and change the size,image is in black and white color\nregionFilter=mfs.image2RegionFilter('slope/lps_slopepack.png',imH,imW);%white is true\nsFilter=mfs.applyRegionFilter(regionFilter,sX,sY);\nsFilter=~sFilter;\nsId=find(sFilter);\nsId(sId&gt;d.mNum)=[];\nd.addGroup('slopeWall',sId);\n\nd.defineWallElement('slopeWall');\n%-----------------end define wall area to increase speed of code\n%d.showB=3;d.show('aR');return;\n%---------------balance the model\nd.balanceBondedModel0(0.5);\nd.mo.mVis=d.mo.mVis*5;\nd.balanceBondedModel(0.5);%bond all elements and balance the model\nd.mo.setGPU('off');\n\n%--------------balance model 2, cut the model to get final shape\nC.layerNum=0;\nID=C.SurfId;\nC.setLayer({'sample'},[ID.S_bot,ID.S0],{'slopeBody'});%set layers according to geometrical data\nC.setLayer({'sample'},[ID.S_source,ID.S0],{'slopeSource'});%set layers according to geometrical data\nC.setLayer({'slopeWall'},[ID.S_bot,ID.S0],{'slopeWall'});%set layers according to geometrical data\ngNames={'slopeBody';'slopeSource';'slopeWall'};\n\nd.makeModelByGroups(gNames);\n\n%---------------added in MatDEM_v1.42, reduce wall to shell\nclearWall=1;%if the code result in error, change it to 0\nif clearWall==1\n    %--------------------------added in MatDEM_v1.42\n    S0_shell=mfs.moveMeshGrid(C.SurfData.S0,-C.SET.ballR*2*C.SET.shellTNum);\n    %--------------------------end added in MatDEM_v1.42\n    C.addSurf(S0_shell,'S0_shell');\n\n    delFilter=false(d.aNum,1);\n    delFilter(d.GROUP.slopeWall)=true;\n    delFilter(d.GROUP.botShell)=true;\n\n    dilatedTNum=C.SET.shellTNum;\n    se1=strel('disk',ceil(B.ballR*2*dilatedTNum*imW/B.sampleW));%dilated pixel\n    protectedRegionFilter=imdilate(regionFilter,se1);\n    protectedFilter=mfs.applyRegionFilter(protectedRegionFilter,d.mo.aX,d.mo.aY);\n\n    ID=C.SurfId;\n    C.setLayer({'slopeWall','botShell'},[ID.S0_shell,ID.S0],{'surfaceShell'});%set layers according to geometrical data\n    protectedFilter(d.GROUP.surfaceShell)=true;\n\n    delFilter(protectedFilter)=false;\n    d.delElement(find(delFilter));\nend\n%---------------end added in MatDEM_v1.42\nd.setGroupMat('slopeBody','lpsSoil');\nd.groupMat2Model(gNames,1);\nd.mo.zeroBalance();\n%d.showB=3;d.show('Displacement');return;\n%----------------reduce friction and balance model\n\nvisRate=B.sampleH/C.SET.sampleThickness;\nmVis=d.mo.mVis;\naKS=d.mo.aKS;\nd.mo.aKS(:)=1;d.mo.setKNKS();%reduce the stiffness of element\nd.balanceBondedModel0();\nd.mo.aKS=aKS;d.mo.setKNKS();%restore the stiffness of element\nd.mo.mVis=d.mo.mVis*visRate;\nd.balanceBondedModel();\n\nd.mo.mVis=d.mo.mVis*C.SET.shellTNum;\nfor i=1:5\nd.balance(400);\nd.mo.mVX(:)=0;d.mo.mVY(:)=0;d.mo.mVZ(:)=0;\nd.mo.bFilter(:)=true;\nd.mo.zeroBalance();\nend\nd.mo.mVis=mVis;\n\n%-----------save the model\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Box3DSlope2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d','C','-v7.3');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat'],'-v7.3');\nd.calculateData();\n</code></pre> user_L3lps3DSlope3.m<pre><code>%-------------------user_mxSlope3.m;\nclear;\nload('TempModel/lps_3DSlope2.mat');\nd.calculateData();\nB.setUIoutput();\nd.mo.setGPU('off');\n\n%-----------setup of the calculation\nd.getModel();%d.setModel();%reset the initial status of the model\nd.mo.aHeat(:)=0;\nd.status=modelStatus(d);%initialize model status, which records running information\nd.breakGroupOuter('slopeSource');%break the outer connection of the group\nd.breakGroup('slopeSource');%break the outer connection of the group\n\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=0.00001;%ok\nd.mo.mVis=d.mo.mVis*visRate;%use lower viscosity\nd.setStandarddT();%reset the step time\nd.mo.dT=d.mo.dT*4;%increase step time to increase the computing speed\n%-----------end setup of the calculation\n\n%---------setup of numerical simulation\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);\ngpuStatus=d.mo.setGPU('auto');\ntotalCircle=50;\nd.tic(totalCircle);\n%---------start the numerical simulation\nfor i=1:totalCircle\n    d.balance('Standard',0.5);\n    d.clearData(1);\n    d.mo.setGPU('off');\n    save([fName num2str(i) '.mat'],'-v7.3');\n    d.calculateData();\n    d.mo.setGPU(gpuStatus);\n    d.toc();%show the note of time;\nend\n\n%----------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Box3DSlope3Finish');\nsave(['TempModel/' B.name '3.mat'],'d','-v7.3');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat'],'-v7.3');\nd.calculateData();\nd.show('aR');\n</code></pre>"},{"location":"examples/examples2019/GeoThermalBox/","title":"GeoThermalBox","text":"Step 1Step 2Step 3 user_L3GeoThermalBox1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='GeoThermalBox';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.05;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=3;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=1.5;\nB.boundaryRrate=0.999999;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=1;\nB.isSample=1;\nB.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\nd.showB=1;\n%--------------end initial model------------\n\nd.mo.setGPU('off');\n%----------remove overlap platen elements\ndelId=[d.GROUP.topPlaten(end-1:end);d.GROUP.botPlaten(end-1:end)];\nd.delElement(delId);\nd.mo.zeroBalance();\n%----------end remove overlap platen elements\n\n%---------- gravity sedimentation\nB.gravitySediment(1);%you may use B.gravitySediment(10); to increase sedimentation time (10)\nB.compactSample(2);%input is compaction time\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.show('-aR');\nd.mo.bFilter(:)=1;\nd.mo.zeroBalance();\nd.Rrate=1;\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3GeoThermalBox2.m<pre><code>%set the material of the model\nclear\nload('TempModel/GeoThermalBox1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%----------set material of model\nmatTxt=load('Mats\\RockHydro.txt');\nMats{1,1}=material('RockHydro',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\n%----------end set material of model\n\n%---------assign material to layers and balance the model\nB.setPlatenFixId();\nd.setGroupMat('sample','RockHydro');\nd.groupMat2Model({'sample'});\nd.balanceBondedModel0();\nd.mo.bFilter(:)=false;\nd.balance('Standard',2);\n%---------end assign material to layers and balance the model1. \n\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3GeoThermalBox3.m<pre><code>%this code is used simulate the moisture-heat test in Suzhou\n%set the material of the model\nclear\nfs.randSeed(2);\nload('TempModel/GeoThermalBox2.mat');\n\n%---------------regular setting\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\nd.showB=2;\nd.deleteConnection('boundary');\nd.Rrate=1;\nd.getModel();\nd.mo.isCrack=1;\n%---------------end regular setting\n\n%---------------set different layers of the box model\ninterface=[0.0714;0.7964];%interface between layers\nmaxZ=max(d.mo.aZ);\nbotLayerFilter=d.mo.aZ&lt;maxZ*interface(1);\nmidLayerFilter=d.mo.aZ&gt;=maxZ*interface(1)&amp;d.mo.aZ&lt;=maxZ*interface(2);\ntopLayerFilter=d.mo.aZ&gt;maxZ*interface(2);\nd.addGroup('botLayer',find(botLayerFilter));%define the bottom layer of the model\nd.addGroup('midLayer',find(midLayerFilter));\nd.addGroup('topLayer',find(topLayerFilter));\nd.mo.zeroBalance();\nd.setGroupId();%distinguish different groups\nd.show('groupId');%show groupId\n%---------------end set different layers of the box model\n\n%-------------initializing the pore network\np=pore(d);%make pore object\np.dT=p.d.mo.dT;%use the same step time, may be modified later\np.pathLimitRate=0.3;%path diameter&lt;pathLimitRate*ballR will be connection\np.isCouple=0;%no fluid-solid coupling\np.setInitialPores();\np.setPlaten('fix');%fix the coordinates of platens\n%-------------end initializing the pore network\n\n%-----------set the fluid flow parameters (permeability)\np.aWaterdR=d.mo.aR*0.1;%%water radius deviation of model elements\np.aWaterdR(d.GROUP.midLayer)=p.aWaterdR(d.GROUP.midLayer)/5;\n%elements of midLayer use lower value, i.e. lower permeability\np.setWaterdR();%calculate the p.addDiameter based on aWaterdR\n%d.mo.SET.aWaterdR=p.aWaterdR;\n%d.show('SETaWaterdR');%show the water radius of element\n%return\n%-----------end set the fluid flow parameters (permeability)\n\n%---------calculate connection diameter and flow K\nkFlow=0.00000001;%permeability factor\nkT=1000;%heat conductivity factor\n%---------end calcualte connection diameter and flow K\n\n%---------find four corners of the box model\nsX=d.mo.aX(d.GROUP.sample);sZ=d.mo.aZ(d.GROUP.sample);\n[~,lefBotId]=min(sX+sZ);\n[~,rigBotId]=min(-sX+sZ);\n[~,lefTopId]=min(sX-sZ);\n[~,rigTopId]=min(-sX-sZ);\npressureHigh=p.pPressure(1)*10000;%use great pressure to increase the speed\npressureLow=p.pPressure(1)*1;\n%---------end find four corners of the box model\n\n%---------------add temperature \"solute\"\nTPara.Id=1;\nTPara.name='T';\nTPara.initialValue=12;%initial temperature\np.addSolutePara(TPara);\n%---------------end add temperature \"solute\"\n\ndNum=1000;%save the data every dNum steps\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\n\nfor step=1:10000\n    %----------heat conduct\n    p.SET.cKT=p.cLength*kT;\n    p.setBallPara('T',lefBotId,3);%3 degrees\n    p.setBallPara('T',lefTopId,30);%30 degrees\n    %----------end heat conduct\n\n    %------------fluid flow\n    cDiameterFlow=p.cDiameter+p.cDiameterAdd;%calculate the diameter of\n    cDiameterFlow(cDiameterFlow&lt;0)=0;\n    p.cKFlow=cDiameterFlow*kFlow./p.cPathLength;%default K of throat is determined by diameter and path length\n    p.setBallPressure(lefBotId,pressureHigh);%set the pore pressure around the ball\n    p.setBallPressure(lefTopId,pressureHigh);\n    p.setBallPressure(rigBotId,pressureLow);\n    %------------end fluid flow\n\n    p.balance();%calculation\n    if mod(step,dNum)==0\n        saveIndex=ceil(step/dNum);\n        save([fName num2str(saveIndex) '.mat']);\n        %figure;p.show('pPressure');\n    end\nend\np.show('SETpT');\n%p.show('pPressure');\np.showData('poreFlowMass');\n\n%---------save the data\nd.mo.zeroBalance();\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2019/MonteCarlo/","title":"MonteCarlo","text":"Step 1Step 2Step 3Step 4Step 5 user_L3BoxMonteCarlo1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(2);%build random model\nB=obj_Box;%build a box object\nB.name='BoxMonteCarlo';\nB.GPUstatus='auto';\nB.ballR=1;\nB.isClump=0;\nB.distriRate=0.2; \nB.sampleW=60;\nB.sampleL=0;\nB.sampleH=60;\nB.type='topPlaten';\nB.setType();\nB.buildInitialModel();%B.show();\nB.setUIoutput();\nd=B.d;\n\n%--------------end initial model------------\nB.gravitySediment(0.1);\nB.compactSample(1);%input is compaction time\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxModel1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_L3BoxMonteCarlo2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxMonteCarlo1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%---------cut the model to make slope\nC=Tool_Cut(d);%cut the model\nlSurf=load('slope/layer surface.txt');%load the surface data\nC.addSurf(lSurf);%add the surfaces to the cut\nC.setLayer({'sample'},[1,2,3,4]);%set layers according geometrical data\ngNames={'lefPlaten';'rigPlaten';'botPlaten';'layer1';'layer2';'layer3'};\nd.makeModelByGroups(gNames);\n%---------end cut the model to make slope\n\n%----------set material of model\nmatTxt=load('Mats\\Soil1.txt');matTxt(3:4)=matTxt(3:4)*10;\nMats{1,1}=material('Soil1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\Soil2.txt');matTxt2(3:4)=matTxt2(3:4)*10;\nMats{2,1}=material('Soil2',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;\n%----------end set material of model\n\n%---------assign material to layers and balance the model\nd.setGroupMat('layer2','Soil2');\nd.groupMat2Model({'sample','layer2'});\nd.balanceBondedModel();\nd.show('aR');\n%---------end assign material to layers and balance the model\n\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxStep2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3BoxMonteCarlo2_3.m<pre><code>clear;\nload('TempModel/BoxMonteCarlo2.mat');\nd2=B.d;\nload('TempModel/BoxMonteCarlo2.mat');\nB.setUIoutput();\n\nmodelNum=5;%defines the number of slope in one model\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%d.setModel();%reset the initial status of the model\nd.status=modelStatus(d);%initialize model status, which records running information\n\nd.is2D=0;\ndisY=max(d.aR)*4;\nd.GROUP.sample1=d.GROUP.sample;\nd.SET.modelNum=modelNum;\n%the slope model is added one by one here @@@@\n%we can make a new object including all slopes, and add it to d\nfor i=2:modelNum\n    newSampleId=mfs.addModel(d,d2,0,disY*(i-1),0);\n    d.GROUP.(['sample' num2str(i)])=newSampleId;\nend\n%---------cut the model to make slope\nC=Tool_Cut(d);%cut the model\nlSurf=load('slope/layer surface.txt');%load the surface data\nC.addSurf(lSurf);%add the surfaces to the cut\nC.setLayer({'sample'},[1,2,3,4]);%set layers according geometrical data\n%---------end cut the model to make slope\n\n%---------assign material to layers and balance the model\nd.setGroupMat('layer2','Soil2');\nd.groupMat2Model({'sample','layer2'});\nd.balanceBondedModel();\nd.show('aR');\n%---------end assign material to layers and balance the model\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxStep3Finish');\nsave(['TempModel/' B.name '2_3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3BoxMonteCarlo3.m<pre><code>%clear;\nfs.randSeed(1);%\ntotalCircle=2;%define the number of random simulation\nload('TempModel/BoxMonteCarlo2_3.mat');\n%----------define the parameters of the slopes\naBFRates=(2+rand(d.SET.modelNum,1)*8)/20;%rates of d.mo.aBF, tensile strength\naMUpRates=(2+rand(totalCircle,1)*8)/20;%rate of d.mo.aMUp, friction coefficient\n\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nfor i=1:totalCircle\n    load('TempModel/BoxMonteCarlo2_3.mat');\n    B.setUIoutput();\n    d=B.d;\n    d.calculateData();\n    d.mo.setGPU('off');\n    d.getModel();%d.setModel();%reset the initial status of the model\n    d.resetStatus();%initialize model status, which records running information\n\n    d.mo.isHeat=1;%calculate heat in the model\n    visRate=0.001;\n    d.mo.mVis=d.mo.mVis*visRate;\n    d.setStandarddT();\n    sId=d.GROUP.sample;\n    d.mo.aMUp(sId)=d.mo.aMUp(sId)*aMUpRates(i);%assign a different friction coefficient@@@\n\n    d.SET.aMUpRate=aMUpRates(i);%record the setup of this model\n    d.SET.aBFRates=aBFRates;\n    for j=1:d.SET.modelNum\n        sName=['sample' num2str(j)];\n        sId=d.GROUP.(sName);\n        d.mo.aBF(sId)=d.mo.aBF(sId)*aBFRates(j);%assign a different break force (tensile strength)@@@\n    end\n    d.mo.setGPU('auto');\n    d.balance('Standard',0.5);%we may reduce the value to 0.2 to increase the speed\n\n    d.clearData(1);%save the data\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\nend\n\n%show the displacement of each slope, and mark them\nd.show('Displacement');\ntitle(['Displacement, aMUpRate: ' num2str(d.SET.aMUpRate)]);\nfor i=1:d.SET.modelNum\n    maxSZ=max(d.mo.aZ(d.GROUP.sample));\n    sY=d.aY(d.GROUP.(['sample' num2str(i)]));\n    text(0.05*maxSZ,sY(1),0.1*maxSZ+maxSZ,num2str(i));\nend\n</code></pre> user_L3BoxMonteCarlo4Find.m<pre><code>%the file is used to analyse the data of MonteCarlo3\nclear\nMCdatas=[];\nfor dataI=1:100\n    load(['data/step/BoxMonteCarlo0.2-0.2loopNum' num2str(dataI) '.mat']);%load the saved file\n    d.setData();\n    movedRates=zeros(d.SET.modelNum,1);\n    for i=1:d.SET.modelNum\n        sampleId=d.GROUP.(['sample' num2str(i)]);\n        sDisplacement=d.data.Displacement(sampleId);\n        sFilter=sDisplacement&gt;B.ballR*2;\n        movedRates(i)=sum(sFilter)/length(sFilter);\n    end\n    movedRateLimit=0.01;\n    movedFilter=movedRates&gt;movedRateLimit;\n\n    MCdata=[aBFRates,d.SET.aMUpRate*ones(size(aBFRates)),movedFilter];\n    MCdatas=[MCdatas;MCdata];\nend\nsave('slope/MCdatas3.mat','MCdatas');\n</code></pre>"},{"location":"examples/examples2019/PoreFlood/","title":"PoreFlood","text":"Step 1Step 2Step 3 user_L3PoreFlood1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='PoreFlood';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.005;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=0.2;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=0.2;\nB.boundaryRrate=0.999999;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=1;\nB.isSample=1;\nB.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\nd.showB=1;\n%--------------end initial model------------\n\nd.mo.setGPU('off');\n%----------remove overlap platen elements\ndelId=[d.GROUP.topPlaten(end-1:end);d.GROUP.botPlaten(end-1:end)];\nd.delElement(delId);\nd.mo.zeroBalance();\n%----------end remove overlap platen elements\n\n%---------- gravity sedimentation\nB.gravitySediment(1);%you may use B.gravitySediment(10); to increase sedimentation time (10)\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.Rrate=1;\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3PoreFlood2.m<pre><code>%set the material of the model\nclear\nload('TempModel/PoreFlood1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%------------remove top elements of sample to make ocean area\ntopModelFilter=d.mo.aZ&gt;max(d.mo.aZ)*0.7;\nd.addGroup('topModel',find(topModelFilter));\nmaxS=max(d.GROUP.sample);\ntopSampleId=d.GROUP.topModel(d.GROUP.topModel&lt;=maxS);\nd.delElement(topSampleId);\n%------------end remove top elements of sample to make ocean area\n\n%----------set material of model\nmatTxt=load('Mats\\RockHydro.txt');\nMats{1,1}=material('RockHydro',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\n%----------end set material of model\n\n%---------assign material to layers and balance the model\nB.setPlatenFixId();\nd.setGroupMat('sample','RockHydro');\nd.groupMat2Model({'sample'});\nd.balanceBondedModel0();\nd.balance('Standard',5);\n%---------end assign material to layers and balance the model1. \n\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3PoreFlood3.m<pre><code>%set the material of the model\nclear\nfs.randSeed(2);\nload('TempModel/PoreFlood2.mat');\nB.setUIoutput();\n\n%--------initializing the model\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\nd.showB=2;\nd.deleteConnection('boundary');\nd.Rrate=1;\nd.getModel();\nd.mo.isCrack=1;\nd.mo.bFilter(:)=false;%break all connections\nd.mo.zeroBalance();\nd.mo.mVis=d.mo.mVis./d.vRate*0.001;%use uniform viscosity\n\np=pore(d);\nd.mo.dT=d.mo.dT/5;%use small step time\np.dT=p.d.mo.dT;\np.pathLimitRate=0.3;%path diameter&lt;pathLimitRate*ballR will be connection\np.isCouple=1;%fluid-solid coupling\np.setInitialPores();\np.setPlaten('fix');%fix the coordinates of platens\n%---------end initializing the model\n\n%-----------drawing setting\nsetappdata(0,'simpleFigure',1);%use simpleFigure to increase drawing speed\nsetappdata(0,'ballRate',0.01);%use small ballRate to increase drawing speed\nshowType='*pPressure';\nfigureNumber=d.show('mV');%define figureNumber, figure will shown in one form during iterations\nd.figureNumber=figureNumber;\n%-----------end drawing setting\n\n%---------calculate connection diameter and flow K\nk=0.00000001;%permeability factor\n%---------end calcualte connection diameter and flow K\nk=k/10;\n\npPressureHigh=p.pPressure(1)*10000;%use greater pressure\ntotalCircle=10;\nstepNum=200;\nfName=['data/step/2' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nd.tic(totalCircle);%record the initial time of loop\n\ntic\nfor i=1:totalCircle\n    for j=1:stepNum\n        cDiameterFlow=p.cDiameter+p.cDiameterAdd;%calculate the diameter of\n        cDiameterFlow(cDiameterFlow&lt;0)=0;\n        p.cKFlow=cDiameterFlow*k./p.cPathLength;%default K of throat is determined by diameter and path length\n        p.setBallPressure(1,pPressureHigh);\n        p.balance();\n        d.balance();\n\n    end\n    save([fName num2str(i) '.mat']);\n    d.recordStatus();\n    p.show(showType);\n    d.toc();\nend\np.show('pPressure');\ntoc\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2019/PoreHydraulic/","title":"PoreHydraulic","text":"Step 1Step 2Step 3Step 4 user_L3PoreHydraulic1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='PoreHydraulic';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.002;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=0.2;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=0.2;\nB.boundaryRrate=0.999999;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=1;\nB.isSample=1;\nB.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\nd.showB=1;\n%--------------end initial model------------\n\nd.mo.setGPU('off');\n%----------remove overlap platen elements\ndelId=[d.GROUP.topPlaten(end-1:end);d.GROUP.botPlaten(end-1:end)];\nd.delElement(delId);\nd.mo.zeroBalance();\n%----------end remove overlap platen elements\n\n%---------- gravity sedimentation\nB.gravitySediment(1);%you may use B.gravitySediment(10); to increase sedimentation time (10)\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.Rrate=1;\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('-Id');\n</code></pre> user_L3PoreHydraulic2.m<pre><code>%set the material of the model\nclear\nload('TempModel/PoreHydraulic1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%----------set material of model\nmatTxt=load('Mats\\RockHydro.txt');\nMats{1,1}=material('RockHydro',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\n%----------end set material of model\n\n%---------assign material to layers and balance the model\nB.setPlatenFixId();\nd.setGroupMat('sample','RockHydro');\nd.groupMat2Model({'sample'});\nd.balanceBondedModel0();\nd.balance('Standard',2);\n%---------end assign material to layers and balance the model1. \n\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3PoreHydraulic3.m<pre><code>clear\nfs.randSeed(2);\nload('TempModel/PoreHydraulic2.mat');\nB.setUIoutput();\n\n%--------initializing the model\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\nd.showB=2;\nd.deleteConnection('boundary');\nd.Rrate=1;\nd.getModel();\nd.mo.isCrack=1;\nd.mo.bFilter(:)=true;%break all connections\nd.mo.zeroBalance();\nd.mo.mVis=d.mo.mVis./d.vRate*0.001;%use uniform viscosity\n\np=pore(d);\nd.mo.dT=d.mo.dT/5;%use small step time\np.dT=p.d.mo.dT;\np.pathLimitRate=0.3;%path diameter&lt;pathLimitRate*ballR will be connection\np.isCouple=1;%fluid-solid coupling\np.setInitialPores();\np.setPlaten('fix');%fix the coordinates of platens\n%---------end initializing the model\n\n%----------set the drawing of result during iterations\nsetappdata(0,'simpleFigure',1);%use simpleFigure to increase drawing speed\n%setappdata(0,'ballRate',0.01);%use small ballRate to increase drawing speed\nshowType='*pPressure';\nfigureNumber=d.show('mV');%define figureNumber, figure will shown in one form during iterations\nd.figureNumber=figureNumber;\n%----------end set the drawing of result during iterations\n\n%---------calculate connection diameter and flow K\nk=0.00000001;%permeability factor\n%---------end calcualte connection diameter and flow K\nk=k/10;%change the permeability\n\npPressureHigh=p.pPressure(1)*5000;%use greater pressure\n%---------setting of the simulation\ntotalCircle=10;\nstepNum=100;\nfName=['data/step/2' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nd.tic(totalCircle);%record the initial time of loop\n\nfor i=1:totalCircle\n    for j=1:stepNum\n        cDiameterFlow=p.cDiameter+p.cDiameterAdd;%calculate the diameter of\n        cDiameterFlow(cDiameterFlow&lt;0)=0;\n        p.cKFlow=cDiameterFlow*k./p.cPathLength;%default K of throat is determined by diameter and path length\n        p.setBallPressure(210,pPressureHigh);%you may fix the element\n        p.balance();\n        d.balance();\n    end\n    %cla;%clear the previous figure\n    p.show(showType);\n    pause(0.1);%pause and show the figure\n    save([fName num2str(i) '.mat']);%save data\n    d.recordStatus();\n    d.toc();\nend\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3PoreHydraulicStatic3.m<pre><code>%set the material of the model\nclear\nfs.randSeed(2);\nload('TempModel/PoreHydraulic2.mat');\nB.setUIoutput();\n%---------------regular setting\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\nd.showB=2;\nd.deleteConnection('boundary');\nd.Rrate=1;\nd.getModel();\nd.mo.isCrack=1;\n%---------------end regular setting\n\n%-------------initializing the pore network\np=pore(d);\np.dT=p.d.mo.dT;\np.pathLimitRate=0.3;%path diameter&lt;pathLimitRate*ballR will be connection\np.isCouple=0;%fluid-solid coupling\np.setInitialPores();\np.setPlaten('fix');%fix the coordinates of platens\n%-------------end initializing the pore network\n\n%-----------------set cracks in the model\nC=Tool_Cut(d);%cut the model\nlSurf=[0.3,0,0;10,0,5;20,0,20]/100;%load the surface data\nlSurf2=[0.5,0,0;5,0,15]/100;%load the surface data\nC.addSurf(lSurf);%add the surfaces to the cut\nC.addSurf(lSurf2);%add the surfaces to the cut\ns1Filter=d.setSurfBond(C.Surf(1),'break');\ns2Filter=d.setSurfBond(C.Surf(2),'break');\n%-----------------end set cracks in the model\nd.show('--');\nC.showSurf();\n\n%---------calculate connection diameter and flow K\nk=0.00000001;%permeability factor\n%---------end calcualte connection diameter and flow K\nk=k/10;\npPressureHigh=p.pPressure(1)*10000;%use greater pressure\n\nfor step=1:2000\n    cDiameterFlow=p.cDiameter+p.cDiameterAdd;%calculate the diameter of\n    cDiameterFlow(cDiameterFlow&lt;0)=0;\n    cbFilter=d.mo.bFilter(p.cnIndex);%bonded filter of cList\n    cs1Filter=s1Filter(p.cnIndex);%s2Filter, select connection of crack 2\n    cs2Filter=s2Filter(p.cnIndex);%s2Filter, select connection of crack 2\n\n    p.cKFlow=cDiameterFlow*k./p.cPathLength;%default K of throat is determined by diameter and path length\n    p.cKFlow(cbFilter)=p.cKFlow(cbFilter)*0.01;%K of intacted bond is very small\n    p.cKFlow(cs1Filter)=p.cKFlow(cs1Filter)*2;%bottom crack K is greater\n    p.cKFlow(cs2Filter)=p.cKFlow(cs2Filter)*1;%top crack K is greater\n    p.setBallPressure(1,pPressureHigh);%you may fix the element\n    p.balance();\nend\np.show('pPressure');\n\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2019/PorePermeability/","title":"PorePermeability","text":"Step 1Step 2Step 3 user_L3PorePermeability1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='PorePermeability';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.0005;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=0.0309*2;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=0.05;\nB.boundaryRrate=0.999999;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=1;\nB.isSample=1;\nB.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\nd.showB=1;\n%--------------end initial model------------\n\nd.mo.setGPU('off');\n%----------remove overlap platen elements\ndelId=[d.GROUP.topPlaten(end-1:end);d.GROUP.botPlaten(end-1:end)];\nd.delElement(delId);\nd.mo.zeroBalance();\n%----------end remove overlap platen elements\n\nd.mo.isShear=0;\n\n%---------- gravity sedimentation\nB.gravitySediment(1);%you may use B.gravitySediment(10); to increase sedimentation time (10)\n%B.compactSample(2);%input is compaction time\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.show('-aR');\nd.mo.bFilter(:)=1;\nd.mo.zeroBalance();\nd.Rrate=1;\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n%d.show('-Id');\n</code></pre> user_L3PorePermeability2.m<pre><code>%set the material of the model\nclear\nload('TempModel/PorePermeability1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%----------set material of model\nmatTxt=load('Mats\\RockHydro.txt');\nMats{1,1}=material('RockHydro',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\n%----------end set material of model\n\n%---------assign material to layers and balance the model\nB.setPlatenFixId();\nd.setGroupMat('sample','RockHydro');\nd.groupMat2Model({'sample'});\nd.balanceBondedModel0();\nd.mo.bFilter(:)=false;\nd.balance('Standard',1);\n%---------end assign material to layers and balance the model1. \n\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3PorePermeability3.m<pre><code>%test the permeability of sample\n%in this example, there are two material with different permeability\n\nclear\nfs.randSeed(2);\nload('TempModel/PorePermeability2.mat');\nsampleH=0.04;%height of sample is 4 cm\ndH=1;%water head is 1m\n%---------define permeability\nkRate=0.5;%change the kRate to change permeability\nk=2e-10*kRate;%permeability factor\nlowKRate=0.1;%percentage of low permeability elements\ntotalBalance=100000;%increase the value when highK:lowK increase\n%---------end define permeability\n\n%-----------initializing the model\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\nd.showB=2;\nd.deleteConnection('boundary');\nd.Rrate=1;\nd.resetStatus();\nd.getModel();\nd.mo.isCrack=1;\n%-----------end initializing the model\n\n%------------remove top and bottom elements of sample\nsampleHcenter=mean(d.mo.aZ(d.GROUP.sample));\ntopModelFilter=d.mo.aZ&gt;sampleHcenter+sampleH/2;\nbotModelFilter=d.mo.aZ&lt;sampleHcenter-sampleH/2;\ndelId=find(topModelFilter|botModelFilter);\nmaxS=max(d.GROUP.sample);\ndelId=delId(delId&lt;=maxS);\nd.delElement(delId);\n%------------end remove top and bottom elements of sample\n\n%------------initilizing pore system\np=pore(d);\np.pathLimitRate=0.3;%path diameter&lt;pathLimitRate*ballR will be connection\np.isCouple=1;%fluid-solid coupling\np.setInitialPores();\np.setPlaten('fix');%fix the coordinates of platens\np.aWaterdR=d.mo.aR*0.025;%defind the water diameter\np.setWaterdR();\n\nsLength=length(d.GROUP.sample);\nlowKId=randperm(sLength,round(sLength*lowKRate));\np.aWaterdR(lowKId)=p.aWaterdR(lowKId)*0.1;\np.setWaterdR();\nd.mo.SET.aWaterdR=p.aWaterdR;\n%d.show('SETaWaterdR');\n%return\n%-----------------end set cracks in the model\n\n%--------------setting of the simulation\np.dT=p.d.mo.dT/kRate;\nfName=['data/step/' B.name  num2str(B.ballR) '-lowKRate' num2str(lowKRate) 'loopNum'];\ntopBallId=ceil(mean(d.GROUP.topPlaten));\nbotBallId=ceil(mean(d.GROUP.botPlaten));\n\npressureHigh=p.pPressure(2)+1e3*9.8*dH;\npressureLow=p.pPressure(2);\ntopPoreId=p.getBallConnectedPore(topBallId);\nbotPoreId=p.getBallConnectedPore(botBallId);\np.pPressure(topPoreId)=pressureHigh;\np.pPressure(botPoreId)=pressureLow;\np.setPressure();%set pore pressure of seawater\np.isCouple=0;%no fluid flow coupling\n%--------------end setting of the simulation\n\nsave([fName '0.mat']);%return;\n%-----------apply high pressure\n\ncDiameterFlow=p.cDiameter+p.cDiameterAdd;%calculate the diameter of\ncDiameterFlow(cDiameterFlow&lt;0)=0;\np.cKFlow=cDiameterFlow*k./p.cPathLength;%default K of throat is determined by diameter and path length\n\npIndex=p.getPIndex();\ntopPIndex=pIndex(topPoreId,:);\nbotPIndex=pIndex(botPoreId,:);\nbalanceRates=[];\n%-------------balancing the pore pressure\nfor i=1:totalBalance\n    p.pPressure(topPoreId)=pressureHigh;\n    p.pPressure(botPoreId)=pressureLow;\n    p.setPressure();%set pore pressure of seawater\n    p.balance();%rate defines the balance time\n    toppMass=p.poreFlowMass{topPIndex(1)};\n    botpMass=p.poreFlowMass{botPIndex(1)};\n    if mod(i,1000)==0\n        fs.disp(['Calculating ' num2str(i/1000) '/' num2str(totalBalance/1000)]);\n        balanceRate=-sum(botpMass,2)/sum(toppMass,2);\n        balanceRates=[balanceRates;balanceRate];\n        fs.disp(['Balance rate is ' num2str(balanceRate*100) ' percent']);\n    end\nend\n%-------------end balancing the pore pressure\nfs.disp('Balance of pore pressure is finished');\n\nfs.disp('Start the permeability test');\nstableT=p.totalT;\nmassI=0;\ntotalCircle=20;\nstepNum=500;\ntopPoreMass=zeros(totalCircle*stepNum,1);\nbotPoreMass=zeros(totalCircle*stepNum,1);\nfor i=1:totalCircle\n    for j=1:stepNum\n        p.pPressure(topPoreId)=pressureHigh;\n        p.pPressure(botPoreId)=pressureLow;\n        p.setPressure();%set pore pressure of seawater\n        p.balance();%rate defines the balance time\n        massI=massI+1;\n        toppMass=p.poreFlowMass{topPIndex(1)};\n        botpMass=p.poreFlowMass{botPIndex(1)};\n        topPoreMass(massI)=sum(toppMass,2);\n        botPoreMass(massI)=sum(botpMass,2);\n    end\n    fs.disp(['Calculating ' num2str(i) '/' num2str(totalCircle)]);\n    %save([fName num2str(i) '.mat']);\nend\n\ntopMassAll=sum(topPoreMass);\nbotMassAll=sum(botPoreMass);\nflowT=p.totalT-stableT;\n\n%k = Q*L /( A*\u25b3h)\n%---------calculate the hydraulic conductivity K\nQ=botMassAll/1e3/flowT;\nL=sampleH;\nA=B.sampleW*p.pThickness;\nK=Q*L/(A*dH);\nfs.disp(['Permeability coefficient of the sample is ' num2str(K)]);\n%---------end calculate the hydraulic conductivity K\n\np.show('pPressure');\np.showData('poreFlowMass');\nsave([fName '0.mat']);%return;\n</code></pre>"},{"location":"examples/examples2019/Roller/","title":"Roller","text":"Step 1Step 2 user_L3Roller1.m<pre><code>%This\nclear\n%-----parameters-----\nballR=0.025;%ball radius\nRrate=0.7;\ntubeInnerR=1;\ntubeInnerL=0.2;\n\ntubeR=tubeInnerR+ballR;\ntubeL=tubeInnerL+ballR*2;\ninnerWidth=tubeInnerR*0.3;\nsampleSide=tubeInnerR*1.1;\nsampleLength=tubeL*0.9;\n\ndistriRate=0.2;\nsampleObj=mfs.denseModel(1+distriRate,@mfs.makeBox,sampleSide,sampleLength,sampleSide,ballR);\nrandRRate=(1-distriRate)+rand(size(sampleObj.R))*distriRate*2;\nsampleObj.R=sampleObj.R.*randRRate;\nsampleObj=mfs.moveObj2Origin(sampleObj);\n%fs.showObj(sampleObj);return\n\n\ntubeObj=mfs.denseModel(Rrate,@mfs.makeTube,tubeR+(1-Rrate)*ballR*2,tubeL,ballR);\ntubeObj=mfs.moveObj2Origin(tubeObj);\n\nplaneObj=mfs.denseModel(Rrate,@mfs.makeBox,innerWidth,tubeL,ballR,ballR);\nplaneObj.Z=planeObj.Z-ballR;\nplaneObj=mfs.rotate(planeObj,'YZ',90);\nplaneObj=mfs.move(planeObj,tubeInnerR-innerWidth+ballR*1,0,-tubeL/2);\nplaneObj=mfs.rotateCopy(planeObj,60,6);%plane\ntubeObj=mfs.combineObj(tubeObj,planeObj);\n\nbacDiscObj=mfs.denseModel(Rrate,@mfs.makeDisc,tubeInnerR+(1-Rrate)*ballR*1,ballR);\nbacDiscObj=mfs.moveObj2Origin(bacDiscObj);\nbacDiscObj=mfs.move(bacDiscObj,0,0,-tubeInnerL/2-ballR);\nfroDiscObj=mfs.move(bacDiscObj,0,0,tubeInnerL+ballR*2);\n\ntubeObj=mfs.rotate(tubeObj,'YZ',90);\nbacDiscObj=mfs.rotate(bacDiscObj,'YZ',90);\nfroDiscObj=mfs.rotate(froDiscObj,'YZ',90);\n\ntubeOuterR=tubeR+ballR;\ndiscOuterL=max(bacDiscObj.Y)+ballR;\ntubeObj=mfs.move(tubeObj,tubeOuterR,discOuterL,tubeOuterR);\nbacDiscObj=mfs.move(bacDiscObj,tubeOuterR,discOuterL,tubeOuterR);\nfroDiscObj=mfs.move(froDiscObj,tubeOuterR,discOuterL,tubeOuterR);\nsampleObj=mfs.move(sampleObj,tubeOuterR,discOuterL,tubeOuterR);\n% \n% fs.showObj(tubeObj,'add');\n% hold all;\n% fs.showObj(bacDiscObj,'add');\n% fs.showObj(sampleObj);\n% fs.generalView();\n% return\n\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='Roller';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=ballR;\nB.isShear=0;\nB.sampleW=tubeOuterR*2;\nB.sampleL=discOuterL*2;\nB.sampleH=tubeOuterR*2;\nB.isSample=0;\nB.setType('botPlaten');\nB.buildInitialModel();\nd=B.d;\nd.mo.setGPU('off');\n\nmatTxt1=load('Mats\\rubber.txt');\nmatTxt1(1)=matTxt1(1)/200;\nMats{1,1}=material('rubber',matTxt1,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\n\nG=d.GROUP;\nd.delElement([G.lefB;G.rigB;G.froB;G.bacB;G.botB;G.topB]);\n\n[froDiscId,bacDiscId]=d.addElement(1,{froDiscObj,bacDiscObj},'wall');\nd.addGroup('froB',froDiscId);\nd.addGroup('bacB',bacDiscId);\n\ntubeId=d.addElement(1,tubeObj,'wall');\nd.addGroup('tube',tubeId);\n\ntubeX=d.aX(d.GROUP.tube);\nmeanTubeX=mean(tubeX);\nlefTubeId=tubeId(tubeX&lt;meanTubeX);\nrigTubeId=tubeId(tubeX&gt;=meanTubeX);\nd.addGroup('lefB',lefTubeId);\nd.addGroup('rigB',rigTubeId);\n\nsampleId=d.addElement(1,sampleObj,'model');\nd.addGroup('sample',sampleId);\nd.delElement('botPlaten');\nd.SET.Cx=tubeOuterR;\nd.SET.Cy=discOuterL;\nd.SET.Cz=tubeOuterR;\n\nd.showB=2;\nd.showFilter('Group',{'tube','sample'},'aR');\nd.show('aR');\n\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n</code></pre> user_L3Roller2.m<pre><code>ufs.setTitle('MatDEM\u6eda\u7b52\u6405\u62cc\u5b9e\u65f6\u6a21\u62df');\n%set the material of the model\nclear;\n\nspeed=180;%rotation degree per second\nload('TempModel/Roller1.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\nd.showB=2;\nshowType='mV';\nd.showFilter('Group',{'tube','sample'});\nd.status.legendLocation='West';\nfigureNumber=d.show(showType);\nd.figureNumber=figureNumber;\n\nd.mo.setShear('off');\nd.setStandarddT();\nd.mo.dT=d.mo.dT*4;\n\ngpuStatus=d.mo.setGPU('auto');\n\ndAngle=speed*d.mo.dT;%rotation angle per time step\n\ntotalCircle=100;\nstepNum=5;\nd.tic(totalCircle);\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    for j=1:stepNum\n        d.rotateGroup('tube','XZ',dAngle,d.SET.Cx,d.SET.Cy,d.SET.Cz,'mo');\n        d.balance();\n    end\n    d.recordStatus();\n    d.showFilter('Group',{'tube','sample'});\n    d.show(showType);\n    d.toc();%show the note of time\n    pause(0.05);\nend\n\nsetappdata(0,'simpleFigure',0);\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxTunnelHeat2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n%--------------------end save data-----------------------\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2020/BoxCrash/","title":"BoxCrash","text":"Step 1Step 2Step 3Step 4 user_BoxCrash1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='BoxCrash';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=5;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=500;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=300;\nB.BexpandRate=4;%boundary is 4-ball wider than sample\nB.PexpandRate=0;\nB.type='topPlaten';%add a top platen to compact model\nB.isSample=1;\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nB.setUIoutput();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\n\nd.mo.setGPU('auto');\n%1. The simpleContact is the default contact model\nd.mo.balanceCommand='ContactModel.simpleContact(obj);';\n%2. The normalContact only consider the normal force of element\n%d.mo.balanceCommand='ContactModel.normalContact(obj);';\n%3. The normalContact model is defined in a function file\n%d.mo.setBalanceFunction('fun/normalContact.m');%user-defined normal model\n%--------------end initial model------------\n\n%---------- gravity sedimentation\nB.gravitySediment();%you may use B.gravitySediment(10); to increase sedimentation time (10)\n%d.show('mV');return;\n%B.compactSample(1);%input is compaction time\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxCrash2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxCrash1.mat');\nB.setUIoutput();%set the output\nd=B.d;\nd.calculateData();%calculate data\nd.mo.setGPU('off');%close the GPU calculation\nd.getModel();%get xyz from d.mo\n\n%---------------delete elements on the top\nmZ=d.mo.aZ(1:d.mNum);%get the Z of elements\ntopLayerFilter=mZ&gt;max(mZ)*0.5;\nd.delElement(find(topLayerFilter));%delete elements according to id\n\n%--------------assign new material\nmatTxt=load('Mats\\WeakRock.txt');%load material file\nMats{1,1}=material('WeakRock',matTxt,B.ballR);%\nMats{1,1}.Id=1;\nload('Mats/Mat_mxRock2.mat');%load the trained material\nMats{2,1}=Mat_mxRock2;\nMat_mxRock2.name='StrongRock';%set the name of the material\nMats{2,1}.Id=2;\nd.Mats=Mats;%assign new material\nd.groupMat2Model({'sample'},1);%apply the new material\n%----------make disc sample------------\nsampleId=d.GROUP.sample;\nsX=d.aX(sampleId);sZ=d.aZ(sampleId);sR=d.aR(sampleId);\ndiscCX=mean(sX);discCZ=mean(sZ);\ndiscR=20;\ndiscFilter=(d.aX-discCX).^2+(d.aZ-discCZ).^2&lt;discR^2;\n%d.setData();d.data.showFilter=discFilter;d.show('aR');\nd.addGroup('Disc0',find(discFilter));%add a new group\ndiscObj=d.group2Obj('Disc0');\n\ndiscId=d.addElement('StrongRock',discObj);%mat Id, obj\nd.addGroup('Disc',discId);%add a new group\ndisZ=max(sZ+sR)-min(discObj.Z-discObj.R);\nd.moveGroup('Disc',0,0,disZ);%move the group\n\nd.balanceBondedModel0();%balance the bonded model without friction\nd.show('aMatId');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxCrash2Drill.m<pre><code>%Excavation process example. Please run the user_BoxCrash1.m first\n%this code shows how to kill elements\nclear\nload('TempModel/BoxCrash1.mat');\nB.setUIoutput();%set the output\nd=B.d;\nd.calculateData();%calculate data\nd.mo.setGPU('off');%close the GPU calculation\nd.getModel();%get xyz from d.mo\nB.name='BoxCrashHole';\n\n%---------------delele elements on the top\nd.delElement(d.GROUP.topPlaten);%delete elements according to id\nd.balanceBondedModel0(0.1);%balance the bonded model without friction\n\nd.mo.bFilter(:)=true;\nd.mo.nBondRate=d.mo.nBondRate*0.1;\nd.mo.zeroBalance();\nd.resetStatus();\n%----------make disc sample------------\ngpuStatus=d.mo.setGPU('auto');\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\ndiscR=20;\nfor showCircle=1:30\n    mX=d.mo.aX(1:d.mNum);\n    mZ=d.mo.aZ(1:d.mNum);\n    discCX=showCircle*10;\n    discCZ=mean(mZ);\n    discFilter=(mX-discCX).^2+(mZ-discCZ).^2&lt;discR^2;\n    d.killElement(find(discFilter));%add a new group\n\n    d.balance('Standard',0.1);\n    save([fName num2str(showCircle) '.mat']);\n    d.show('Displacement');\nend\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxCrash3.m<pre><code>ufs.setTitle('MatDEM\u9668\u77f3\u649e\u51fb\u5730\u9762\u5b9e\u65f6\u6a21\u62df');\nclear;\nload('TempModel/BoxCrash2.mat');\nd.calculateData();\nd.mo.setGPU('off');\nB.setUIoutput();\nd=B.d;\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\nd.mo.isShear=0;\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=0.0001;\nd.mo.mVis=d.mo.mVis*visRate;\ndiscId=d.GROUP.Disc;\nd.setStandarddT();\nd.mo.dT=d.mo.dT*4;\n\nd.mo.mVZ(discId)=-2000;\nd.mo.mVX(discId)=-1000;\n\nd.showB=0;\nd.status.legendLocation='West';\n\n%----------set the drawing of result during iterations\n%ufs.simpleFigure('on');%simplify the figure drawing\nshowType='StressZZ';\nfigureNumber=d.show(showType);\nd.figureNumber=figureNumber;\n%----------end set the drawing of result during iterations\n\ngpuStatus=d.mo.setGPU('auto');\ntotalCircle=50;\nd.tic(totalCircle);\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    d.balance('Standard',0.0005);\n    d.show(showType);\n    pause(0.05);\nend\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxCrush3Finish');\nsave(['TempModel/' B.name '3.mat'],'d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2020/BoxWave/","title":"BoxWave","text":"Step 1Step 2Step 3 user_BoxWave1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='BoxWave';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.002;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=0.5;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=0.25;\nB.isSample=1;\nB.platenStatus=[0;0;0;0;0;1];%topPlaten\nB.BexpandRate=4;%boundary is 4-ball wider than sample\nB.buildInitialModel();%B.show();\nB.setUIoutput();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\n\n%---------- gravity sedimentation\nB.gravitySediment();%you may use B.gravitySediment(10); to increase sedimentation time (10)\nB.compactSample(1);%input is compaction time\nmfs.reduceGravity(d,3);%reduce the gravity of element\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxWave2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxWave1.mat');\nB.setUIoutput();%set the output\nd=B.d;\nd.calculateData();%calculate data\nd.mo.setGPU('off');%close the GPU calculation\nd.getModel();%get xyz from d.mo\n%---------------delele elements on the top\nmZ=d.mo.aZ(1:d.mNum);%get the Z of elements\nsampleFilter=mZ&gt;B.sampleH*0.9|mZ&lt;B.sampleH*0.1;\nd.delElement(find(sampleFilter));%delete elements according to id\nd.mo.setGPU('off');\n\n%--------------assign new material\nmatTxt=load('Mats\\WeakRock.txt');%load material file\nMats{1,1}=material('WeakRock',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;%assign new material\nd.groupMat2Model({'sample'},1);%apply the new material\nd.mo.mGZ(:)=0;%no gravitation\nd.moveGroup('lefB',-B.sampleW*0.05,0,0);%move the lateral boundaries\nd.moveGroup('rigB',B.sampleW*0.05,0,0);\nd.removePrestress(0.1);%reduce the prestress\nd.mo.setGPU('auto');\nd.balance('Standard',2);%balance the model\n\nd.show('mV');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxWave3.m<pre><code>%in this code, we will learn how to generate seismic wave and make\n%receivers to record data of seismic wave\nclear;\nload('TempModel/BoxWave2.mat');\nd.calculateData();\nd.mo.setGPU('off');\nB.setUIoutput();\nd=B.d;\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=0.0001;\nd.mo.mVis=d.mo.mVis*visRate;\nd.mo.isCrack=1;\n\n%---------------------define the source of the wave\n%leftBlock is used to generate wave\nmX=d.mo.aX(1:d.mNum);\nleftFilter=mX&lt;B.sampleW*0.05;\nd.addGroup('leftBlock',find(leftFilter));\n%generating sine wave on the leftLine group\ntotalBalanceNum=10000;%data number of the wave\ntotalT=totalBalanceNum*d.mo.dT;%total time of the wave\n\nperiod=1e-4;%period of the wave\nTs=(0:totalBalanceNum)*d.mo.dT;\nmaxA=100;%maximum acceleration\nValues=maxA*sin(Ts*(2*pi)/period);\n\nwaveProp='mAX';\nd.addTimeProp('leftBlock',waveProp,Ts,Values);%assign the AZ to elements of LeftLine\nd.addRecordProp('leftBlock',waveProp);%declare recording mAZ\n%---------------------end define the source of the wave\n\n%-------------------define the receiver\nreceiverNum=6;%receiver number\ncenterx=B.sampleW/receiverNum;%center position of the receiver\ncentery=0;\ncenterz=B.sampleH/2;\nR=B.ballR*4;%radius of the receiver\ngNames={};\nprop1='mAX';%record the property 1\nprop2='aX';%record the property 2\nfor i=1:receiverNum\n    gName=['Receiver' num2str(i)];\n    gNames=[gNames(:);gName];\n    f.run('fun/defineSphereGroup.m',d,gName,centerx*i,centery,centerz,R);\n    d.addRecordProp(gName,prop1);%declare recording mAZ\n    d.addRecordProp(gName,prop2);%declare recording mAZ\nend\nfigure;\nsubplot(2,1,1);\nd.setGroupId();\nd.showFilter('Group',gNames,'aR');\nsubplot(2,1,2);\nplot(Ts,Values);xlabel('Ts [second]');ylabel('X acceleration of the leftBlock [m/s^2]');title('Wave on the leftBlock');\n%-------------------end define the receiver\n\ngpuStatus=d.mo.setGPU('auto');\ntotalCircle=30;\nd.tic(totalCircle);\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nfigure;\nd.figureNumber=d.show('mV');\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    d.balance('Standard',0.01);\n    d.show('mV');\n    d.clearData(1);\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.toc();%show the note of time\nend\nd.mo.setGPU('off');\n\n%show the curves\ncurveFigure=figure;\nfor i=1:receiverNum\n    subplot(6,2,i*2-1);\n    d.status.show(['PROPReceiver' num2str(i) '_' prop1]);\n    subplot(6,2,i*2);\n    d.status.show(['PROPReceiver' num2str(i) '_' prop2]);\nend\nset(curveFigure, 'position', get(0,'ScreenSize'));\n\nd.clearData(1);\nd.recordCalHour('BoxCrush3Finish');\nsave(['TempModel/' B.name '3.mat'],'d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2020/EarthMoon/","title":"EarthMoon","text":"Step 1Step 2Step 3 user_EarthMoon1.m<pre><code>%make a box model, which will be put on a slope\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='EarthMoon';\nB.GPUstatus='auto';\nB.ballR=7e5;\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=16e6;\nB.sampleL=16e6;\nB.sampleH=18e6;\nB.setType('topPlaten');\n\nB.buildInitialModel();%B.show();\nd=B.d;\nd.mo.aR(1:d.mNum)=d.mo.aR(1:d.mNum)*0.98;%reduce the element size a bit\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(2);\nmfs.reduceGravity(d,5);%reduce the gravity of element\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n%d.showFilter('Group',{'sample'});\nd.show('mGZ');\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_EarthMoon2.m<pre><code>%set the material of the model\nclear\nload('TempModel/EarthMoon1.mat');\nspaceSize=B.sampleW*6;%side length of square area\n%----------------make objects----------------\nfastGroupModel=0;%@@default value is 0, fast when the value is 1\nearthR=(6.371e6-B.ballR)*1.125;\nmoonR=3.476e6-B.ballR;\npackBallR=B.ballR;%record the ballR of the small box block\npackBoxObj=B.d.group2Obj('sample');%make struct object from a group\npackBoxObj=mfs.moveObj2Origin(packBoxObj);\nearthObj=mfs.cutSphereObj(packBoxObj,earthR);\nsphereObj2=mfs.cutSphereObj(packBoxObj,moonR);\nboxObj=mfs.cutBoxObj(packBoxObj,B.sampleW*0.3,B.sampleW*0.1,B.sampleW*0.1);\n\nrate=1;\nsphereObj2=mfs.move(sphereObj2,B.sampleW*rate,0,0);\nboxObj=mfs.move(boxObj,0,-B.sampleW*rate*2,0);\n%----------------end make objects----------------\n\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='EarthMoon';\nB.GPUstatus='auto';\nB.ballR=packBallR;\nB.isClump=0;\nB.isSample=0;\nB.distriRate=0.0;\nB.sampleW=B.ballR*10;\nB.sampleL=B.ballR*10;\nB.sampleH=B.ballR*10;\nB.boundaryStatus=[0,0,0,0,1,0];\nB.setType('botPlaten');\n\nB.SET.fastGroupModel=fastGroupModel;%@@default value is 0, fast when the value is 1\nB.SET.spaceSize=spaceSize;\nB.buildInitialModel();%B.show();\nd=B.d;\n\n\n\n%please change the material in other simulations\nmatTxt=[1.7e12  0.15    20e6    200e6   0.6 5500];%load material file\nMats{1,1}=material('Soil1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;%you may remove this line in other simulations\n\n[earthId,sphere2Id,boxId]=d.addElement(1,{earthObj,sphereObj2,boxObj});\nd.addGroup('earth',earthId);\nd.addGroup('sphere2',sphere2Id);\nd.addGroup('box',boxId);\nd.delElement('botPlaten');\nd.GROUP.groupProtect=[];\nd.delElement('botB');\nd.mo.aX(end)=0;d.mo.aY(end)=0;d.mo.aY(end)=0;\n%d.showB=2;d.show('aR');return\nframe.minX=-spaceSize/2;\nframe.minY=-spaceSize/2;\nframe.minZ=-spaceSize/2;\nframe.maxX=spaceSize/2;\nframe.maxY=spaceSize/2;\nframe.maxZ=spaceSize/2;\nd.mo.frame=frame;\nd.mo.mAZ(:)=0;%no earth gravitation\n\n%----------test error between two methods, can be removed\ntic\nplanetfs.resetmGXYZ(d);\nplanetfs.setModelGravitation(d);\ntime1=toc;\ntotalGX1=sum(d.mo.mGX(d.GROUP.earth));\n%d.show('aR');return;\n\ntic\nplanetfs.resetmGXYZ(d);\nplanetfs.setGroupOuterGravitation(d);\ntime2=toc;\ntotalGX2=sum(d.mo.mGX(d.GROUP.earth));\ndisp(['Model:' num2str(totalGX1) '; Time:' num2str(time1)]);\ndisp(['Group:' num2str(totalGX2) '; Time:' num2str(time2)]);\n%----------end test error between two methods, can be removed\nd.show('aR');return;\n\n\n%------------balance the force on each planet\nd.mo.setShear('off');\nd.mo.dT=d.mo.dT*4;\nplanetfs.resetmGXYZ(d);\nplanetfs.setGroupInnerGravitation(d,{'earth','sphere2','box'});\nd.balance('Standard',0.2);\nif B.SET.fastGroupModel==1\n    d.setClump('earth');\n    d.setClump('sphere2');\n    d.setClump('box');\n    d.mo.aBF=1e100+d.mo.aBF*1e6;\n    planetfs.resetmGXYZ(d);\n    d.balance('Standard',0.5);\nend\nd.mo.dT=d.mo.dT/4;\n\n[escapeV,earthM,earthR]=planetfs.getEscapeSpeed(d,'earth');\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_EarthMoon3.m<pre><code>clear;\nload('TempModel/EarthMoon2.mat');\nd.calculateData();\nd.mo.setGPU('off');\nB.setUIoutput();\nd=B.d;\nd.getModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\nd.mo.isHeat=1;%calculate heat in the model\n\nvisRate=0.0000;\nd.mo.mVis=d.mo.mVis*visRate;\nd.mo.mVY(d.GROUP.earth)=0;\nd.mo.mVY(d.GROUP.sphere2)=5e3;\nd.mo.mVX(d.GROUP.box)=-3e3;\nplanetfs.setZeroMomentum(d);\n%----------set the drawing of result during iterations\nshowType='mV';\nd.showB=4;%only frame is shown\n\ngroupCenter=planetfs.getGroupCenter(d);%record the center of each group\nearthCenter=groupCenter.earth;\nsphere2Center=groupCenter.sphere2;\nboxCenter=groupCenter.box;\n%----------end set the drawing of result during iterations\ngpuStatus=d.mo.setGPU('auto');\ntotalCircle=100;\n\ncalGInterval=2;%gravitation calculation interval\nrecordInterval=2;%recordStatus interval\nd.mo.dT=d.mo.dT*4;\nd.tic(totalCircle);\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    for j=1:100\n        %---------computing\n        d.balance();\n        if mod(j,calGInterval)==0\n            planetfs.resetmGXYZ(d);\n            if B.SET.fastGroupModel==1\n                planetfs.setGroupOuterGravitation(d,{'earth','sphere2','box'});\n            else\n                planetfs.setModelGravitation(d);\n            end\n        end\n\n        %---------limit space\n        sphereR=B.SET.spaceSize*sqrt(2)/2;\n        planetfs.limitElementInSphere(d,sphereR);\n\n        %---------record data\n        if mod(j,recordInterval)==0\n            groupCenter=planetfs.getGroupCenter(d);\n            earthCenter=[earthCenter;groupCenter.earth];\n            sphere2Center=[sphere2Center;groupCenter.sphere2];\n            boxCenter=[boxCenter;groupCenter.box];\n            d.recordStatus();\n        end\n    end\n    %---------show the result\n    d.figureNumber=d.show(showType);\n    view(0,90);\n    plot3(earthCenter(:,1),earthCenter(:,2),earthCenter(:,3),'-b');\n    plot3(sphere2Center(:,1),sphere2Center(:,2),sphere2Center(:,3),'-r');\n    plot3(boxCenter(:,1),boxCenter(:,2),boxCenter(:,3),'-k');\n\n    save([fName num2str(i) '.mat']);\n    pause(0.05);\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxCrush3Finish');\nsave(['TempModel/' B.name '3.mat'],'d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2020/HydraulicBlock/","title":"HydraulicBlock","text":"Step 1Step 2Step 3Step 4Step 5Step 6 user_L3HydraulicBlock1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='HydraulicBlock';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.001;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.25;%define distribution of ball radius, \nB.SET.border=0.01;\nB.SET.sampleW0=0.075;\nB.SET.sampleH0=0.15;\nB.sampleW=B.SET.sampleW0+B.SET.border*2;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=B.SET.sampleH0*1.15;\nB.boundaryRrate=0.999999;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=1;\nB.isSample=1;\nB.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\nd.showB=1;\n%--------------end initial model------------\n\n%----------remove overlap platen elements\nd.mo.setGPU('off');\ndelId=[d.GROUP.topPlaten(end-1:end);d.GROUP.botPlaten(end-1:end)];\nd.delElement(delId);\n%----------end remove overlap platen elements\n\n%---------remove elements around the sample %this part is new code @@@@@@@\ndelFilter=d.mo.aX&lt;B.SET.border|d.mo.aX&gt;B.SET.border+B.SET.sampleW0;\nsampleFilter=false(d.aNum,1);\nsampleFilter(d.GROUP.sample)=true;\ndelId=find(delFilter&amp;sampleFilter);\nd.delElement(delId);\nd.moveGroup('lefPlaten',B.SET.border,0,0);\nd.moveGroup('rigPlaten',-B.SET.border,0,0);\nlrPlatenId=[d.GROUP.lefPlaten;d.GROUP.rigPlaten];\nd.addFixId('X',lrPlatenId);\nd.addFixId('Y',lrPlatenId);\nd.addFixId('Z',lrPlatenId);\n%---------end remove elements around the sample\n\nd.mo.zeroBalance();\nd.mo.setShear('off');%because d.mo.isShear will be reset to 1 in d.delElement\n%---------- gravity sedimentation\nB.gravitySediment(1);%you may use B.gravitySediment(10); to increase sedimentation time (10)\nB.compactSample(5);%input is compaction time\nmfs.reduceGravity(d,5);\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.Rrate=1;\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_L3HydraulicBlock2.m<pre><code>%set the material of the model\nclear\nload('TempModel/HydraulicBlock1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off'); \n\ntopPlatenX=d.aX(d.GROUP.topPlaten);%record current position of top platen\ntopPlatenY=d.aY(d.GROUP.topPlaten);\ntopPlatenZ=d.aZ(d.GROUP.topPlaten);\nd.getModel();%get xyz from d.mo\n\n%make a crack with specified size\ncrackL=0.020;\ncx1=B.sampleW/2;\ncx2=B.sampleW/2;\ncz1=0.15/2-crackL/2;\ncz2=0.15/2+crackL/2;\nRrate=0.5;\nlineX=[cx1;cx2];\nlineY=zeros(size(lineX));\nlineZ=[cz1;cz2];\ncurveObj1=f.run('fun/make3DCurve.m',lineX,lineY,lineZ,B.ballR*0.1,Rrate);\nlineId=d.addElement(1,curveObj1,'wall');\nd.addGroup('crack',lineId);\nd.minusGroup('sample','crack',0);\nd.delElement(d.GROUP.crack);\n\nd.mo.aX(d.GROUP.topPlaten)=topPlatenX;%move the top platen to its original position\nd.mo.aY(d.GROUP.topPlaten)=topPlatenY;\nd.mo.aZ(d.GROUP.topPlaten)=topPlatenZ;\n\nsZ=d.mo.aZ(d.GROUP.sample);\nsR=d.mo.aR(d.GROUP.sample);\ntopFilter=(sZ+sR)&gt;max(sZ)-B.SET.sampleH0*0.05;\nd.delElement(find(topFilter));\nd.resetStatus();\n\n%d.show('aR');return\n\n%----------set material of model\nmatTxt=load('Mats\\ZhaoRock.txt');\nrate=1;\nmatTxt(4)=matTxt(4)*rate;\nmatTxt(3)=matTxt(3)*rate;\nmatTxt(1)=matTxt(1)*0.1;%lower \nMats{1,1}=material('RockHydro',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\n%----------end set material of model\nd.showB=2;\n\n%---------assign material to layers and balance the model\nd.mo.setShear('on');\nd.removeFixId('Z',[d.GROUP.lefPlaten;d.GROUP.rigPlaten]);\nd.addFixId('Z',[d.GROUP.lefPlaten(end-1),d.GROUP.lefPlaten(end),d.GROUP.rigPlaten(end-1),d.GROUP.rigPlaten(end)]);\nd.setGroupMat('sample','RockHydro');\nd.groupMat2Model({'sample'});\nplatenIds=[d.GROUP.lefPlaten;d.GROUP.rigPlaten];\nd.mo.aKN(platenIds)=d.mo.aKN(platenIds)*0.1;\nd.mo.aMUp(platenIds)=0;\nd.mo.mGZ(:)=0;\n\n%---------start computing\nd.mo.setGPU('auto');\nd.breakGroup();\nd.connectGroup('sample');\nd.removePrestress(0.1);\nd.balance('Standard',2);\nd.connectGroup('sample');\nd.removePrestress(0.1);\nd.balance('Standard',2);\n\nd.show();\n%---------end assign material to layers and balance the model1. \n\n%---------save the data\nd.mo.setGPU('off'); \nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3HydraulicBlock3.m<pre><code>%apply initial stress on the model\nclear\nload('TempModel/HydraulicBlock2.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off'); \nd.getModel();\nd.resetStatus();\nd.mo.isCrack=1;\n\n%move the left and right platens to their original position\nd.moveGroup('lefPlaten',-B.SET.border,0,0);\nd.moveGroup('rigPlaten',B.SET.border,0,0);\n\nsZ=d.mo.aZ(d.GROUP.sample);\ntopFilter=sZ&gt;0.15;\nd.addGroup('topBlock',find(topFilter));\narea=B.SET.sampleW0*B.ballR*2;\nstresszz=-20e6;\ngZ=area*stresszz/sum(d.mo.mM(d.GROUP.topBlock));\nd.mo.mGZ(d.GROUP.topBlock)=d.mo.mM(d.GROUP.topBlock)*gZ;\n\nd.mo.aMUp(d.GROUP.topBlock)=2;\nd.mo.aKS(d.GROUP.topBlock)=d.mo.aKS(d.GROUP.topBlock)*5;\nplatens=[d.GROUP.lefPlaten;d.GROUP.lefPlaten;d.GROUP.lefPlaten;d.GROUP.lefPlaten;];\nd.addGroup('platens',platens);\nd.setClump('platens');\n\nd.mo.setGPU('auto'); \nd.balance('Standard',4);\n%---------end assign material to layers and balance the model1. \n\n%---------save the data\nd.mo.setGPU('off');\nd.show();\nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3HydraulicBlock4.m<pre><code>clear\nfs.randSeed(2);\nload('TempModel/HydraulicBlock3.mat');\nB.setUIoutput();\n%--------initializing the model\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\n\nd.showB=2;\nd.deleteConnection('boundary');\nd.Rrate=1;\nd.getModel();\nd.resetStatus();\nd.mo.isCrack=1;\nd.mo.mVis=d.mo.mVis./d.vRate*0.01;%use uniform viscosity\n\npx1=B.sampleW/2;%\npz1=0.15/2;\ncenter_pId=d.findNearestId(px1,0,pz1);\ntop_pId=d.findNearestId(px1,0,B.sampleH-B.ballR*2);\n\nd.Rrate=1;\n\n%start building pore system\np=pore(d);\np.fluid_k=0.4615e-4;p.fluid_c=870;%use oil property, default value is water\n\nd.mo.dT=d.mo.dT*2;%\np.dT=p.d.mo.dT;\np.pathLimitRate=0.3;%path diameter&lt;pathLimitRate*ballR will be connection\np.isCouple=1;%fluid-solid coupling\np.setInitialPores();\np.setPlaten('fix');%fix the coordinates of platens\n%---------end initializing the model\n\n%----------set the drawing of result during iterations\n%setappdata(0,'simpleFigure',1);%use simpleFigure to increase drawing speed\n%setappdata(0,'ballRate',0.01);%use small ballRate to increase drawing speed\nshowType='*pPressure';\nd.figureNumber=1;\n%----------end set the drawing of result during iterations\n\n%d.show('Crack');hold all;d.show('--');\n\n%---------calculate connection diameter and flow K\nk=0.00000001;%permeability factor\n%---------end calcualte connection diameter and flow K\nk=k/10;%change the permeability\n\npPressureHigh=100e6;%use greater pressure\npPressure0=0.1e6;%use greater pressure\n%---------setting of the simulation\ntotalCircle=5;\ndPressure=pPressureHigh/totalCircle;\nstepNum=100;\nfName=['data/step/2' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nd.tic(totalCircle);%record the initial time of loop\n%d.mo.setGPU('on');\n%p.setGPU('on');\n\nfor i=1:totalCircle\n    pPressure=dPressure*totalCircle;\n    for j=1:stepNum\n        cDiameterFlow=p.cDiameter+p.cDiameterAdd;%calculate the diameter of\n        cDiameterFlow(cDiameterFlow&lt;0)=0;\n        p.cKFlow=cDiameterFlow*k./p.cPathLength;%default K of throat is determined by diameter and path length\n        cbFilter=d.mo.bFilter(p.cnIndex);%bonded filter of cList\n        p.cKFlow(cbFilter)=p.cKFlow(cbFilter)/100;%K of intacted bond is very small\n        p.setBallPressure(center_pId,pPressure);%set the pressure in the crack\n        p.setBallPressure(top_pId,pPressure0);%set the pressure around the sample\n\n        p.balance();\n        d.balance(10);\n        d.recordStatus();\n    end\n    cla;%clear the previous figure\n    d.show('Displacement');\n    %p.show(showType);\n    %pause(0.1);%pause and show the figure\n    save([fName num2str(i) '.mat']);%save data\n    d.recordStatus();\n    d.toc();\nend\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '4.mat'],'B','d');\nsave(['TempModel/' B.name '4R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n%user_makeGIF\n</code></pre> user_L3HydraulicBlockTest2.m<pre><code>%set the material of the model\nclear\nload('TempModel/HydraulicBlock1.mat');\nB.setUIoutput();%set output of message\nB.name=[B.name 'Test'];\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off'); \ntopPlatenX=d.aX(d.GROUP.topPlaten);%record current position of top platen\ntopPlatenY=d.aY(d.GROUP.topPlaten);\ntopPlatenZ=d.aZ(d.GROUP.topPlaten);\nd.getModel();%get xyz from d.mo\n\nd.mo.aX(d.GROUP.topPlaten)=topPlatenX;%move the top platen to its original position\nd.mo.aY(d.GROUP.topPlaten)=topPlatenY;\nd.mo.aZ(d.GROUP.topPlaten)=topPlatenZ;\n\n%cut the top part of the sample\nsZ=d.mo.aZ(d.GROUP.sample);\nsR=d.mo.aR(d.GROUP.sample);\ntopFilter=(sZ+sR)&gt;max(sZ)-B.SET.sampleH0*0.05;\nd.delElement(find(topFilter));\nd.resetStatus();\n\n%----------set material of model\nmatTxt=load('Mats\\ZhaoRock.txt');\nrate=1;\nmatTxt(4)=matTxt(4)*rate;\nmatTxt(3)=matTxt(3)*rate;\nmatTxt(1)=matTxt(1);%*0.1\nMats{1,1}=material('RockHydro',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\n%----------end set material of model\nd.showB=2;\n\n%---------assign material to layers and balance the model\nd.mo.setShear('on');\nd.removeFixId('Z',[d.GROUP.lefPlaten;d.GROUP.rigPlaten]);%left and right platen will be flexible\nd.addFixId('Z',[d.GROUP.lefPlaten(end-1),d.GROUP.lefPlaten(end),d.GROUP.rigPlaten(end-1),d.GROUP.rigPlaten(end)]);%corner of platen will be fixed\nd.setGroupMat('sample','RockHydro');\nd.groupMat2Model({'sample'});\nplatenIds=[d.GROUP.lefPlaten;d.GROUP.rigPlaten];\nd.mo.aKN(platenIds)=d.mo.aKN(platenIds)*0.1;\nd.mo.aMUp(platenIds)=0;\nd.mo.mGZ(:)=0;\n\n%---------start computing\nd.mo.setGPU('auto');\nd.breakGroup();%break all connections and glue the sample\nd.connectGroup('sample');\nd.removePrestress(0.1);%remove internal stress of sample\nd.balance('Standard',0.5);\nd.connectGroup('sample');\nd.removePrestress(0.1);%remove internal stress of sample\nd.balance('Standard',0.5);\n\nd.show();\n%---------end assign material to layers and balance the model1. \n\n%---------save the data\nd.mo.setGPU('off'); \nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_L3HydraulicBlockTest3.m<pre><code>clear\nfs.randSeed(2);\nload('TempModel/HydraulicBlockTest2.mat');\nB.setUIoutput();%set output of message\n\n%-------------set parameters of test\nTestType='Tu';\nisClumpBlock=1;%is pressure block a clump or not\nstressZZ=0e6;%do not change it in Tu and Cu tests\nstressXX=0;%do not change it in Tu and Cu tests\nstressXXFinal=0e6;%do not change it in Tu and Cu tests\n\nif strcmp(TestType,'Cu')\n    stressZZFinal=-200e6;\n    borderRate=0.125;\nelse\n    stressZZFinal=20e6;\n    borderRate=0.25;\nend\n%-------------end set parameters of test\ntotalCircle=20;\nstepNum=100;%10~500, 100 is OK\nbalanceRate=0.001;%0.001~0.01, 0.002 is OK\n\n%---------set the boundary condition\nB.name=[B.name TestType];\nd=B.d;\nd.calculateData();\nd.getModel();\nd.resetStatus();\nd.mo.isCrack=1;\n\nd.mo.setGPU('off'); \nd.moveGroup('lefPlaten',-B.SET.border,0,0);\nd.moveGroup('rigPlaten',B.SET.border,0,0);\n\n%-------set the pressure blocks\nborderW=B.SET.sampleW0*borderRate;%set the block size\nborderH=B.SET.sampleH0*borderRate;\nsFilter=false(d.aNum,1);%filter of sample\nsFilter(d.GROUP.sample)=true;\n\nlefFilter=d.mo.aX&lt;B.SET.border+borderW;%filter of left block\nlefId=find(lefFilter&amp;sFilter);%Id of left block of sample\nrigFilter=d.mo.aX&gt;B.sampleW-B.SET.border-borderW;\nrigId=find(rigFilter&amp;sFilter);\nbotFilter=d.mo.aZ&lt;borderH;\nbotId=find(botFilter&amp;sFilter);\ntopFilter=d.mo.aZ&gt;max(d.mo.aZ(d.GROUP.sample))-borderH;\ntopId=find(topFilter&amp;sFilter);\ncenterId=find(sFilter&amp;~(botFilter|topFilter|lefFilter|rigFilter));\n\nd.addGroup('botBlock',botId);%define groups\nd.addGroup('topBlock',topId);\nd.addGroup('lefBlock',lefId);\nd.addGroup('rigBlock',rigId);\nd.addGroup('centerBlock',centerId);\n\n%-------end set the pressure blocks\n\n%define the parameters of loop\nTs=[];\nbotBlockForceZZ=[];\ntopBlockForceZZ=[];\nlefBlockForceXX=[];\nrigBlockForceXX=[];\nbotBoundaryForceZZ=[];\ncenter_botBlockForceZZ=[];\ncenter_topBlockForceZZ=[];\n\ndStressZZ=(stressZZFinal-stressZZ)/(totalCircle*stepNum);%increment of stress\ndStressXX=(stressXXFinal-stressXX)/(totalCircle*stepNum);\nd.tic(totalCircle*stepNum);\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\n\n%when this value is 1, the top and bottom block will become clumps\n%which will not break and generate boundary friction\nif isClumpBlock==1\nd.setClump('topBlock');\nd.setClump('botBlock');\nend\n\nd.connectGroup('botPlaten','botB');%bond the bottom side of the sample\nd.connectGroup('botPlaten','sample');\nd.mo.zeroBalance();\n%increase strength of bottom elements in Tu test\nif strcmp(TestType,'Tu')\n    botId=[d.GROUP.botBlock;d.GROUP.botPlaten;d.GROUP.botB];\n    d.mo.aBF(botId)=d.mo.aBF(botId)*1000;\nend\n\nsave([fName '0.mat']);%return;\ngpuStatus=d.mo.setGPU('auto');\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    for j=1:stepNum\n        stressZZ=stressZZ+dStressZZ;\n        areaZZ=B.SET.sampleW0*B.ballR*2;\n        forceZZ=areaZZ*stressZZ;\n\n        %fs.setBodyForce(d,d.GROUP.botBlock,'Z',-forceZZ);\n        fs.setBodyForce(d,d.GROUP.topBlock,'Z',forceZZ);\n\n        stressXX=stressXX+dStressXX;\n        areaXX=B.SET.sampleH0*B.ballR*2;\n        forceXX=areaXX*stressXX;\n\n        fs.setBodyForce(d,d.GROUP.lefBlock,'X',-forceXX);\n        fs.setBodyForce(d,d.GROUP.rigBlock,'X',forceXX);\n\n        d.balance('Standard',balanceRate);\n        d.recordStatus();\n\n        %record the parameters and draw the curve later\n        nFZ=d.mo.nFnZ+d.mo.nFsZ;\n        botBlockForcezz=gather(sum(sum(nFZ(d.GROUP.botBlock,:))));\n        topBlockForcezz=gather(sum(sum(nFZ(d.GROUP.topBlock,:))));\n\n        nFX=d.mo.nFnX+d.mo.nFsX;\n        lefBlockForcexx=gather(sum(sum(nFX(d.GROUP.lefBlock,:))));\n        rigBlockForcexx=gather(sum(sum(nFX(d.GROUP.rigBlock,:))));\n\n        FCB=d.getGroupForce('centerBlock','botBlock');\n        FCT=d.getGroupForce('centerBlock','topBlock');\n\n        Ts=[Ts,d.mo.totalT];\n        botBlockForceZZ=[botBlockForceZZ;botBlockForcezz];\n        topBlockForceZZ=[topBlockForceZZ;topBlockForcezz];\n        lefBlockForceXX=[lefBlockForceXX;lefBlockForcexx];\n        rigBlockForceXX=[rigBlockForceXX;rigBlockForcexx];\n        botBoundaryForceZZ=[botBoundaryForceZZ;d.status.bottomBFs(end,3)];\n\n        center_botBlockForceZZ=[center_botBlockForceZZ;FCB.totalFZ];\n        center_topBlockForceZZ=[center_topBlockForceZZ;FCT.totalFZ];\n\n        d.toc();%show the note of time\n    end\n    d.clearData(1);%clear data before saving\n    save([fName num2str(i) '.mat']);\n    d.calculateData();%calculate the data for further calculation\nend\n\n%draw the curves\nareaZZcenter=B.SET.sampleW0*(1-borderRate*2)*B.ballR*2;\n\nfigure\nplot(Ts,botBlockForceZZ/areaZZ);\nhold all\nplot(Ts,-topBlockForceZZ/areaZZ);\nplot(Ts,lefBlockForceXX/areaXX);\nplot(Ts,rigBlockForceXX/areaXX);\n\nplot(Ts,botBoundaryForceZZ/areaZZ,'--b');\nplot(Ts,-center_botBlockForceZZ/areaZZcenter,'--r');\nplot(Ts,center_topBlockForceZZ/areaZZcenter,'--g');\nlegend('botBlock','topBlock','lefBlock','rigBlock','botBoundary','botP','topP');\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2020/Pore3dTest/","title":"Pore3dTest","text":"Step 1Step 2Step 3 user_Pore3dTest1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box();%declare a box object\nB.name='pore3dTest';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.01;\nB.sampleW=0.2;%width, length, height, average radius\nB.sampleL=0.2;\nB.sampleH=0.22;\nB.setType('TriaxialCompression');\nB.buildInitialModel();%B.show();\nd=B.d;\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\n\n%---------- gravity sedimentation\nB.gravitySediment(1);%you may use B.gravitySediment(10); to increase sedimentation time (10)\n%B.compactSample(2);%input is compaction time\nmfs.reduceGravity(B.d,10);\nd.balance('Standard',2);\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.show('-aR');\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n%d.show('-Id');\n</code></pre> user_Pore3dTest2.m<pre><code>clear;\nload('TempModel\\pore3dTest1.mat');\n%-----------initializing the model\nB.setUIoutput();\nd=B.d;  \nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();\nd.resetStatus();\n%-----------end initializing the model\n\n%------------initializing pore system\np=build2pore(d);\np.setInitialPores();\n\np.fKFlow(:)=1e-8;\np.setTimeStep();%you may run p.setTimeStep() when you update p.fKFlow\n%------------initializing top/bottom pressure BC\nrefP=p.Fluids.refP;%reference pressure, for default fluid water, refP=101.325e3 Pa\npPressure=1e3*9.8*(max(p.pZ)-p.pZ)+refP;%botPre=refP, topPre=refP+rho*g*h\npLim=[min(pPressure),max(pPressure)];\n\ntopPId=unique(p.facetP(p.GROUP.topF,1));topPre=pLim(2);\nbotPId=unique(p.facetP(p.GROUP.botF,1));botPre=pLim(1);\n%------------setting of the simulation\nrate=40;\nsteps=400;totalCircle=80;\np.dT=p.dT*rate;%here just for demo, may reduce accuracy\nprefix=['data\\step\\',B.name,'-'];\nsave([prefix,'loopNum','0','.mat']);\nQtop=0;Qbot=0;\ntic;\np.setGPU('on');\n%d.showFilter('SlideY',0.5,1);\nfor idx=(1:totalCircle)\n    for ii=1:steps\n    p.pPressure(topPId)=topPre;%apply top Pressure BC\n    p.pPressure(botPId)=botPre;%apply bottom Pressure BC\n    p.setPressure();\n    p.balance();\n    end\n    assert(~any(isnan(gather(p.pPressure))),'boom shakalaka!!!!');%check if correct\n    poreFlowMass=p.fFlowMass(p.poreFacetIdx);\n    Qtop=gather(sum(poreFlowMass(topPId,:),'all'));%record boundary flow mass\n    Qbot=gather(sum(poreFlowMass(botPId,:),'all'));\n    %p.show('pPressure');pause(0.1);\n    save([prefix,'loopNum',num2str(idx),'.mat']);\n    t=toc;\n    fs.disp(['Step ',num2str(idx),'/',num2str(totalCircle),' finished, elapsed ',num2str(round(t/60,1)),' minutes.']);\n    fs.disp(['Balance Rate: ',num2str(-Qbot/Qtop*100),' percent']);\nend\n\nrho=1e3;\nQ=Qbot/p.dT/rho;\nA=0.2*0.2;J=1;\nK=Q/(A*J);\nfs.disp(['Permeability coefficient of the sample is ' num2str(K)]);\n\nsave(['TempModel\\',B.name,'2.mat'],'B','d','p');\n</code></pre> user_Pore3dTest2_crack.m<pre><code>clear;\nload('TempModel\\pore3dTest1.mat');\n%-----------initializing the model\nB.setUIoutput();\nd=B.d;  \nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();\nd.resetStatus();\n%-----------end initializing the model\n\n%------------initializing pore system\np=build2pore(d);\np.setInitialPores();\n\np.fKFlow(:)=1e-8;\np.setTimeStep();%you may run p.setTimeStep() when you update p.fKFlow\n%------------initializing top/bottom pressure BC\nrefP=p.Fluids.refP;%reference pressure, for default fluid water, refP=101.325e3 Pa\npPressure=1e3*9.8*(max(p.pZ)-p.pZ)+refP;%botPre=refP, topPre=refP+rho*g*h\npLim=[min(pPressure),max(pPressure)];\n\ntopPId=unique(p.facetP(p.GROUP.topF,1));topPre=pLim(2);\nbotPId=unique(p.facetP(p.GROUP.botF,1));botPre=pLim(1);\n%------------setting of the crack\n%crack1: [cosd(-30),0,sind(-30)],-0.02\n%crack2: [cosd(60),0,sind(60)],0.18\n%crack3: [0,-0.1,1];0.07\nv1=[cosd(-30),0,sind(-30)];z1=-0.02;\nbF1=abs(v1(1)*d.mo.aX+v1(2)*d.mo.aY+v1(3)*(d.mo.aZ-z1))/sqrt(v1*v1')&lt;d.mo.aR;\n\nv2=[cosd(60),0,sind(60)];z2=0.18;\nbF2=abs(v2(1)*d.mo.aX+v2(2)*d.mo.aY+v2(3)*(d.mo.aZ-z2))/sqrt(v2*v2')&lt;d.mo.aR;\n\nv3=[0,-0.1,1];z3=0.07;\nbF3=abs(v3(1)*d.mo.aX+v3(2)*d.mo.aY+v3(3)*(d.mo.aZ-z3))/sqrt(v3*v3')&lt;d.mo.aR;\n\nbF=bF1|bF2|bF3;\nfacetF=any(bF(p.fList),2);\np.fKFlow(facetF)=p.fKFlow(facetF)*100;\n\n%------------setting of the simulation\nrate=1;steps=1000;totalCircle=20;\np.dT=p.dT*rate;%here just for demo, may reduce accuracy\nprefix=['data\\step\\',B.name,'-',num2str(B.ballR),'-','cracktest2-'];\nsave([prefix,'loopNum','0','.mat']);\nQtop=0;Qbot=0;\ntic;\np.setGPU('on');\nd.showFilter('SlideY',0.5,1);\nfor idx=(1:totalCircle)\n    for ii=1:steps\n    p.pPressure(topPId)=topPre;%apply top Pressure BC\n    p.pPressure(botPId)=botPre;%apply bottom Pressure BC\n    p.setPressure();\n    p.balance();\n    end\n    assert(~any(isnan(gather(p.pPressure))),'boom shakalaka!!!!');%check if correct\n    poreFlowMass=p.fFlowMass(p.poreFacetIdx);\n    Qtop=gather(sum(poreFlowMass(topPId,:),'all'));%record boundary flow mass\n    Qbot=gather(sum(poreFlowMass(botPId,:),'all'));\n    %h=p.show('pPressure');h(2).EdgeColor='none';drawnow\n    pfs3d.sliceplot(p);\n    save([prefix,'loopNum',num2str(idx),'.mat']);\n    t=toc;\n    fs.disp(['Step ',num2str(idx),'/',num2str(totalCircle),' finished, elapsed ',num2str(round(t/60,1)),' minutes.']);\n    fs.disp(['Balance Rate: ',num2str(-Qbot/Qtop*100),' percent']);\nend\n\nrho=1e3;\nQ=Qbot/p.dT/rho;\nA=0.2*0.2;J=1;\nK=Q/(A*J);\nfs.disp(['Permeability coefficient of the sample is ' num2str(K)]);\n\nsave(['TempModel\\',B.name,'2.mat'],'B','d','p');\n</code></pre>"},{"location":"examples/examples2020/PoreTunnel/","title":"PoreTunnel","text":"Step 1Step 2Step 3 user_PoreTunnel1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='PoreTunnel';\n%--------------initial model------------\nB.GPUstatus='auto';\nB.ballR=0.2;\nB.isShear=0;\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=50;\nB.sampleL=0;\nB.sampleH=50;\nB.boundaryRrate=0.999999;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=1;\nB.isSample=1;\nB.setType('Fluid');\nB.buildInitialModel();%B.show();\nd=B.d;\n%--------------end initial model------------\nB.gravitySediment();\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxTunnelNew1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_PoreTunnel2.m<pre><code>%set the material of the model\nclear\nload('TempModel/PoreTunnel1.mat');\n%------------initialize model-------------------\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.mo.aX(d.GROUP.topPlaten)=d.aX(d.GROUP.topPlaten);\nd.mo.aY(d.GROUP.topPlaten)=d.aY(d.GROUP.topPlaten);\nd.mo.aZ(d.GROUP.topPlaten)=d.aZ(d.GROUP.topPlaten);\nplatenId=[d.GROUP.lefPlaten;d.GROUP.rigPlaten;d.GROUP.botPlaten;d.GROUP.topPlaten];\nd.addFixId('XYZ',platenId);\nd.getModel();%get xyz from d.mo\n%------------end initialize model-------------------\n\n%-------------set new material----------------\nmatTxt=load('Mats\\StrongSoil.txt');\nMats{1,1}=material('StrongSoil',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt=load('Mats\\Tunnel.txt');\nMats{1,2}=material('TunnelMat',matTxt,B.ballR);\nMats{1,2}.Id=2;\nd.Mats=Mats;\n%-------------end set new material----------------\n\n%--------------------make tunnel-----------------------\nsampleId=d.getGroupId('sample');\nsX=d.mo.aX(sampleId);sY=d.mo.aY(sampleId);sZ=d.mo.aZ(sampleId);sR=d.mo.aR(sampleId);\ndipD=0;dipA=90;radius=4;height=30;\ncolumnFilter=f.run('fun/getColumnFilter.m',sX,sY,sZ,dipD,dipA,radius+B.ballR,height);\nd.addGroup('Tunnel',find(columnFilter));\ntunnelId=d.getGroupId('Tunnel');\nd.delElement(tunnelId);\n\n%--------------------end make tunnel-----------------------\n\nB.name='PoreTunnel';\ninnerR=radius;\nlayerNum=3;\nminBallR=min(sR);\nRrate=0.8;\nringObj=f.run('fun/makeRing.m',innerR,layerNum,minBallR,Rrate);\nringObj=mfs.rotate(ringObj,'YZ',90);%rotate the group along XZ plane\n\nringId=d.addElement(1,ringObj);%add a slope boundary\nd.addGroup('ring',ringId);%add a new group\nd.setClump('ring');%set the pile clump\nd.moveGroup('ring',(max(sX)+min(sX))/2,0,(max(sZ)+min(sZ))/2);\nd.minusGroup('sample','ring',0.4);%remove overlap elements from sample\n\nd.setGroupMat('sample','StrongSoil');\nd.setGroupMat('ring','TunnelMat');\n\nd.groupMat2Model({'sample','ring'},1);\n\nd.breakGroup();\nd.mo.zeroBalance();\nmfs.randomV(d,1:d.mNum);\n\nd.mo.setShear('off');\nd.mo.setGPU('auto');\nd.balance('Standard',2);\n\nd.balanceBondedModel();\nfor i=1:50\nd.connectGroup('sample');\nd.removePrestress(0.1);%remove internal stress of sample\nd.balance('Standard',0.5);\nend\nd.mo.setShear('on');\nd.balance('Standard',5);\n\n%--------------------save data-----------------------\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n%--------------------end save data-----------------------\n\nd.calculateData();\nd.show('ZDisplacement');\n</code></pre> user_PoreTunnel3.m<pre><code>clear\nfs.randSeed(2);\nload('TempModel/PoreTunnel2.mat');\nB.setUIoutput();\n%--------initializing the model\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.showB=0;\nd.Rrate=1;\nd.getModel();\nd.resetStatus();\nd.mo.isCrack=1;\nd.mo.mVis=d.mo.mVis./d.vRate*0.1;%use uniform viscosity,0.01~0.1\n\ntop_pId=d.findNearestId(B.sampleW/2,0,B.sampleH);\nd.Rrate=0.2;\n\n%start building pore system\np=pore(d);\np.fluid_k=0.4615e-4;p.fluid_c=870;%use oil property, default value is water\n\nd.mo.dT=d.mo.dT;%\np.dT=p.d.mo.dT;\np.pathLimitRate=0.3;%path diameter&lt;pathLimitRate*ballR will be connection\np.isCouple=1;%fluid-solid coupling\np.setInitialPores();\np.setPlaten('fix');%fix the coordinates of platens\n%---------end initializing the model\n\n%----------set the drawing of result during iterations\nshowType='*pPressure';\nd.figureNumber=1;\n%----------end set the drawing of result during iterations\n\n%d.show('Crack');hold all;d.show('--');\n\n%---------calculate connection diameter and flow K\nk=0.00000001;%permeability factor\n%---------end calcualte connection diameter and flow K\nk=k*5000;%change the permeability\n\npPressureHigh=2e6;%use greater pressure\npPressure0=0.1e6;%use greater pressure\n%---------setting of the simulation\ntotalCircle=100;\ndPressure=pPressureHigh/totalCircle;\nstepNum=200;\nfName=['data/step/2' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nd.tic(totalCircle);%record the initial time of loop6547145258/*963\n\nfor i=1:totalCircle\n    pPressure=dPressure*totalCircle;\n    for j=1:stepNum\n        cDiameterFlow=p.cDiameter+p.cDiameterAdd;%calculate the diameter of\n        cDiameterFlow(cDiameterFlow&lt;0)=0;\n        p.cKFlow=cDiameterFlow*k./p.cPathLength;%default K of throat is determined by diameter and path length\n        cbFilter=d.mo.bFilter(p.cnIndex);%bonded filter of cList\n        p.cKFlow(cbFilter)=p.cKFlow(cbFilter)/2;%K of intacted bond is smaller\n\n        p.setBallPressure(top_pId,pPressure0);%set the pressure around the sample\n\n        %set pressure\n        tunnel_cx=mean(d.mo.aX(d.GROUP.ring));\n        tunnel_cz=mean(d.mo.aZ(d.GROUP.ring));\n        x1=tunnel_cx-10;\n        x2=tunnel_cx+10;\n        z1=tunnel_cz-2.5;\n        z2=tunnel_cz+2.5;\n        border=0.3;\n        pIdLeft=pfs.getRectAreaPoreId(p,x1-border,z1,x1+border,z2);\n        p.setPressure(pIdLeft,pPressureHigh);\n        pIdRight=pfs.getRectAreaPoreId(p,x2-border,z1,x2+border,z2);\n        p.setPressure(pIdRight,pPressureHigh);\n        %end set pressure\n\n        p.balance();\n        d.balance(10);\n        d.recordStatus();\n        if j==0\n            d.show('mV');\n            return\n        end\n    end\n    cla;%clear the previous figure\n    p.show('pPressure');\n\n    %p.show(showType);\n    %pause(0.1);%pause and show the figure\n    save([fName num2str(i) '.mat']);%save data\n    d.recordStatus();\n    d.toc();\nend\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '4.mat'],'B','d');\nsave(['TempModel/' B.name '4R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n%user_makeGIF\n</code></pre>"},{"location":"examples/examples2020/RollerNew/","title":"RollerNew","text":"Step 1Step 2 user_Roller1New.m<pre><code>%@@@@run the file user_RollerAuthorization.m@@@@\n%ufs.setTitle('MatDEM\u6eda\u7b52\u6405\u62cc\u5b9e\u65f6\u6a21\u62df');\ntubeR=tubeInnerR+ballR;\ntubeL=tubeInnerL+ballR*2;\ninnerWidth=tubeInnerR*0.3;\nsampleSide=tubeInnerR*1.1;\nsampleLength=tubeL*0.9;\n\ndistriRate=0.2;\nsampleObj=mfs.denseModel(1+distriRate,@mfs.makeBox,sampleSide,sampleLength,sampleSide,ballR);\nrandRRate=(1-distriRate)+rand(size(sampleObj.R))*distriRate*2;\nsampleObj.R=sampleObj.R.*randRRate;\nsampleObj=mfs.moveObj2Origin(sampleObj);\n%fs.showObj(sampleObj);return\n\ntubeObj=mfs.denseModel(Rrate,@mfs.makeTube,tubeR+(1-Rrate)*ballR*2,tubeL,ballR);\ntubeObj=mfs.moveObj2Origin(tubeObj);\n\nplaneObj=mfs.denseModel(Rrate,@mfs.makeBox,innerWidth,tubeL,ballR,ballR);\nplaneObj.Z=planeObj.Z-ballR;\nplaneObj=mfs.rotate(planeObj,'YZ',90);\nplaneObj=mfs.move(planeObj,tubeInnerR-innerWidth,0,-tubeL/2);\nplaneObj=mfs.rotateCopy(planeObj,60,6);%plane\ntubeObj=mfs.combineObj(tubeObj,planeObj);\n\nbacDiscObj=mfs.denseModel(Rrate,@mfs.makeDisc,tubeInnerR+(1-Rrate)*ballR*1,ballR);\nbacDiscObj=mfs.moveObj2Origin(bacDiscObj);\nbacDiscObj=mfs.move(bacDiscObj,0,0,-tubeInnerL/2-ballR);\nfroDiscObj=mfs.move(bacDiscObj,0,0,tubeInnerL+ballR*2);\n\ntubeObj=mfs.rotate(tubeObj,'YZ',90);\nbacDiscObj=mfs.rotate(bacDiscObj,'YZ',90);\nfroDiscObj=mfs.rotate(froDiscObj,'YZ',90);\n\ntubeOuterR=tubeR+ballR;\ndiscOuterL=max(bacDiscObj.Y)+ballR;\ntubeObj=mfs.move(tubeObj,tubeOuterR,discOuterL,tubeOuterR);\nbacDiscObj=mfs.move(bacDiscObj,tubeOuterR,discOuterL,tubeOuterR);\nfroDiscObj=mfs.move(froDiscObj,tubeOuterR,discOuterL,tubeOuterR);\nsampleObj=mfs.move(sampleObj,tubeOuterR,discOuterL,tubeOuterR);\n% \n% fs.showObj(tubeObj,'add');\n% hold all;\n% fs.showObj(bacDiscObj,'add');\n% fs.showObj(sampleObj);\n% fs.generalView();\n% return\n\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='Roller';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=ballR;\nB.isShear=0;\nB.isSingle=0;\nB.sampleW=tubeOuterR*2;\nB.sampleL=discOuterL*2;\nB.sampleH=tubeOuterR*2;\nB.SET.speed=speed;\nB.SET.totalCircle=totalCircle;\nB.SET.stepNum=stepNum;\nB.isSample=0;\nB.setType('botPlaten');\nB.buildInitialModel();\nd=B.d;\nd.mo.setGPU('off');\n\nmatTxt1=load('Mats\\rubber.txt');\nmatTxt1(1)=matTxt1(1)/200;\nMats{1,1}=material('rubber',matTxt1,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\nG=d.GROUP;\nd.delElement([G.lefB;G.rigB;G.froB;G.bacB;G.botB;G.topB]);\n\n[froDiscId,bacDiscId]=d.addElement(1,{froDiscObj,bacDiscObj},'wall');\nd.addGroup('froB',froDiscId);\nd.addGroup('bacB',bacDiscId);\n\ntubeId=d.addElement(1,tubeObj,'wall');\nd.addGroup('tube',tubeId);\n\ntubeX=d.aX(d.GROUP.tube);\nmeanTubeX=mean(tubeX);\nlefTubeId=tubeId(tubeX&lt;meanTubeX);\nrigTubeId=tubeId(tubeX&gt;=meanTubeX);\nd.addGroup('lefB',lefTubeId);\nd.addGroup('rigB',rigTubeId);\n\nsampleId=d.addElement(1,sampleObj,'model');\nd.addGroup('sample',sampleId);\nd.delElement('botPlaten');\nd.SET.Cx=tubeOuterR;\nd.SET.Cy=discOuterL;\nd.SET.Cz=tubeOuterR;\nd.groupMat2Model({'sample'},1);\n\nd.showB=2;\ncla\nd.showFilter('Group',{'tube','sample'},'aR');\n\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n</code></pre> user_Roller2New.m<pre><code>%@@@@run the file user_RollerAuthorization.m@@@@\nload('TempModel/Roller1.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\nd.showB=2;\nshowType='mV';\nd.showFilter('Group',{'tube','sample'});\nd.status.legendLocation='West';\n\nd.mo.setShear('off');\nd.setStandarddT();\nd.mo.dT=d.mo.dT*4;\n\ngpuStatus=d.mo.setGPU('auto');\n\ndAngle=B.SET.speed*d.mo.dT;%rotation angle per time step\n\ntotalCircle=B.SET.totalCircle;\nstepNum=B.SET.stepNum;\nd.tic(totalCircle);\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    for j=1:stepNum\n        d.rotateGroup('tube','XZ',dAngle,d.SET.Cx,d.SET.Cy,d.SET.Cz,'mo');\n        d.balance();\n    end\n    d.recordStatus();\n    d.showFilter('Group',{'tube','sample'});\n    d.figureNumber=d.show(showType);%shown in one figure\n    d.toc();%show the note of time\n    pause(0.05);\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxTunnelHeat2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n%--------------------end save data-----------------------\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2020/RollerNewPack/","title":"RollerNewPack","text":"Step 1Step 2Step 3 user_Roller1NewPack.m<pre><code>MatDEM_User_Code=1.75;%%%%%%%%TUYURF10%%DNUDDMA=MIwy%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%o5aHbNo5BI0HR0ygJZH3d5vgIniO5FhV3kIF1wUdGWO8pgROXEOUjVb22Qp0=QMFUTEwAlTmGL4skVInGdxtp5Y2jI=glRYQGchMoVImWQVp\nJUsuRdE04nbjFvl0cs1oytSRVHNbE2svmcVKSNzDnKjbTXaHGHZK\nSsIlndtWGJZ70bVSGVJmcV15=YUiSP4W\ncSTi=jsxJljtRMmZbwTZXhnqIV=1R1GKYSXb\ndsWy02gVPbmJpm5pZdDGz=JBZVuWTyk5ZbSS\naRViWqwPkZmuWhcVsbG=SGc15MlTznNdZUxU\nhxO2HbUx79JLMG3cUq0QcEmWaUs=uVZU\nyEkJMmcXLmak90V7Q2cF\nLmVFBT9Yu2lXibhGxHlaN2tGwcTWUGhZxG9GzZz3NHtbyGRksbrCxXPKsX5XqbbGRMtYbUxRzLUGFJtZenBNlUZWV0pbbWlxobZCVRhcLSJN0aZ2xAlZZmWItklZ\nLJkmp=GU50YdihDyhbLFVHpwnk9cbknErcZRQmzhWJlZZhsSTzndkpUmSWpNcZgF0Wp6FKlFOMqnWlKZJNmS\nISWOLWSpNhWYYXyF9licZiSRxV=cZ2z51qnYYmPRptEPLGs5\nY9pQdpGTm30WcZiZWpOPBpvYomJGT=a05FGZtcmh8m=tbbzVMyKzX53b\nIdlYBYId5ZMc9a1bpOVbnl2PGzkv3lio2oXliyH=\nb0i0dV9tCmd5CnYIhKWWxYm1kS0Z0ztbOFuMcZsSymdV3GMxsaWGVdimxILhh5UUqlYRtlmYxmVT1xkSFZ2klBZlmVcKkpYNshSdU=nHLJgG\n1q9yVmvMkdWYamYoEKnXJi49ZVqVyqXmO3cZPb0T0WlW9i5l\nmAChZxP5YhZJWSWylmzU1dwcRYNZkGom=2uXlTZbw=OxdFWmmpgsGsGL9ZFaUVchTGsW0XXmt3itYkLRFU1bVuisGPWhGu2c4LpZ\nL=hm8JkaZYiEp5=msaWtG9tW9bclmg5FmhULbwDw\nuI7Pp=lVyhplupz8iduRvBZwcLW0YlAbmLSbFbWOEdSYHaHXZSDY\nLTccGWGGtl0uVxJkkJ5=J9pupy2mGabMcLLZb2iF0yt1=lU49J0pVF020mGmXGOYTcZVbLwbHG0WokhupJ5V\nwxWYuV2TipWPtZ2cuI3b0FGdlN0bwlHKwxWYuV2TipGL2ADL2kyOlAHbh5WZ\nK4Ylim7EtmsGZ1Z95YVLW0Wq=iq25YMdIY9Twk9XGp21a9aNdUTJmhmm\nYmFj=R=GAlKzxYs0S9LiSaJjl1ctyZVnWMYuuZRGnVbulcl2UVKNlbp2iRYlibVCXhYS0cxmGFL0sZNSmxUAzbpTStamxKQXENLSlLJm2xathbFG\n8PNPKWYY3OXpNpdi5ukZ3GYmjJyNlm1mR2YYWbNpNRq0iTiazaGckp12\nXNlJGphRWZNtYGRlLEdmPLmbpYHLwpb1EtwnRIWjJoYkNzWS1jYXL=ybYitLzaPMOzslbGAtJm2J\nmobOxlmxWE2moxL=Tjrm1dSPRNpCCm=2JMbMqZlpzbdIw5mnyGVWNcYvEpTiMcw12JXmix1YJYhw\nRHhdvVmco4CdzVnZi1OWyZk9w8OkSawinJdmFapP1xWSWZIn\nkYYJ9RORYjUzGEhz2Wsi22h0yqmlahoMT1FZJlIYdNdc8WS9isa3Gmuz\n3ympRVO5aMMhPE7nisWvYYaRJJYkHjWj93qiZRTIZEW9mnWzs3tmWRc8\nUVRGVnJ=nZiblc0UiPSdsThdtWVCt3JT\n9ZYTUNy2HX51TKPj0paYJtmXXCIMZR=7ieNGWlYShKxGmRYs\njjlXCiqXR1ZdNVZdsJdZx1=KdPDW00mUPsnW1pmQFTdVlZc9ZdY1VTYGJyyPSWz0mVqiHG1L15JdZ9JY\nUXZd9=ViytoyJ1TmK1jEYHTY9sR20j8lFVZEYGmidmLaxjVljV09c3Y23cXYNiJk0t1JcTYW2a1bklJEulPldCRW\nYb3UYnbdETc02dzUZpkc13E0NyiRlXxumt90l9qU9z1RV91VxmhZykUjPlmEJmkVjlLWicXvYCSY2=aL2YdmZbGc\nG12pdVdJbxcwHlHylWhSQbRpYZZuWiGq2tK1bTVTVGjWlXPWcQYV9dlZn7m0EP2SJdILcBcJvX9CP3zldVcx\nJSA=\nC2C2AIdZOLgplV=Plihnuqik=9Y9VQcacYJ0m2H3\nGhSCAYG9bk=UI7sb\nCscqjRh2WwdTqgY523=QcomcNyTdZniYVGyJKTis=bkS\nwLTo1Pa3JmYyzNOmpImamzB2bSVVHa2w\nX1ONZZlmonxdAJmwciSb=mLlh=Vp\nJSByZXR1cm4=\n7ZsIgMuJTLISwH0XQXRgT52MmJGJG=ZtbgLhZzZZ=kZzYoZuKlWxSEW4jxS9\ngQa9svdJliYUk4XBhjgPAlmWYJ=GEbVzmat2ye9=XiYJ\nJyyV=s5F2vJOW=Qsm152lUPg\n0LL0kLL1bgStQWttSSt0WSttSpi0Lw=ba00LL9FLLQ0b0LStG=tWSllW\nHZQgIWaRzVHXdyVPGAR0ldGCZzQZybVh532czBOUBIzlc2SIhzICVFlVHGNvQaWRblJIGVvoZ2cRkBXWhggxCkcs5bSb0VZWY5uFC0cyDF2m9d3RUGdh\n9bumJWmtDQI=sYbSwYFE\nmuTHT7yWPEBaZMlQ\nAjJVpXVnlT1diV9cMsZhbzLn=s0JSR2R\nMZcp0jyLQVzmPcFXtSbsQk9XZMx2=GaB\nP1dmjYUlwJQzGKJz=1cFiOFlIVdGnb51\nll1lFNOwTRL5cTRZH0JcGlZy\nmbsp0RmWbJDlbkUZJvRVX2axDhNYDHLNT9VcHLx0\nN5V=4U1l1wVu=01O30HSQDb2OWcgRdcU\nsPQtpgTbBWhDc=5S=zcV\nSVCKW3RUnicUHHQY7VGgev=bW4JzuVRG\nybR1u=YGW1pCOUGRaiKl0xbp=ZxWgkb0\n4PJZEkS7\nbCNvVJ0d=obkd2O=yZmKLl4QQZ3V\nhTM14c9X0V4CKRwdRGyykWZFYsyk920dxbYlnl=G0eFJ\nXEKxhxPtdJkHWgb7ve=VgXBHTCQKxwVMQDQC\nSbVHxW9JbxSl5iYtze1WlylYY03xJiVyoLFXXthMc9Gwcm0QlMJGEwiOY0SR\n9kET30TOEu9FceTzYkRs\nYh1zXZTtNNCTdD05\nSQ=5VP=QH7RU9Q2k\nkb2tubHJEXCl7Qm5sWkVycvIidUIyLjYzZl5ZCFCKw=t2cHtGRm4tZ0VkRu9kLGc7ZmJWRoxydT50OT=\nYJQWRsYlJmJnchxzMiLqN30YWkdGZsa3x2cEbiIWcmRyNk2RT3llbpcm1jYjZ2t2YFfGloWes12wsadR24lOhFGFESPd\nmEbnloyQHtCXc9vcC5mKknMZTZ1YZkJ2GSd=Ecmw\nGBCRCNjdm9hY0lSKkFSLzlGY=yZQnJjZGdHLGdpO\ndlHmRx9tSYYQhkpLKyiV=RYWCdx4okmbV07SdSWwk1VZGZWxc8bH\ndkcQ7UYSuRp2ZZngEGSJXiA=GZLW1VJndH09\n0PuWH=lC=RC8WtY1KHZ1WAV5kVTVBFJZiLiZ\ntlXVYW9Im=Kt=bWgV1HYWDlVRuVbZoJQ\n==AblZGV1JWZJRWP0VnYllEZoQXdiVGW80WZh5GV1JWZYlyO\n0hWdJVGXWmUVPb+UlibYRRTmWV0cSd=71ZRWnkYpoSUXGJZY\nkW2bQC7SJosZYHlYZmUxJWWdIVG3dRi=HbJ1kLBl\nmyYZdC2HpcUR9lyUZlcti12JRZli=pWYwhEwkzJ5\n2tWZ5ZbwcR2hG=WtWK1YwbVG7GlHsEbRJpbUkChwo0lJlc=VbJsTFxm0c8LN\nBlEJ5n2cKklcLXhRd3Csx1GKRhHYSWztJbbTkB9W\n0RZGWK5uscZCUZVit9JbG2Gd4UQp=xZWTYt0\nEUe9UUN3=kQILu1dOWyRViGZdU19\nFRP2VURp55LykcMOk=0Nx2yTZ1XR\nY7dumVUF0kmTSLe0nNTNU3V=kRUc\ngu=2b=c2wRO3yQ0j\nGFbj\nscyJZlCN5nzYahGV9X3bR0mBl3sJdsGtVXyZOsycgypJJ9yBdHHLU1ndJyhb\nEb8KCnXZSYuS4xwn1zsLyGbJzCcN9dC01YWJQ=iJ1g1VB7VKmhZdWWZlmQcC\nhJDZ4NtUHKBggam2cltdmSdEnhNdCCdulIWHYknScLmRySlQWbgOhI3LNusFEc1k=IGScxndCSYky1L1mblUdCGcFwSgZTVsuEdiiM57plVQd0l8lCcJnJiHdd0Ij2ZsoVbimZtAbWiTdzg1LXJtnBd2\n</code></pre> user_Roller2NewPack.m<pre><code>MatDEM_User_Code=1.76;%%%%%%%%XRYNNRVE%%DM=cyAyAMjMz%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%o5aHbNo5BI0HR0ygJZH3d5vgIniO5FhV3kIF1wUdGWO8pgROXEOUjVb22Qp0=QMFUTEwAlTmGL4skVInGdxtp5Y2jI=glRYQGchMoVImWQVp\ny2s2OFYV\n2WGC3ZLJbJVxxFlhsvhyS0vkvBhUx1OTZVbSj2W2\nytc0vdQg=pdlHThcCVZVEXL=\nRuOQz0mk\nGNh2YsREdmEGKXFoOL1xjZWV\nviO=db0oHFVZRdyS=u4blZywmlUM\n1o=5vHtWTeGJcSLm6GgUcRR7AvXIpWZZbZi=emkUAvdR\n03=MmcZGgu=97zQg\nsVGzlXlc1aC=zn8ddPWG\n3LnVABibyxXL7hHIvZHUCJ0d3=9cidcGwmcpRGkhZ712ZncWVndvhyJ=\nEClvdYVD=lRb3jbRLnXzZVnGb=dsQydNZn25PNplntRM\npchRH2UebpmP1VXycdcz7bJG2W5diOocc1WmhZ1l\n1mV3Vm=lc1YpcZ7ZybnTn5mJiVglWVGUjOZtZ1c=\nTmXtnmjvnHoGvWKZKFdNsLZRILZV\nVkKlNuYWRXcuQGdkGR7c1QhK\nDCR2SRl5b25Z0NtQbkqLUuOv\ndwSdKH17FYzGd5TudcW2dV1GKUC0VdvEZc8tV0dC\nuDWunSmwTS1ul2Glt3CyUXXpgCWvhSXgymG=h2ZVcw5baARZbB8dJRRZcN5OZRRbcoRZQ5VRQ0Rb\nPYm2D0NFxxpuW0cOcdW2vTRkVUvClGZQbbHG0uFR\n=VTBXt2=AwblbOcdUuR9d1dOyMUQFJX5\nZpR0YlRpKsxyAL3N=2a3sDbWF=mQ\nJumbItJ4umbKhQxhCcDk5VgVcX0dySYZSnBvSITGBpZ7GbWXkkOWZbC1VCZUHhN02IdWnJoXMdmCczGMdnC0luCZ3v0EzCdnCd9kbYW0cJvX\n1gO2UlXbnJyY35wdWFVKORycX0hZZ7YyJ2WguWSR\ngEsZW1vO0Nmc0lXbg==ZzJsYjl0Y\nB9ggCcIcaSvA=4B0H6mMcS=Z0tZU\nmGRRbNaAglcgBOCLE2V3Z5LVh1FT5scQCdy0diZ8Kl4nnT5c5dCZS0LSbVkcougtJVAWilZiHLHRFlwDwd=gMJwIGCyFeQCLJsRs\nkZgKNGSgWtbgIusIAiEDmACEI=Yg\n=gbSAmIA=QgZ\nScmdApQ0gIoRYXLGXYZlIQ27Nzg8\nd8CcGSpnI7IbJduLvo3GsGVwBgXQXGlgK=ZLZRdwyhXkXBdJMd0ynHnsncYd\nQaIAgkH1uvHyvKldcIVBOKhWHz3G\n2JagmB=blGQ9GpdggMGgIbS=iZauWgclHQV0g98XkdbwAy7I\npyMEIo=QHUZMCGwBIAOHu1M=\n5GlZ\nuRlv3V0vyZcQ2JJFm=ZOyHAZ=Wo5\ncmsVRh0Yh5OCydkkxFKG\nQkhjVFu=nJchn2cxcj2S=bG0HZbkWvKJEgpdhbVpbJatHlNLIXvoRRjl\nW1giJLys1d3dhmbJzuRVCNk2QWDhkUGTEsQd2n4AlSJUZLXvI90mI=dKJmnt\nybYCK1c=TdB5SwnIG1iSymdG5SFBLcudnMgduhgstczYkbcRJWJCJyQWWHkBmUnxmdcJLdI0KkhnhJpTCIzJUkFJ2lXJWynX0jdHhlVRKL0byLvLtnvpZgbpIOb0VyQmlH52mW2FUSUVJAMaodlZ0Qz0\nSLSIWLSLSLSLSLCZXLtAh0t4t1h0t0t0t1tMl0t1t0tE21t0t0t000t1LSLSLSZWLCZSLCJSLSLS\nsjN7pxlEEFdRYGQLWYWdmGKX\n</code></pre> user_RollerAuthorization.m<pre><code>%\u8fd9\u4e2a\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u6388\u6743\u4ee3\u7801\u7684\u4f7f\u7528\nclear\n%step0: set the parameters for simulation\nballR=0.02;%ball radius\nRrate=0.8;%0.5~0\ntubeInnerR=1;\ntubeInnerL=0.2;\nspeed=90;%rotation degree per second\n\ntotalCircle=1000;%loop time\nstepNum=100;%step per loop\n\n%step1: build the initial model\nMatDEMfile('user_Roller1New.m');%original code\n%MatDEMfile('user_Roller1NewPack.m');%the NewPack needs authorized\n%step2: start the iteration\nMatDEMfile('user_Roller2New.m');%original code\n%MatDEMfile('user_Roller2NewPack.m');%the NewPack needs authorized\n</code></pre>"},{"location":"examples/examples2020/ScrewConveyor/","title":"ScrewConveyor","text":"Step 1Step 2Step 3 user_ScrewConveyor1.m<pre><code>%make a box model, which will be put on a slope\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='Screw';\nB.GPUstatus='auto';\nB.ballR=0.005;\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=0.2;\nB.sampleL=0.2;\nB.sampleH=0.4;\nB.type='topPlaten';\nB.setType();\nB.buildInitialModel();%B.show();\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\nd.mo.setGPU('auto');\n%--------------end initial model------------\nB.gravitySediment();\n%mfs.reduceGravity(d,2);%reduce the gravity of element\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.show('aR');\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_ScrewConveyor2.m<pre><code>load('TempModel/Screw1.mat');\nballR=B.ballR;\nhelixInnerR=ballR;\nhelixOuterR=0.1;\nhelixHeight=1;\ncircle=6;\nRrate=0.8;\n\nB.d.mo.setGPU('off');\nsampleObj=B.d.group2Obj('sample');%make struct object from a group\nfilter=mfs.getColumnFilter(sampleObj.X, sampleObj.Y, sampleObj.Z, 0, 0, helixOuterR*0.95, B.sampleH);\nsampleObj=mfs.filterObj(sampleObj,filter);\nobjCenter=mfs.getObjCenter(sampleObj);\nsampleObj.X=sampleObj.X-objCenter.x;\nsampleObj.Y=sampleObj.Y-objCenter.y;\n\nhelixObj=f.run('fun/makeHelix.m',helixInnerR,helixOuterR,helixHeight,circle,ballR,Rrate);\n\nfigure;fs.showObj(helixObj);\nreturn\ntubeR=helixOuterR+ballR*Rrate;\ntubeH=helixHeight;\ntubeObj=mfs.makeTube2(tubeR,tubeH+ballR*(1-Rrate)*2,ballR*Rrate);\ntubeObj.R=tubeObj.R/Rrate;\n\n\nreturn\ndiscObj=mfs.makeDisc(tubeR,ballR,Rrate);\n%discObj.Z=discObj.Z-ballR;\n\nrotateAngle=-90;\nhelixObj=mfs.rotate(helixObj,'XZ',rotateAngle);\ntubeObj=mfs.rotate(tubeObj,'XZ',rotateAngle);\ndiscObj=mfs.rotate(discObj,'XZ',rotateAngle);\nsampleObj=mfs.rotate(sampleObj,'XZ',rotateAngle);\n\nframe=mfs.getObjFrame(tubeObj);\nbaseH=frame.width*0.2;\nhelixObj=mfs.move(helixObj,-frame.left,-frame.front,-frame.bottom+baseH);\ntubeObj=mfs.move(tubeObj,-frame.left,-frame.front,-frame.bottom+baseH);\ndiscObj=mfs.move(discObj,-frame.left,-frame.front,-frame.bottom+baseH);\nsampleObj=mfs.move(sampleObj,-frame.left,-frame.front,-frame.bottom+baseH);\n\n%make a big box for the simulation\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='Screw';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=ballR;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.sampleW=frame.width+baseH;%width, length, height, average radius\nB.sampleL=frame.length;%when L is zero, it is a 2-dimensional model\nB.sampleH=frame.height+baseH;\nB.type='botPlaten';%add a top platen to compact model\nB.isSample=0;\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();\nd=B.d;\nd.mo.setGPU('off');\n\nmatTxt1=load('Mats\\rubber.txt');\nmatTxt1(1)=matTxt1(1)/100;\nMats{1,1}=material('rubber',matTxt1,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\n\nd.showB=3;\n[helixId,tubeId,discId]=d.addElement(1,{helixObj,tubeObj,discObj},'wall');\nd.addGroup('helix',helixId);%add a new group\nd.addGroup('tube',tubeId);%add a new group\nd.addGroup('disc',discId);%add a new group\nsampleId=d.addElement(1,sampleObj);\nd.addGroup('sample',sampleId);%add a new group\nd.minusGroup('sample','helix',0.6);\nd.minusGroup('sample','disc',0.6);\nd.delElement(d.GROUP.botPlaten);\nd.mo.setGPU('auto');\nd.balance('Standard');\n\nd.showFilter('SlideY',0.5,1,'aR');\n%------------record data\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data in d\nd.recordCalHour('BoxSlopeNet2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_ScrewConveyor3.m<pre><code>clear;\nload('TempModel/Screw2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\n\nd.mo.isHeat=1;%calculate heat in the model\nvisRate=0.05;\nd.mo.mVis=d.mo.mVis*visRate;%use low viscosity for dynamic simulation\nd.setStandarddT();\nd.mo.setShear('off');\nd.breakGroup();\nd.setStandarddT();\nd.mo.dT=d.mo.dT*4;\n\nshowType='mV';\nd.showFilter('Group',{'sample','helix'});\nfigureNumber=d.show(showType);\nd.figureNumber=figureNumber;\n\ntotalCircle=60;stepNum=100;\ntotalAngle=360*6;\ndAngle=-totalAngle/(totalCircle*stepNum);\nbalanceNum=2;%you may use greater stepNum and balanceNum\ndisp(['Total real time is ' num2str(d.mo.dT*totalCircle*stepNum*balanceNum)]);\n\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\ngpuStatus=d.mo.setGPU('auto');\nd.tic(totalCircle*stepNum);\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    for j=1:stepNum\n        d.rotateGroup('helix','YZ',dAngle);\n        d.balance(balanceNum);\n        d.recordStatus();\n        d.toc();%show the note of time\n    end\n    d.showFilter();\n    d.showFilter('Group',{'sample','helix'});\n    d.show(showType);\n    d.clearData(1);%clear data before saving\n    save([fName num2str(i) '.mat']);\n    d.calculateData();%calculate the data for further calculation\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2021/BallInFrame/","title":"BallInFrame","text":"Step 1 user_BallInFrame.m<pre><code>clear\n%-----parameters-----\ndiameter=0.1;%define particle size\nmNum=20;%define number of particle, 2~20\nVmax=10;%define the speed of particle, 5~20\nisCement=0;%particles are cement when they are in compression,0 or 1\n\nvisRate=0;%define the viscosity\nd=build();\nd.setUIoutput();\nd.name='BallInFrame';\n%-----define struct data of model and boundary-----\nV=diameter*(1:mNum)';\nmR=diameter*(1+rand(mNum,1))/2;\nboObj.X=0;boObj.Y=0;boObj.Z=diameter*-2;boObj.R=diameter/2;\nd.aX=[V;boObj.X;boObj.X(end)];%add a virtual element\nd.aY=[V;boObj.Y;boObj.Y(end)];\nd.aZ=[V;boObj.Z;boObj.Z(end)];\nd.aR=[mR;boObj.R;boObj.R(end)/4];\n%-----define material-----\nballMat=material('ball');\nballMat.setMaterial(7e6,0.15,1.5e5,1e6,1,diameter,1500);\nd.addMaterial(ballMat);\n%-----initialize d-----\nd.vRate=visRate;%rate of viscosity (0-1)\nd.aNum=mNum+2;d.mNum=mNum;\nd.aMatId=ones(size(d.aR))*ballMat.Id;\nd.g=0;%gravity acceleration\nd.setBuild();\nd.setModel();\nd.mo.isShear=0;\nframe.minX=0;frame.maxX=diameter*mNum;\nframe.minY=0;frame.maxY=diameter*mNum;\nframe.minZ=0;frame.maxZ=diameter*mNum;\nd.mo.frame=frame;%define the shown frame\n%define the rigid frame\nd.mo.afterBalance='f=obj.frame;fs.limitFrame(obj.dem,1:obj.mNum,f.minX,f.maxX,f.minY,f.maxY,f.minZ,f.maxZ);';\nif isCement==1\n    d.mo.afterBalance=[d.mo.afterBalance 'obj.reCement();'];\nend\n%-----numerical simulation-----\nd.mo.mVX=Vmax*rand(mNum,1);d.mo.mVY=Vmax*rand(mNum,1);d.mo.mVZ=Vmax*rand(mNum,1);\ntotalCircle=100;\nd.mo.dT=d.mo.dT*4;\nd.figureNumber=d.show('aR');\nfor i=1:totalCircle\n    d.balance(2,5);\n    d.show('-aR');\nend\nd.show();\n</code></pre>"},{"location":"examples/examples2021/BoxCompaction/","title":"BoxCompaction","text":"Step 1Step 2Step 3 user_BoxCompaction1.m<pre><code>clear;\nfs.randSeed(2);\nsampleFileName='';\n%sampleFileName='TempModel/BoxTakeGroup2.mat';\nSET.sampleW=0.152;SET.sampleH=0.120;\n%----------set of the sand sample\nif isempty(sampleFileName)\n    hRate=1.02;% box is bigger a bit, 1.0\n    grainDensity=2650;\n    sampleW=0.152;sampleL=0;totalM=250e-3;\n    %minmum diameter, maximum diameter,\n    grainSizeDistribution=[0.001,0.002,0.2;0.002,0.004,0.4;0.004,0.008,0.2;0.008,0.016,0.1]*2;\n    grainR=mfs.getGradationDiameter(grainSizeDistribution,totalM/grainDensity)/2;\n    SET=mfs.getBoxSample(grainR,sampleW,sampleL,hRate);\n    SET.isSample=1;\nelse\n    load(sampleFileName);\n    SET.ballR=sqrt(max(grainObj.R)*min(grainObj.R));\n    SET.isSample=0;\nend\n\nSET.grainDensity=grainDensity;\nSET.sampleFileName=sampleFileName;\nSET.boxDiameter=0.152;SET.boxHeight=0.120;\nSET.addHeight1=0.05;SET.addHeight2=0.01;\n%----------end set of the sand sample\n%----------set of the equipments\nSET.hammerMass=4.5;\nSET.hammerDistance=0.457;\nSET.hammerV=sqrt(SET.hammerDistance*2/9.8);\nSET.hammerDiameter=0.051;\nSET.hammerArea=pi*SET.hammerDiameter^2/4;\nSET.hammer2DAreaRate=SET.ballR*2/SET.hammerDiameter;\nSET.hammerMass2D=SET.hammerMass*SET.hammer2DAreaRate;\nSET.hammerGZ2D=SET.hammerMass2D*-9.8;\nSET.hammerX=0.0125;\n%----------end set of the equipments\n\n%----------start building the model\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='BoxCompaction';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=SET.ballR;\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=SET.boxDiameter;%inner diameter\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=SET.sampleH;%\nB.isSample=SET.isSample;\nB.SET=SET;\nB.platenStatus=[0;0;0;0;0;1];%topPlaten\nB.buildInitialModel();%B.show();\nB.setUIoutput();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n\nif isempty(sampleFileName)\n    sampleNum=length(d.GROUP.sample);\n    d.mo.setGPU('off');\n    d.delElement(SET.grainNum+1:sampleNum);\n    sId=d.GROUP.sample;\n    d.aR(sId)=grainR;\n    d.mo.aR(sId)=grainR;\n    d.groupMat2Model({'sample'},1);%apply the material\n    d.mo.setNearbyBall();\n    d.breakGroup();\n    B.convert2D(B.ballR);%change ball properties to 2D\nelse\n    d.GROUP.sample=d.addElement(1,grainObj);\n    d.setClump();\n    d.SET.ballArea=grainObj.ballArea;\nend\n%d.mo.setShear('off');\n\nd.mo.aMUp(:)=0.5;%increase friction coefficient to increase porosity\nd.mo.setGPU('auto');\n\n%---------- gravity sedimentation\nB.gravitySediment();%you may use B.gravitySediment(10); to increase sedimentation time (10)\nd.show('mV');\n%return\n%mfs.reduceGravity(d,2);\n%------------return and save result--------------\nporosity=mfs.get2DPorosity(d,0,B.sampleW,0,B.sampleH/2);\nd.status.dispEnergy();%display the energy of the model\nd.show('aR');\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxCompaction2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxCompaction1.mat');\nB.setUIoutput();%set the output\nd=B.d;\nd.calculateData();%calculate data\nd.mo.setGPU('off');%close the GPU calculation\nd.getModel();%get xyz from d.mo\n%---------------delele elements on the top\nSET=B.SET;\n\n%--------------assign new material\nmatTxt=load('Mats\\Soil1.txt');%load material file\nMats{1,1}=material('Soil1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;%assign new material\nd.groupMat2Model({'sample'},1);%apply the new material\nif isempty(SET.sampleFileName)\nd.mo.mM=B.SET.grainDensity*(4/3*pi*d.mo.aR(1:d.mNum).^3);\nB.convert2D(B.ballR);%change ball properties to 2D\nend\n\n%------------set of compaction @@@@@@@@@@@@@@\nplatenId=[d.GROUP.lefPlaten;d.GROUP.rigPlaten;d.GROUP.botPlaten;d.GROUP.topPlaten];\nd.mo.aMUp(platenId)=0;\n\ntopX=d.mo.aX(d.GROUP.topPlaten);\ntopFilter=topX&gt;SET.hammerX&amp;topX&lt;SET.hammerX+SET.hammerDiameter;\nd.addGroup('hammer1',d.GROUP.topPlaten(topFilter));\n\ntopFilter=topX&lt;SET.boxDiameter-SET.hammerX&amp;topX&gt;SET.boxDiameter-SET.hammerX-SET.hammerDiameter;\nd.addGroup('hammer2',d.GROUP.topPlaten(topFilter));\n\nhammer1Rate=ones(size(d.GROUP.hammer1))/length(d.GROUP.hammer1);\nhammer2Rate=ones(size(d.GROUP.hammer2))/length(d.GROUP.hammer2);\nSET.hammer1M0=d.mo.mM(d.GROUP.hammer1);\nSET.hammer2M0=d.mo.mM(d.GROUP.hammer2);\nSET.hammer1GZ0=d.mo.mGZ(d.GROUP.hammer1);\nSET.hammer2GZ0=d.mo.mGZ(d.GROUP.hammer2);\n\nSET.hammer1M=SET.hammerMass2D*hammer1Rate;\nSET.hammer2M=SET.hammerMass2D*hammer2Rate;\nSET.hammer1GZ=SET.hammerGZ2D*hammer1Rate;\nSET.hammer2GZ=SET.hammerGZ2D*hammer2Rate;\nB.SET=SET;\n%------------end set of compaction @@@@@@@@@@@@@@\n\nd.mo.setGPU('auto');\nd.mo.aMUp(d.GROUP.topPlaten)=0;\n%d.balanceBondedModel(0.5);\n%d.breakGroup();%break all connections and glue the sample\nd.balance('Standard',4);\nporosity=mfs.get2DPorosity(d,0,B.sampleW,0,B.sampleH/2);\nd.show('StressZZ');\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxCompaction3.m<pre><code>clear;\nload('TempModel/BoxCompaction2.mat');\nd.calculateData();\nd.mo.setGPU('off');\nB.setUIoutput();\nd=B.d;\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\n\nshowType='mV';\nfigureNumber=d.show(showType);\nd.figureNumber=figureNumber;\n\nSET=B.SET;\n%reduce stiffness of topPlaten\nd.mo.aKN(d.GROUP.topPlaten)=d.mo.aKN(d.GROUP.topPlaten)/10;\nd.mo.aKS(d.GROUP.topPlaten)=d.mo.aKS(d.GROUP.topPlaten)/10;\n\ntopPlatenVis0=d.mo.mVis(d.GROUP.topPlaten)/10;\nsampleVis0=d.mo.mVis(d.GROUP.sample)/10;\ntopPlatenVis1=d.mo.mVis(d.GROUP.topPlaten)/100;\nsampleVis1=d.mo.mVis(d.GROUP.sample)/100;\n\nd.setStandarddT();\n%d.mo.dT=d.mo.dT*4;\n\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\ngpuStatus=d.mo.setGPU('auto');\ncompactionNum=2;\ncompactionCircle=2;\nresetCircle=1;\nstandardBalanceNum=0.5;\nboxHeight=mean(d.mo.aZ(d.GROUP.topPlaten))-6*B.ballR;\nporosity=mfs.get2DPorosity(d,0,B.SET.boxDiameter,0,boxHeight);\nd.tic(compactionCircle*compactionNum*2+resetCircle*compactionNum*2);\n\nIStart=0;Iend=0;\nfor n=1:compactionNum\n    %compaction of left hammer\n    d.mo.mM(d.GROUP.hammer1)=SET.hammer1M;%assign load to left hammer\n    d.mo.mGZ(d.GROUP.hammer1)=SET.hammer1GZ;\n    d.mo.mVZ(d.GROUP.hammer1)=-SET.hammerV;\n    d.mo.mVis(d.GROUP.topPlaten)=topPlatenVis1;\n    d.mo.mVis(d.GROUP.sample)=sampleVis1;\n    d.show('mVis');\n\n    IStart=Iend+1;\n    Iend=IStart+compactionCircle-1;\n    for i=IStart:Iend\n        d.mo.setGPU(gpuStatus);\n        d.balance('Standard',standardBalanceNum);\n        d.clearData(1);\n        d.mo.setGPU('off');\n        save([fName num2str(i) '.mat'],'-v7.3');\n        d.calculateData();\n\n        porosity1=mfs.get2DPorosity(d,0,B.SET.boxDiameter,0,boxHeight);\n        porosity=[porosity;porosity1];\n        d.toc();%show the note of time;\n        d.show(showType);\n    end\n    %d.show('mV');return\n    %reset hammer1\n    d.mo.mM(d.GROUP.hammer1)=SET.hammer1M0;%reset left hammer\n    d.mo.mGZ(d.GROUP.hammer1)=SET.hammer1GZ0;\n    d.mo.mVis(d.GROUP.topPlaten)=topPlatenVis0;\n    d.mo.mVis(d.GROUP.sample)=sampleVis0;\n    IStart=Iend+1;\n    Iend=IStart+resetCircle-1;\n    for i=IStart:Iend\n        d.mo.setGPU(gpuStatus);\n        d.balance('Standard',standardBalanceNum);\n        d.clearData(1);\n        d.mo.setGPU('off');\n        save([fName num2str(i) '.mat'],'-v7.3');\n        d.calculateData();\n\n        porosity1=mfs.get2DPorosity(d,0,B.SET.boxDiameter,0,boxHeight);\n        porosity=[porosity;porosity1];\n        d.toc();%show the note of time;\n        d.show(showType);\n    end\n\n    %compaction of right hammer\n    d.mo.mM(d.GROUP.hammer2)=SET.hammer2M;\n    d.mo.mGZ(d.GROUP.hammer2)=SET.hammer2GZ;\n    d.mo.mVZ(d.GROUP.hammer2)=-SET.hammerV;\n    d.mo.mVis(d.GROUP.topPlaten)=topPlatenVis1;\n    d.mo.mVis(d.GROUP.sample)=sampleVis1;\n    IStart=Iend+1;\n    Iend=IStart+compactionCircle-1;\n    for i=IStart:Iend\n        d.mo.setGPU(gpuStatus);\n        d.balance('Standard',standardBalanceNum);\n        d.clearData(1);\n        d.mo.setGPU('off');\n        save([fName num2str(i) '.mat'],'-v7.3');\n        d.calculateData();\n\n        porosity1=mfs.get2DPorosity(d,0,B.SET.boxDiameter,0,boxHeight);\n        porosity=[porosity;porosity1];\n        d.toc();%show the note of time;\n        d.show(showType);\n    end\n    %reset hammer2\n    d.mo.mM(d.GROUP.hammer2)=SET.hammer2M0;%reset right hammer\n    d.mo.mGZ(d.GROUP.hammer2)=SET.hammer2GZ0;\n    d.mo.mVis(d.GROUP.topPlaten)=topPlatenVis0;\n    d.mo.mVis(d.GROUP.sample)=sampleVis1;\n    IStart=Iend+1;\n    Iend=IStart+resetCircle-1;\n    for i=IStart:Iend\n        d.mo.setGPU(gpuStatus);\n        d.balance('Standard',standardBalanceNum);\n        d.clearData(1);\n        d.mo.setGPU('off');\n        save([fName num2str(i) '.mat'],'-v7.3');\n        d.calculateData();\n\n        porosity1=mfs.get2DPorosity(d,0,B.SET.boxDiameter,0,boxHeight);\n        porosity=[porosity;porosity1];\n        d.toc();%show the note of time;\n        d.show(showType);\n    end\nend\nfigure;\nplot(porosity);\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxCrush3Finish');\nsave(['TempModel/' B.name '3.mat'],'d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2021/BoxPorosity/","title":"BoxPorosity","text":"Step 1Step 2 user_BoxPorosity2D3D.m<pre><code>fs.randSeed(1);%change it to get a different model,1,2,3\n%------------------set the grain size and box size------------------\nfriction=0.2;\ngrainDensity=2650;%density of the grains\nmoNum='auto';%divided into 'moNum' size groups (childModel),0~10,'auto'\n\nis2D=0;%0,1,@@@@@@@@@@\nisCement=0;%0 or 1,@@@@@@@@@@\ngrading=3;%1,2,3,4,@@@@@@@@@@\n%friction=0.5;%0,0.2,0.4,0.6,0.8,1,@@@@@@@@@@\n\nstrengthRate=1;%1,2,5,10,\ncompactionNum=10;%0,10,\ncompactionPressure=-1e4;\n\n%--------------------------\nrate='auto';%automatical balance rate in B.gravitySediment\nsizeRate=1;%\nhRate=1.15;% box is bigger a bit, 1.0~1.2\nhRate=hRate+isCement*0.1-is2D*0.1+friction*0.02;\nE=5e6;\nmatTxt2=[E,0.14,E*1e-3*strengthRate,E*1e-2*strengthRate,1,1800];%[20e6,0.14,20e3,200e3,0.8,1900];%load a un-trained material file\nshearStatus='on';\n%--------------------------\nif is2D==1\ntotalM=200e-3;%total mass of the sample\nsampleW=0.152;sampleL=0;%width and length of the model, height will be determined by totalM\nelse\nsRate=0.5;\ntotalM=1600e-3*sRate^3;%total mass of the sample\nsampleW=0.1*sRate;sampleL=0.1*sRate;%width and length of the model, height will be determined by totalM\nend\n%minmum diameter, maximum diameter, and mass rate\nif grading==1\ngrainSizeDistribution=[1,2,0.2;2,4,0.2;2,4,0.2;4,8,0.2;8,16,0.2;16,32,0.2;32,64,0.2]*1e-3*sizeRate*0.9;\nelseif grading==2\ngrainSizeDistribution=[2,4,0.2;2,4,0.2;4,8,0.2;8,16,0.2;16,32,0.2]*1e-3*sizeRate*0.6;\nelseif grading==3\ngrainSizeDistribution=[4,8,0.2;8,16,0.2]*1e-3*sizeRate*0.33;\nelseif grading==4\ngrainSizeDistribution=[8,8,0.2]*1e-3*sizeRate*0.31;\nend\n\n%determine the grain radius (grainR) according to the above data\ngrainR=mfs.getGradationDiameter(grainSizeDistribution,totalM/grainDensity)/2;\n\n%determine the box size\nSET=mfs.getBoxSample(grainR,sampleW,sampleL,hRate);\nSET.moNum=moNum;%divided into 'moNum' size groups\n%------------------end set the grain size and box size------------------\n\n%--------------initializing Box model------------\nB=obj_Box;%build a box object\nB.name='BoxCompactionShock';\nB.GPUstatus='auto';\nB.setType('topPlaten');\nB.PexpandRate=2;%incease platen size\nB.uniformGRate=1;\nB.buildInitialModel(SET);%B.show();\nB.setUIoutput();\n\nd=B.d;\nif B.sampleL==0\nB.convert2D(B.ballR);%change ball properties to 2D\nend\n\nMats{1,1}=material('soil1',matTxt2,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\nd.groupMat2Model();\n\nd.mo.setShear(shearStatus);\nd.mo.aMUp(:)=friction;\nd.showB=1;\nd.breakGroup();\n\n%--------------end initializing Box model----------\nB.gravitySediment(rate,isCement);%element will be cemented when true\nballDis=min(4,d.SET.packNum*0.1);\npZ=min(d.mo.aZ(d.GROUP.topPlaten))-B.ballR*2*ballDis;\nporosity=mfs.getPorosity(B,pZ);\nfs.disp(['Porosity of assemblage is ' num2str(porosity*100) '%']);\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-is2D' num2str(is2D) ',isCement' num2str(isCement) ',grading' num2str(grading) ',strengthRate' num2str(strengthRate) ',friction' num2str(friction) '.mat']);\n\n\nB.compactSample(compactionNum,compactionPressure);\nd.status.dispEnergy();%display the energy of the model\nd.setData();\nporosityC=mfs.getPorosity(B,pZ);\nfs.disp(['Porosity after compaction is ' num2str(porosityC*100) '%']);\n%d.showFilter('Group',{'sample'});\nd.show();\n\n%------------return and save result--------------\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-Compactis2D' num2str(is2D) ',isCement' num2str(isCement) ',grading' num2str(grading) ',strengthRate' num2str(strengthRate) ',friction' num2str(friction) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_BoxPorosity2D3Ds.m<pre><code>clear\nfrictions=0:0.2:1;\nfriction=frictions(1);\nMatDEMfile('examples2021/user_BoxPorosity2D3D.m');\nfriction=frictions(2);\nMatDEMfile('examples2021/user_BoxPorosity2D3D.m');\nfriction=frictions(3);\nMatDEMfile('examples2021/user_BoxPorosity2D3D.m');\nfriction=frictions(4);\nMatDEMfile('examples2021/user_BoxPorosity2D3D.m');\nfriction=frictions(5);\nMatDEMfile('examples2021/user_BoxPorosity2D3D.m');\nfriction=frictions(6);\nMatDEMfile('examples2021/user_BoxPorosity2D3D.m');\n</code></pre>"},{"location":"examples/examples2021/BoxTunnelNew/","title":"BoxTunnelNew","text":"Step 1Step 2Step 3 user_BoxTunnelNew1 - R.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='PoreTunnel';\nB.GPUstatus='auto';\nB.ballR=0.2;\nB.isShear=0\nB.isClump=0\nB.distriRate=0.2\nB.sampleW=40\nB.sampleL=0\nB.sampleH=40\nB.boundaryRrate=0.999999;\nB.BexpandRate=2;\nB.PexpandRate=1\nB.isSample=1;\nB.setType('Fluid');\nB.buildInitialModel();\nd=B.d;\n\n%----------remove overlap platen elements\n\n%----------end remove overlap platen elements\n%--------------end initial model------------\nB.gravitySediment();\n\n%------------return and save result--------------\n\nd.status.dispEnergy();%display the energy of the model\nd.clearData(1);%clear dependent data\nd.recordCalHour('PoreTunnelNew1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_BoxTunnelNew2 - R.m<pre><code>%set the material of the model\nclear\nload('TempModel/PoreTunnel1.mat');\n%------------initialize model-------------------\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\n\n\n\nd.getModel();%get xyz from d.m\n\n%------------end initialize model-------------------\n\n\n%-------------set new material----------------\nmatTxt=load('Mats\\SandYanjie.txt');\nMats{1,1}=material('SandYanjie',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\Tunnel.txt');\nMats{2,1}=material('Tunnel',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;\n%-------------end set new material----------------\n\n\n%--------------------make tunnel-----------------------\nsampleId=d.getGroupId('sample');\nsX=d.mo.aX(sampleId);sY=d.mo.aY(sampleId);sZ=d.mo.aZ(sampleId);sR=d.mo.aR(sampleId);\ndipD=0;dipA=90;radius=2.75;height=30;\ncolumnFilter=f.run('fun/getColumnFilter.m',sX,sY,sZ,dipD,dipA,radius+B.ballR,height);\nd.addGroup('Tunnel',find(columnFilter));\ntunnelId=d.getGroupId('Tunnel');\nd.delElement(tunnelId);\n\n\n%--------------------end make tunnel-----------------------\n\n\nB.name='PoreTunnel';\ninnerR=radius;\nlayerNum=2;\nminBallR=0.1;\nRrate=0.8;\n\n\nringObj=f.run('fun/makeRing.m',innerR,layerNum,minBallR,Rrate);\nringObj=mfs.rotate(ringObj,'YZ',90);%rotate the group along XZ plane\nringId=d.addElement(1,ringObj);%add a slope boundary\nd.addGroup('ring',ringId);%add a new group\nd.setClump('ring');%set the pile clump\nd.moveGroup('ring',(max(sX)+min(sX))/2,0,(max(sZ)+min(sZ))/2);\nd.minusGroup('sample','ring',0.4);%remove overlap elements from sample\n\n\nd.setGroupMat('sample','SandYanjie');\nd.setGroupMat('ring','Tunnel');\nd.groupMat2Model({'sample','ring'},2);\n\n\nR1=max(d.mo.aX(d.GROUP.ring))-min(d.mo.aX(d.GROUP.ring))+2*max(ringObj.R)\n\n\ntp=d.GROUP.topPlaten\nblockWidth=10;\ntpX=d.mo.aX(tp);\ntpXCenter=(max(tpX)+min(tpX))/2;\nblockFilter=tpX&gt;(tpXCenter-blockWidth/2)&amp;tpX&lt;(tpXCenter+blockWidth/2);\nblockId=tp(blockFilter);\nd.addGroup('block',blockId);\ngpuStatus=d.mo.setGPU('auto');\n\n\nd.breakGroup();\nd.mo.zeroBalance();\nd.mo.setShear('off');\nd.mo.setGPU('auto');\nd.balance('Standard',3)\n\n\nR2=max(d.mo.aX(d.GROUP.ring))-min(d.mo.aX(d.GROUP.ring))+2*max(ringObj.R)\n\n\nd.mo.mGZ(blockId)=d.mo.mGZ(blockId)+(-6e+05);\n\nd.breakGroup();\nd.mo.zeroBalance();\nd.mo.setShear('off');\nd.mo.setGPU('auto');\nd.balance('Standard',3)\n\n%d.mo.aX(d.GROUP.topPlaten)=d.aX(d.GROUP.topPlaten);\n%d.mo.aY(d.GROUP.topPlaten)=d.aY(d.GROUP.topPlaten);\n%d.mo.aZ(d.GROUP.topPlaten)=d.aZ(d.GROUP.topPlaten);\n%platenId=[d.GROUP.lefPlaten;d.GROUP.rigPlaten;d.GROUP.botPlaten;d.GROUP.topPlaten];\n%d.addFixId('XYZ',platenId);\n%d.getModel();%get xyz from d.mo\n\nR3=max(d.mo.aX(d.GROUP.ring))-min(d.mo.aX(d.GROUP.ring))+2*max(ringObj.R)\n\n\n%--------------------save data-----------------------\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxTunnel2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n%--------------------end save data-----------------------\n</code></pre> user_BoxTunnelNew3 - R.m<pre><code>%-------------------user_mxSlope3.m;\nclear;\nload('TempModel/PoreTunnel2.mat');\nB.setUIoutput();\n%------------initialize model-------------------\nd=B.d;\nd.calculateData();\nd.getModel();\nd.mo.setGPU('off');\nd.breakGroup();\nd.mo.setShear('on');\nd.Rrate=1;\nd.resetStatus();\nd.mo.isCrack=1;\nd.mo.mVis=d.mo.mVis./d.vRate*0.1;\ntop_pId=d.findNearestId(B.sampleW/2,0,B.sampleH);\n\n%start building pore system\np=pore(d);\np.fluid_k=0.4615e-4;p.fluid_c=870;%use oil property, default value is water\n\nd.mo.dT=d.mo.dT;%\np.dT=p.d.mo.dT;\np.pathLimitRate=0.3;%path diameter&lt;pathLimitRate*ballR will be connection\np.isCouple=1;%fluid-solid coupling\np.setInitialPores();\np.setPlaten('fix');%fix the coordinates of platens\n%---------end initializing the model\n\n%----------set the drawing of result during iterations\nshowType='*pPressure';\nd.figureNumber=1;\n%----------end set the drawing of result during iterations\n\n%d.show('Crack');hold all;d.show('--');\n\n%---------calculate connection diameter and flow K\nk=0.00001;%permeability factor\n%---------end calcualte connection diameter and flow K\n%k=k*5000;%change the permeability\n\npPressureHigh=3.25e+07;%use greater pressure\npPressure0=0.1e6;%use greater pressure\n%---------setting of the simulation\ntotalCircle=10;%default value is 100, use 10 to increase speed\ndPressure=pPressureHigh/totalCircle;\nstepNum=20;\nfName=['data/step/2' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nd.tic(totalCircle*stepNum);%record the initial time of loop6547145258/*963\nR4=zeros(totalCircle,1);\nSUM=zeros(totalCircle,1);\n\ntunnel_cx0=mean(d.mo.aX(d.GROUP.ring));\ntunnel_cz0=mean(d.mo.aZ(d.GROUP.ring));\n\n\n\n\nfor i=1:totalCircle\n   for j=1:stepNum\n        d.toc();\n        cDiameterFlow=p.cDiameter+p.cDiameterAdd;%calculate the diameter of\n        cDiameterFlow(cDiameterFlow&lt;0)=0;\n        p.cKFlow=cDiameterFlow*k./p.cPathLength;%default K of throat is determined by diameter and path length\n        cbFilter=d.mo.bFilter(p.cnIndex);%bonded filter of cList\n        p.cKFlow(cbFilter)=p.cKFlow(cbFilter)/2;%K of intacted bond is smaller\n        %set pressure\n        tunnel_cx=mean(d.mo.aX(d.GROUP.ring));\n        tunnel_cz=mean(d.mo.aZ(d.GROUP.ring));\n        x1=tunnel_cx-6.7;\n        x2=tunnel_cx+6.7;\n        z1=tunnel_cz-2.5;\n        z2=tunnel_cz+2.5;\n        border=0.6;\n        pIdLeft=pfs.getRectAreaPoreId(p,x1-border,z1,x1+border,z2);\n        p.setPressure(pIdLeft,pPressureHigh); \n       pIdRight=pfs.getRectAreaPoreId(p,x2-border,z1,x2+border,z2);\n\n        p.setPressure(pIdRight,pPressureHigh);\n        p.pDensity(pIdLeft)=1700;\n        p.pDensity(pIdRight)=1700;\n        %end set pressure\n        p.balance();\n       %d.mo.setShear('off');\n        d.balance();\n        d.recordStatus();\n    end\n    cla;%clear the previous figure\n    p.show('pPressure');\n    save([fName num2str(i) '.mat']);%save data\n    R4(i)=max(d.mo.aX(d.GROUP.ring))-min(d.mo.aX(d.GROUP.ring))+2*max(d.mo.aR(d.GROUP.ring));\n\n\n    save([fName num2str(i) '.mat']);%save data\n    d.recordStatus();\n\nend\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '4.mat'],'B','d');\nsave(['TempModel/' B.name '4R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n%user_makeGIF\n</code></pre>"},{"location":"examples/examples2021/HighSizeRatio/","title":"HighSizeRatio","text":"Step 1Step 2 user_HighSizeRatio.m<pre><code>clear;\nfs.randSeed(4);%change it to get a different model\ntype=1;%1: tiny sample (~30s); 2: small sample (~8min); 3: big sample (several hours)\n%------------------set the grain size and box size------------------\ngrainDensity=2650;%density of the grains\nmoNum=4;%divided into 'moNum' size groups (childModel)\nhRate=1.00;% box is bigger a bit, 1.0~1.2\nif type==1\ntotalM=1.2e-3;%total mass of the sample\nsampleW=0.01;sampleL=0.01;%width and length of the model, height will be determined by totalM\n%minmum diameter, maximum diameter, and mass rate\ngrainSizeDistribution=[1,2,0.1;2,4,0.2;4,8,0.2;8,16,0.2;16,32,0.2]*0.4e-3;\n%grainSizeDistribution=[1,2,0.1;2,4,0.2]*0.5e-3;\nelseif type==2\ntotalM=30e-3;sampleW=0.03;sampleL=0.03;\ngrainSizeDistribution=[1,2,0.1;2,4,0.2;4,8,0.2;8,16,0.2;16,32,0.2;32,64,0.2]*0.5e-3;\nelseif type==3\ntotalM=200e-3;sampleW=0.05;sampleL=0.05;\ngrainSizeDistribution=[1,2,0.1;2,4,0.2;4,8,0.2;8,16,0.2;16,32,0.2;32,64,0.2]*0.5e-3;\nelseif type==4\ntotalM=1180e-3;sampleW=0.1;sampleL=0.1;\ngrainSizeDistribution=[1,2,0.1;2,4,0.2;4,8,0.2;8,16,0.2;16,32,0.2;32,64,0.2;64,128,0.2]*0.5e-3;\n%grainSizeDistribution=[1,2,0.1;2,4,0.2;4,8,0.2;8,16,0.2;16,32,0.2]*0.5e-3;\nend\n%determine the grain radius (grainR) according to the above data\ngrainR=mfs.getGradationDiameter(grainSizeDistribution,totalM/grainDensity)/2;\n\n%determine the box size\nSET=mfs.getBoxSample(grainR,sampleW,sampleL,hRate);\nSET.moNum=moNum;%divided into 'moNum' size groups\n%------------------end set the grain size and box size------------------\n\n%--------------initializing Box model------------\nB=obj_Box;%build a box object\nB.name='highSizeRatio';\nB.GPUstatus='auto';\nB.setType('topPlaten');\nB.PexpandRate=2;\nB.buildInitialModel(SET);%B.show();\nB.setUIoutput();\n\nd=B.d;\n\n%--------------end initializing Box model------------\nB.gravitySediment(1);\nd.status.dispEnergy();%display the energy of the model\nd.setData();\nd.showFilter('Group',{'sample'});\nd.show();\n\n%------------return and save result--------------\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_HighSizeRatioBattery.m<pre><code>clear;\nfs.randSeed(2);%change it to get a different model\n%------------------set the grain size and box size------------------\ngrainDensity=2650;%density of the grains\nmoNum=5;%divided into 'moNum' size groups (childModel)\nhRate=1.0;% box is bigger a bit, 1.0~1.2\n\ntotalM=1e-9;sampleW=100e-6;sampleL=100e-6;\ngrainSizeDistribution=[1,2,0.1;5,10,0.9]*2e-6;\n%determine the grain radius (grainR) according to the above data\ngrainR=mfs.getGradationDiameter(grainSizeDistribution,totalM/grainDensity)/2;\n%determine the box size\nSET=mfs.getBoxSample(grainR,sampleW,sampleL,hRate);\nSET.moNum=moNum;%divided into 'moNum' size groups\n%SET.platenR=5e-6;\n%SET.boundaryR=5e-6;\n%------------------end set the grain size and box size------------------\n\n%--------------initializing Box model------------\nB=obj_Box;%build a box object\nB.name='highSizeRatio';\nB.GPUstatus='auto';\n%B.setType('Fluid');\nB.buildInitialModel(SET);%B.show();\nB.setUIoutput();\n\nd=B.d;\n%d.showFilter('SlideY',0.3,0.5,'aR');\n%return\n\n%--------------end initializing Box model------------\nB.gravitySediment(1);\n%return\nd.status.dispEnergy();%display the energy of the model\nd.setData();\n%d.showFilter('Group',{'sample'});\nd.show();\n\n%------------return and save result--------------\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre>"},{"location":"examples/examples2021/LavaBlock/","title":"LavaBlock","text":"Step 1Step 2Step 3Step 4 user_LavaBlock1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='LavaBlock';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=5;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.25;%define distribution of ball radius, \nB.sampleW=1000;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=500;\nB.boundaryRrate=0.999999;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=1;\nB.isSample=1;\nB.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\nd.showB=1;\n%--------------end initial model------------\n\n%----------remove overlap platen elements\nd.mo.setGPU('off');\ndelId=[d.GROUP.topPlaten(end-1:end);d.GROUP.botPlaten(end-1:end)];\nd.delElement(delId);\n%----------end remove overlap platen elements\n\nd.mo.zeroBalance();\nd.mo.setShear('off');%because d.mo.isShear will be reset to 1 in d.delElement\n%---------- gravity sedimentation\nB.gravitySediment(1);%you may use B.gravitySediment(10); to increase sedimentation time (10)\nB.compactSample(5);%input is compaction time\nmfs.reduceGravity(d,1);\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.Rrate=1;\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_LavaBlock2.m<pre><code>%set the material of the model\nclear\nload('TempModel/LavaBlock1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off'); \nd.mo.aX(d.GROUP.topPlaten)=d.aX(d.GROUP.topPlaten);\nd.mo.aY(d.GROUP.topPlaten)=d.aY(d.GROUP.topPlaten);\nd.mo.aZ(d.GROUP.topPlaten)=d.aZ(d.GROUP.topPlaten);\nplatenId=[d.GROUP.lefPlaten;d.GROUP.rigPlaten;d.GROUP.botPlaten;d.GROUP.topPlaten];\nd.addFixId('XYZ',platenId);\nd.getModel();%get xyz from d.mo\nd.resetStatus();\n%----------remove top part\nsX=d.mo.aX(d.GROUP.sample);\nsZ=d.mo.aZ(d.GROUP.sample);\ntopFilter=sZ&gt;0.9*B.sampleH;\n%----------make a hole\ncx=B.sampleW/2;\ncz=0;\nholeR=50;\ncFilter=sqrt((sX-cx).^2+(sZ-cz).^2)&lt;holeR;\ndelId=find(topFilter|cFilter);\nd.delElement(delId);\n\n%---------define weak layer\nsZ=d.mo.aZ(d.GROUP.sample);\nweakFilter=sZ&gt;0.2*B.sampleH&amp;sZ&lt;0.25*B.sampleH;\nd.addGroup('WeakLayer',find(weakFilter));\n\n\n%----------set material of model\nmatTxt=load('Mats\\LavaRock.txt');\nrate=1;\nmatTxt(4)=matTxt(4)*rate;\nmatTxt(3)=matTxt(3)*rate;\nmatTxt(1)=matTxt(1)*1;%lower \nMats{1,1}=material('RockHydro',matTxt,B.ballR);\nMats{1,1}.Id=1;\n\nrate2=0.1;\nmatTxt(4)=matTxt(4)*rate2;\nmatTxt(3)=matTxt(3)*rate2;\nMats{2,1}=material('RockWeak',matTxt,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;\n%----------end set material of model\nd.showB=2;\n\n%---------assign material to layers and balance the model\nd.mo.setShear('on');\nd.removeFixId('Z',[d.GROUP.lefPlaten;d.GROUP.rigPlaten]);\nd.addFixId('Z',[d.GROUP.lefPlaten(end-1),d.GROUP.lefPlaten(end),d.GROUP.rigPlaten(end-1),d.GROUP.rigPlaten(end)]);\nd.setGroupMat('sample','RockHydro');\nd.setGroupMat('WeakLayer','RockWeak');\n\nd.groupMat2Model({'sample','WeakLayer'},1);\n\nplatenIds=[d.GROUP.lefPlaten;d.GROUP.rigPlaten];\nd.mo.aKN(platenIds)=d.mo.aKN(platenIds)*0.1;\nd.mo.aMUp(platenIds)=0;\n\n%d.show('aMatId');return\n%---------start computing\nd.mo.setGPU('auto');\nd.breakGroup();\nd.connectGroup('sample');\nd.removePrestress(0.1);\nd.balance('Standard',2);\nd.connectGroup('sample');\nd.removePrestress(0.1);\nd.balance('Standard',2);\n\nd.show();\n%---------end assign material to layers and balance the model1. \n\n%---------save the data\nd.mo.setGPU('off'); \nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_LavaBlock3.m<pre><code>%apply initial stress on the model\nclear\nload('TempModel/LavaBlock2.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off'); \nd.getModel();\nd.resetStatus();\nd.mo.isCrack=1;\n\n\nsZ=d.mo.aZ(d.GROUP.sample);\ntopFilter=sZ&gt;max(d.mo.aZ(d.GROUP.sample))-B.sampleH*0.05;\nd.addGroup('topBlock',find(topFilter));\narea=B.sampleW*B.ballR*2;\nstresszz=-5e6;%additional vertical pressure on the model\ngZ=area*stresszz/sum(d.mo.mM(d.GROUP.topBlock));\nd.mo.mGZ(d.GROUP.topBlock)=d.mo.mM(d.GROUP.topBlock)*gZ;\n\nd.mo.aMUp(d.GROUP.topBlock)=2;\nd.mo.aKS(d.GROUP.topBlock)=d.mo.aKS(d.GROUP.topBlock)*5;\nplatens=[d.GROUP.lefPlaten;d.GROUP.lefPlaten;d.GROUP.lefPlaten;d.GROUP.lefPlaten;];\nd.addGroup('platens',platens);\nd.setClump('platens');\n\nd.mo.setGPU('auto'); \nd.balance('Standard',4);\n%---------end assign material to layers and balance the model1. \n\n%---------save the data\nd.mo.setGPU('off');\nd.show();\nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_LavaBlock4.m<pre><code>clear\nfs.randSeed(2);\nload('TempModel/LavaBlock3.mat');\nB.setUIoutput();\n%--------initializing the model\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\n\nd.showB=0;\nd.Rrate=1;\nd.getModel();\nd.resetStatus();\nd.mo.isCrack=1;\nd.mo.mVis=d.mo.mVis./d.vRate*0.1;%use uniform viscosity\n\nhole_pId=d.findNearestId(B.sampleW/2,0,0);\ntop_pId=d.findNearestId(B.sampleW/2,0,B.sampleH);\nd.Rrate=0.2;\n\n%start building pore system\np=pore(d);\np.fluid_k=0.4615e-4;p.fluid_c=870;%use oil property, default value is water\n\nd.mo.dT=d.mo.dT;%\np.dT=p.d.mo.dT;\np.pathLimitRate=0.3;%path diameter&lt;pathLimitRate*ballR will be connection\np.isCouple=1;%fluid-solid coupling\np.setInitialPores();\np.setPlaten('fix');%fix the coordinates of platens\n%---------end initializing the model\n\n%----------set the drawing of result during iterations\n%setappdata(0,'simpleFigure',1);%use simpleFigure to increase drawing speed\n%setappdata(0,'ballRate',0.01);%use small ballRate to increase drawing speed\nshowType='*pPressure';\nd.figureNumber=1;\n%----------end set the drawing of result during iterations\n\n%d.show('Crack');hold all;d.show('--');\n\n%---------calculate connection diameter and flow K\nk=0.00000001;%permeability factor\n%---------end calcualte connection diameter and flow K\nk=k*10000;%change the permeability\n\npPressureHigh=100e6;%use greater pressure\npPressure0=0.1e6;%use greater pressure\n%---------setting of the simulation\ntotalCircle=10;%default value is 40, use 10 to increase speed\ndPressure=pPressureHigh/totalCircle;\nstepNum=50;\nfName=['data/step/2' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nd.tic(totalCircle);%record the initial time of loop\n%d.mo.setGPU('on');\n%p.setGPU('on');\n\nfor i=1:totalCircle\n    pPressure=dPressure*totalCircle;\n    for j=1:stepNum\n        cDiameterFlow=p.cDiameter+p.cDiameterAdd;%calculate the diameter of\n        cDiameterFlow(cDiameterFlow&lt;0)=0;\n        p.cKFlow=cDiameterFlow*k./p.cPathLength;%default K of throat is determined by diameter and path length\n        cbFilter=d.mo.bFilter(p.cnIndex);%bonded filter of cList\n        p.cKFlow(cbFilter)=p.cKFlow(cbFilter)/100;%K of intacted bond is very small\n        p.setBallPressure(hole_pId,pPressure);%set the pressure in the crack\n        p.setBallPressure(top_pId,pPressure0);%set the pressure around the sample\n\n        p.balance();\n        d.balance(10);\n        d.recordStatus();\n        if j==0\n            d.show('mV');\n            return\n        end\n    end\n    cla;%clear the previous figure\n    p.show('pPressure');\n\n    %p.show(showType);\n    %pause(0.1);%pause and show the figure\n    save([fName num2str(i) '.mat']);%save data\n    d.recordStatus();\n    d.toc();\nend\n%---------save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '4.mat'],'B','d');\nsave(['TempModel/' B.name '4R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n%user_makeGIF\n</code></pre>"},{"location":"examples/examples2021/ParticleMigration/","title":"ParticleMigration","text":"Step 1Step 2 user_ParticleMigration1.m<pre><code>clear;clc\nfs.randSeed(2);\nbBox=[0,0,0;1,0.5,0.5];\nWLH=bBox(2,:)-bBox(1,:);\nboxV=prod(WLH);\n\ngrainV=0.25*0.7;%packing rate: 0.7\ngrainR=0.5*mfs.getGradationDiameter([0.01,0.02,0.02;0.05,0.10,0.98],grainV);\n%grainR=0.5*mfs.getGradationDiameter([0.005,0.010,0.015;0.025,0.050,0.985],grainV);\n\nfineId=find((2*grainR)&lt;0.04);\n\ntic;sampleObj=pfs3d.genAssembly(grainR,bBox);toc\n%fs.showObj(sampleObj);\n%--------------------------\nB=obj_Box();\nB.name='ParticleMigration';\nB.ballR=0.02;%mean(grainR.^3).^(1/3);\nB.isSample=0;\nB.sampleW=WLH(1);\nB.sampleL=WLH(2);\nB.sampleH=WLH(3);\n\nB.buildInitialModel();\nd=B.d;\n%--------------------------\nsampleId=d.addElement(1,sampleObj);\nd.addGroup('sample',sampleId);\nd.delElement(d.GROUP.topPlaten);\nd.moveGroup('topB',0,0,-2*B.ballR);\nd.show('aR')\n\nmoNum=2;\nrRanges=fs.getAutoRanges(d.mo.aR,moNum);\naMoId=fs.getMoId(d.mo.aR,rRanges);\naMoId(end)=0;\nd.mo.setChildModel(aMoId,rRanges);\nd.addGroup('Coarse',d.mo.moCell{1}.parent_mId);\nd.addGroup('Fine',d.mo.moCell{2}.parent_mId);\n%---------------------------\n%d.mo.mGZ(:)=0;\nn=20;\nfor ii=1:n\n   %d.mo.afterBalance='';\n   d.connectGroup();\n   d.deleteConnection('boundary');\n   %d.mo.mVX(:)=0;\n   %d.mo.mVY(:)=0;\n   %d.mo.mVZ(:)=0;\n   fs.limitFrame(d,d.GROUP.sample,0,1,0,0.5,0,0.5);\n   d.balance('Standard',1/n);\nend\nd.show('-aR','EnergyCurve','ForceCurve','HeatCurve');\n%histogram(d.mo.aZ(d.GROUP.Fine),linspace(bBox(1,3),bBox(2,3),21));\n\n%---------save the data\nd.mo.setGPU('off'); \nd.clearData(1);\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_ParticleMigration2.m<pre><code>clear\nload('TempModel/ParticleMigration1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off'); \nd.getModel();%get xyz from d.mo\nd.resetStatus();\n%---------------------\nd.mo.aMUp(:)=0;\nd.breakGroup();\n\ncoarseId=d.GROUP.Coarse;\nfineId=d.GROUP.Fine;\n%TR=getMesh(d,coarseId);\nd.addFixId('X',coarseId);\nd.addFixId('Y',coarseId);\nd.addFixId('Z',coarseId);\n\n% rigB=d.GROUP.rigB;\n% rigBXYZ=[d.mo.aX(rigB),d.mo.aY(rigB),d.mo.aZ(rigB)];\n% %F=vecnorm(rigBXYZ(:,[2,3])-[0.4,0.4],2,2)&lt;0.1;\n% fh=@(YZ,yz0,r0)vecnorm(YZ-yz0,2,2)&lt;r0;\n% F=fh(rigBXYZ(:,[2,3]),[0.2,0.2],0.05)|fh(rigBXYZ(:,[2,3]),[0.2,0.6],0.05);\n% F=F|fh(rigBXYZ(:,[2,3]),[0.6,0.2],0.05)|fh(rigBXYZ(:,[2,3]),[0.6,0.6],0.05);\n% F=F|fh(rigBXYZ(:,[2,3]),[0.4,0.4],0.05);\n% \n% d.mo.aKN(rigB(F))=0;\n% d.mo.aKS(rigB(F))=0;\n% d.mo.setKNKS();\n%d.showB=2;d.show('aKN');\nd.moveGroup('rigB',0.1,0,0);\n\n%p=build2pore(d,'Coarse');\n%p.show;\n\nw1=0.70;w2=0.20;\ncoarseWC=w2+(w1-w2)*(1-rescale(d.mo.aX(coarseId)));%\n\nshowFilter=abs(d.mo.aX-0.2)&lt;0.05|abs(d.mo.aX-0.4)&lt;0.05|abs(d.mo.aX-0.6)&lt;0.05|abs(d.mo.aX-0.8)&lt;0.05;\nshowFilter(end)=false;\nshowFilter(d.GROUP.Fine)=true;\n\nsaveDir=['data\\',B.name,'_multifield'];\nmkdir(saveDir);\nsave([saveDir,'\\loopNum',num2str(0),'.mat']);\ntotalCircle=50;\nsteps=100;\nd.tic(totalCircle);\nfor ii=1:totalCircle\n    for jj=1:steps\n        %1.\u573a\u7684\u6f14\u5316\n        %\n        %2.\u5efa\u7acb\u7c97\u9897\u7c92\u573a &amp; \u68af\u5ea6\u8ba1\u7b97\n        aPos=[d.mo.aX,d.mo.aY,d.mo.aZ];\n        if ~exist('TR','var')\n            TR=pfs3d.getMesh(aPos(coarseId,:),d.mo.aR(coarseId));\n        end\n        triGrad=pfs3d.calGrad(TR.ConnectivityList,aPos(coarseId,:),coarseWC);\n        %3.\u6620\u5c04\u7ec6\u9897\u7c92 &amp; \u53d7\u529b\u8ba1\u7b97\n        fineLoc=TR.pointLocation(aPos(fineId,:));\n        f=isnan(fineLoc);%out of boundingbox\n        fineLoc(f)=1;%avoid index error\n        fGrad=triGrad(fineLoc,:);\n        fGrad(f,:)=0;\n        kF=-2e4*median(d.mo.aR(coarseId))*9.8*d.mo.mM(fineId);%based on gravity\n        d.mo.mGX(fineId)=fGrad(:,1).*kF;\n        d.mo.mGY(fineId)=fGrad(:,2).*kF;\n        d.mo.mGZ(fineId)=fGrad(:,3).*kF;\n        %4.\u9897\u7c92\u8fd0\u52a8\n        d.balance(1);\n        %d.recordStatus();\n    end\n    %5.\u989d\u5916\u6570\u636e\u8bb0\u5f55\n    d.figureNumber=1;\n    d.showFilter('Filter',showFilter);\n    d.show('Displacement');\n    frames(ii)=getframe();\n    save([saveDir,'\\loopNum',num2str(ii),'.mat']);\n    d.toc();\nend\nfs.movie2gif('1.gif',frames,0.2);\n%movie('1.gif');\n\n% n=20;\n% bins=linspace(0,1,n+1);\n% N=histcounts(d.mo.aX(d.GROUP.Fine),bins);\n% N=N/length(d.GROUP.Fine);\n% plot(movmean(bins,2,'Endpoints','discard'),N,'-^')\n% ylim([0.4,1.6]*1/n);\n% yline(1/n,'--')\n\n%---------save the data\nd.mo.setGPU('off'); \nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examples2021/Pore3dCouple/","title":"Pore3dCouple","text":"Step 1Step 2Step 3 user_Pore3dCoupleTest1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box();%declare a box object\nB.name='pore3dCoupleTest';\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.02/2;\nB.sampleW=0.2;%width, length, height, average radius\nB.sampleL=0.2;\nB.sampleH=0.22;\n%B.setType('TriaxialCompression');\nB.setType('Fluid');%\nB.buildInitialModel();%B.show();\nd=B.d;\n%you may change the size distribution of elements here, e.g. d.mo.aR=d.aR*0.95;\n\n%---------- gravity sedimentation\nB.gravitySediment(1);%you may use B.gravitySediment(10); to increase sedimentation time (10)\n%B.compactSample(2);%input is compaction time\nmfs.reduceGravity(B.d,10);\nd.balance('Standard',2);\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.show('-aR');\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n%d.show('-Id');\n</code></pre> user_Pore3dCoupleTest2.m<pre><code>%please run user_Pore3dTest1.m first\n%set the material of the model\nclear\nload('TempModel/pore3dCoupleTest1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off'); \nd.getModel();%get xyz from d.mo\nd.resetStatus();\n\n%d.show('aR');return\n\n%----------set material of model\nmatTxt=load('Mats\\RockHydro.txt');\nMats{1,1}=material('RockHydro',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\n%----------end set material of model\nd.showB=2;\n\n%---------assign material to layers and balance the model\nd.mo.setShear('on');\n%d.removeFixId('Z',[d.GROUP.lefPlaten;d.GROUP.rigPlaten]);\n%d.addFixId('Z',[d.GROUP.lefPlaten(end-1),d.GROUP.lefPlaten(end),d.GROUP.rigPlaten(end-1),d.GROUP.rigPlaten(end)]);\nd.setGroupMat('sample','RockHydro');\nd.groupMat2Model({'sample'});\nplatenIds=[d.GROUP.lefPlaten;d.GROUP.rigPlaten];\nd.mo.aKN(platenIds)=d.mo.aKN(platenIds)*0.1;\nd.mo.aMUp(platenIds)=0;\nd.mo.mGZ(:)=0;\n\n%---------start computing\nd.mo.setGPU('auto');\nd.breakGroup();\nd.connectGroup('sample');\nd.removePrestress(0.1);\nd.balance('Standard',2);\nd.connectGroup('sample');\nd.removePrestress(0.1);\nd.balance('Standard',2);\n\nd.show();\n%---------end assign material to layers and balance the model1. \n\n%---------save the data\nd.mo.setGPU('off'); \nd.clearData(1);\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_Pore3dCoupleTest3.m<pre><code>warning off;\nclear;\nload('TempModel\\pore3dCoupleTest2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();\nd.resetStatus();\n%-----------------------\nd.mo.mVis=d.mo.mVis./d.vRate*0.1;\nd.mo.SET.isBalanceData=1;\n\np=build2pore(d);\np.setInitialPores();\n%p.setPlaten('fix')\n\np.fKFlow(:)=1e-8;\n%p.setTimeStep();\np.dT=d.mo.dT;\n%tInterval=floor(p.dT/d.mo.dT);\n%p.dT=d.mo.dT*tInterval;\n%p.SET.tInterval=tInterval;\n%------------------------\ncXYZ=[median(p.X),median(p.Y),median(p.Z)];\n[~,pId]=min(sum(([p.pX,p.pY,p.pZ]-cXYZ).^2,2));\nrefP=p.Fluids.refP;\ncPre=refP+4e8;\n\np.setPressure(pId,cPre);\np.SET.totalMass0=sum(p.pMass);\npSign=p.pSign;\n\np.SET.pVolOld=p.pVol;\np.SET.killPoreId=p.SET.pVolOld&lt;10*median(p.SET.pVolOld);\n\np.setCouple('on');\nd.showFilter('SlideY',0.48,1);\n% h=line(0,NaN);\ntotalCircle=20;stepNum=50*4;\nd.tic(totalCircle);\nsave(['data\\step\\loopNum',num2str(0),'.mat'],'d');\nfor ii=1:totalCircle\n    assert(~any(isnan(p.pPressure)),'boomshakalaka!!!')\n    p.SET.pPressure=p.pPressure-refP;\n     p.show('SETpPressure');\n    view([0,-1,0]);colorbar();\n    drawnow;\n    for jj=1:stepNum\n    p.setPressure(pId,cPre);\n    %disp(sum(p.pMass)-p.SET.totalMass0);\n    %disp(max(max(sqrt(d.mo.nFnX.^2+d.mo.nFnY.^2+d.mo.nFnZ.^2)./d.mo.nKNe))./median(d.aR));\n    p.balance(2);\n    if p.isCouple\n        p.fluid2Ball();\n        p.d.balance();%p.ball2Fluid();\n    end\n%     k=(max(abs(sum(p.poreFlowMass,2)./p.pMass)));\n%     [k,ki]=max(abs(log10(p.SET.pVolOld./p.pVol)));\n%     ki;\n%     h.XData(end+1)=h.XData(end)+1;\n%     h.YData(end+1)=k;\n%     drawnow limitrate \n    %p.show('SETpPressure');\n    %view([0,-1,0]);\n    %drawnow\n    end    \n    d.toc();\n    save(['data\\step\\loopNum',num2str(ii),'.mat'],'d');\nend\nd.showFilter('SlideY',0.48,1);\nfigure;p.show('SETpPressure');view([0,-1,0]);\nd.show('Displacement')\n</code></pre>"},{"location":"examples/examples2021/Powder/","title":"Powder","text":"Step 1Step 2Step 3Step 4 \u7c89\u672b\u94fa\u5c551.m<pre><code>clear;%\u6b64\u4ee3\u7801\u7531\u738b\u6ce2\u7f16\u5199\u5e76\u7ef4\u62a4\uff0c\u5177\u4f53\u4f7f\u7528\u548c\u4fee\u8ba2\u8bf7\u8054\u7cfbQQ\u7fa4\u4e2d\u738b\u6ce2\uff0c\u7fa4\u53f7668903775\nKeLiR=0.1;\nringObj=mfs.makeRing(2,1,KeLiR,0.5);%\u8c03\u7528\u51fd\u6570\u751f\u6210\u5706\u73af\n%ringObj=mfs.makeDisc(2, KeLiR*1.5/2,0.8);\nringObj=mfs.rotate(ringObj, 'YZ', 90);%\u65cb\u8f6c\u5230XZ\u5e73\u9762\nringObj.R(129)=ringObj.R(129)*1.0;%ID\u4e3a129\u7684\u9897\u7c92\u534a\u5f84\u53d8\u4e3a\u539f\u67651.2\u500d\uff0c\u4fbf\u4e8e\u540e\u7eed\u5efa\u6a21\u89c2\u5bdf\u5706\u73af\u6eda\u52a8\nfigure;fs.showObj(ringObj);\nfs.randSeed(1);%build random model                                         \nB=obj_Box;%build a box object                                              \nB.name='\u7c89\u672b\u6a21\u578b';                                                               \nB.GPUstatus='auto';                                                        \nB.ballR=KeLiR/0.8;%\u751f\u6210\u7684\u9897\u7c92\u534a\u5f84\u4e3a\u9884\u5b9a\u76845/4\u500d,\u76f8\u5f53\u4e8e\u589e\u52a0\u9897\u7c92\u95f4\u8ddd                                                           \nB.isClump=0;                                                               \nB.distriRate=0.2;\nB.sampleW=6;                                                              \nB.sampleL=0;                                                               \nB.sampleH=4;\nB.setType();                                                               \nB.buildInitialModel();%B.show();                                           \nB.setUIoutput();                                                           \nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');                   \nd.mo.setGPU('auto');                                                       \nSampleObj.X=d.mo.aX(d.GROUP.sample);\nSampleObj.Y=d.mo.aY(d.GROUP.sample);\nSampleObj.Z=d.mo.aZ(d.GROUP.sample);\nSampleObj.R=d.mo.aR(d.GROUP.sample)*0.8;\nd.SET.SampleObj=SampleObj;%\u4ee5\u7ed3\u6784\u4f53\u5f62\u5f0f\u4fdd\u5b58sample\u6837\u672c\nd.SET.ringObj=ringObj;%\u4ee5\u7ed3\u6784\u4f53\u5f62\u5f0f\u4fdd\u5b58\nd.SET.KeLiR=KeLiR;\nd.status.dispEnergy();%display the energy of the model                     \nd.mo.setGPU('off');                                                        \nd.clearData(1);%clear dependent data\nd.recordCalHour('Box1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nfigure;d.showFilter('SlideY',0.45,0.05,'aR');                              \n</code></pre> \u7c89\u672b\u94fa\u5c552.m<pre><code>clear;\nload('TempModel/\u7c89\u672b\u6a21\u578b1.mat');\n%------------initialize model-------------------\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\nringObj=d.SET.ringObj;\nSampleObj=d.SET.SampleObj;\nballR=d.SET.KeLiR;\n%figure;fs.showObj(ringObj);hold on;fs.showObj(SampleObj);\n%return;\n\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='\u589e\u6750\u5236\u9020';\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=ballR;\nB.isShear=1;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=36;\nB.sampleL=0;\nB.sampleH=6;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=0;\nB.isSample=0;\nB.setType();\nB.buildInitialModel();\nd=B.d;\nRate=0.3;\nh=0.5;\nWall1Obj.X=[0:2*(B.ballR*(1-Rate)):(B.sampleW)/6-B.ballR]';\nWall1Obj.Y=Wall1Obj.X.*0;\nWall1Obj.Z=Wall1Obj.X.*0-B.ballR;\nWall1Obj.R=Wall1Obj.X.*0+B.ballR;\n\nWall2Obj.Z=[-2*(B.ballR*(1-Rate)):-2*(B.ballR*(1-Rate)):-h]'-B.ballR;\nWall2Obj.X=Wall2Obj.Z.*0+max(Wall1Obj.X);\nWall2Obj.Y=Wall2Obj.X.*0;\nWall2Obj.R=Wall2Obj.X.*0+B.ballR;\n\nWall3Obj.X=[max(Wall1Obj.X)+2*(B.ballR*(1-Rate)):2*(B.ballR*(1-Rate)):(B.sampleW/2)]';\nWall3Obj.Y=Wall3Obj.X.*0;\nWall3Obj.Z=Wall3Obj.X.*0+min(Wall2Obj.Z);\nWall3Obj.R=Wall3Obj.X.*0+B.ballR;\n%figure;fs.showObj(Wall1Obj);figure;fs.showObj(Wall2Obj);figure;fs.showObj(Wall3Obj);\n%return;\nWall0Obj.X=[Wall1Obj.X;Wall2Obj.X;Wall3Obj.X];\nWall0Obj.Y=[Wall1Obj.Y;Wall2Obj.Y;Wall3Obj.Y];\nWall0Obj.Z=[Wall1Obj.Z;Wall2Obj.Z;Wall3Obj.Z];\nWall0Obj.R=[Wall1Obj.R;Wall2Obj.R;Wall3Obj.R];\nWallObj=mfs.rotateCopy(Wall0Obj,180,2,'XY')\nWallObj.Z=-h-B.ballR-WallObj.Z;\nWallObj.X=B.ballR+WallObj.X+B.sampleW/2;\n%figure;fs.showObj(WallObj);\n%return;\nd.mo.setGPU('off');\nSampleId=d.addElement(1,SampleObj);\nd.addGroup('sample',SampleId);%add a new group\nd.moveGroup('sample',5,0,h+2*B.ballR);\nWallGroupId=d.addElement(1,WallObj);\nd.addGroup('WallGroup',WallGroupId);%add a new group\nd.setClump('WallGroup')\nd.moveGroup('WallGroup',0,0,h+B.ballR);\nd.defineWallElement('WallGroup');\nmatTxt=load('Mats\\Soil1.txt');\nMats{1,1}=material('KeiLi',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\Soil1.txt'); \n%matTxt2=[2.00E+10      0.12     2.00E+06   2.00E+07    0.5]\nMats{2,1}=material('WallG',matTxt2,B.ballR); \nMats{2,1}.Id=2; \nd.Mats=Mats;\nd.setGroupMat('sample','KeiLi');\nd.groupMat2Model({'sample'});\nd.delElement(d.GROUP.topPlaten);\nd.setStandarddT();\nd.mo.dT=5*d.mo.dT;%\u589e\u5927\u65f6\u95f4\u6b65\u7f29\u77ed\u6c89\u79ef\u65f6\u95f4\nn=2000;d.mo.mGZ(:)=d.mo.mGZ(:).*n;%\u589e\u5927\u91cd\u529b\u7f29\u77ed\u6c89\u79ef\u65f6\u95f4\n%fName=['data/\u6c89\u79ef8.23/' B.name num2str(B.ballR) '000-' num2str(B.distriRate) 'loopNumT'];\n%d.mo.mVX=(-1+2*rand(length(d.GROUP.sample),1))*200;\nd.showB=2;\nfigure;\nd.mo.setGPU('auto');\nd.figureNumber=d.show('mV');%\u7ed8\u56fe\u7684\u7a97\u53e3\u53f7\uff0c\u53ef\u6307\u5b9a\u5728\u67d0\u4e00\u7a97\u53e3\u7ed8\u56fe\nd.mo.isShear=0;\n%return;\nfor i=1:8\n d.balance('Standard',0.2);\n d.show('ZDisplacement');\n pause(0.1);\n %save([fName num2str(i) '.mat']);\nend\nd.mo.mGZ(:)=d.mo.mGZ(:)./n;%\u6062\u590d\u91cd\u529b\nd.balance('Standard',0.20);%\u91cd\u65b0\u5e73\u8861\nd.status.dispEnergy();%display the energy of the model                     \n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxModel2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> \u7c89\u672b\u94fa\u5c553\uff08\u6eda\u52a8\uff09.m<pre><code>clear;\nload('\u589e\u6750\u5236\u9020\u6c47\u62a5/\u7c89\u672b\u6a21\u578b1.mat');\nringObj=d.SET.ringObj;\nRingR=((max(ringObj.Z)+max(ringObj.R))-(min(ringObj.Z)-min(ringObj.R)))/2;\nd=[];\nB=[];\n%load('\u589e\u6750\u5236\u9020/\u589e\u6750\u5236\u9020\u6c47\u62a5/\u589e\u6750\u5236\u90202.mat');\nload('\u589e\u6750\u5236\u9020\u6c47\u62a5/\u589e\u6750\u5236\u9020020.mat');\n%------------initialize model-------------------\nB.setUIoutput();\nd=B.d;d.calculateData();d.mo.setGPU('off');d.getModel();%get xyz from d.mo\nd.mo.setShear('on');\nRingId=d.addElement(1,ringObj);d.addGroup('Ring',RingId);d.setClump('Ring');d.moveGroup('Ring',1.5,0,2.12);%2.12\nd.addFixId('XYZ', d.GROUP.Ring);\nd.moveGroup('Ring',0.85,0,0.65);\nd.setStandarddT();\nd.mo.dT=5*d.mo.dT;\n%d.delElement(d.GROUP.sample);\n%figure;d.show('aR');\n%return;%d.show('Id');%\nfName=['data/\u6eda\u7b52\u94fa\u7c89OK/' B.name num2str(B.ballR) '000-' num2str(B.distriRate) 'loopNum'];save([fName '0.mat']);%return\ntotalCircle=8;%40\nstepNum=1;%20\nd.mo.setGPU('auto');\ndis=0.0024;%total distance\ndDis=dis/totalCircle/stepNum;%distance of each step\nd.tic(totalCircle*stepNum);\n%figure;\nd.figureNumber=d.show('aR');%\u7ed8\u56fe\u7684\u7a97\u53e3\u53f7\uff0c\u53ef\u6307\u5b9a\u5728\u67d0\u4e00\u7a97\u53e3\u7ed8\u56fe\nsave([fName num2str(0) '.mat']);\nfor i=1:totalCircle\n    for j=1:stepNum\n        d.toc();%show the note of time\n        d.moveGroup('Ring',dDis,0,0,'mo');\n         d.rotateGroup('Ring', 'XZ',  -dDis/(2*pi*RingR)*360);\n        %d.balance('Standard',0.02);%\n    end\n    d.clearData(1);%clear data in d.mo\n    save([fName num2str(i) '.mat']);\n   d.show('aR');\n    d.calculateData();\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nfigure;d.showFilter('SlideY',0.45,0.05,'aR');\n</code></pre> \u7c89\u672b\u94fa\u5c553\uff08\u632f\u52a8\uff09.m<pre><code>clear;\nload('\u589e\u6750\u5236\u9020\u6c47\u62a5/\u7c89\u672b\u6a21\u578b1OK.mat');\nHight=2;\nringObj=d.SET.ringObj;\nd=[];\nB=[];\nload('\u589e\u6750\u5236\u9020\u6c47\u62a5/\u589e\u6750\u5236\u9020020.mat');\n%------------initialize model-------------------\nB.setUIoutput();\nd=B.d;d.calculateData();d.mo.setGPU('off');d.getModel();%get xyz from d.mo\nd.delElement(d.GROUP.sample);\nd.mo.setShear('on');\nRingId=d.addElement(1,ringObj);d.addGroup('Ring',RingId);d.setClump('Ring');d.moveGroup('Ring',1.5,0,2.12);\nd.moveGroup('Ring',0.85,0,0.65);\nd.setStandarddT();\nd.mo.dT=0.5*d.mo.dT;\n%d.delElement(d.GROUP.sample);\n%============================================\nWaveN=10;\ntotalBalanceNum=100*0.67*WaveN;%data number of the wave\ntotalT=totalBalanceNum*d.mo.dT;%total time of the wave\nperiod=2e-3;%period of the wave\nTs=((0:totalBalanceNum)*d.mo.dT.*10)';\nmaxA=5;%maximum acceleration\nd.addGroup('Point',d.GROUP.Ring(1));%\u8bbe\u7f6e\u76d1\u6d4b\u70b9\nValues=maxA*sin(Ts*(2*pi)/period);\nfigure;plot(Ts,Values,'-');\nd.addTimeProp('Ring','mAZ',Ts,Values);\nd.addRecordProp('Point','mAZ');\n%figure;d.show('aR');\n%return;\n%============================================\n%fName=['data/\u6eda\u7b52\u94fa\u7c89OK/' B.name num2str(B.ballR) '000-' num2str(B.distriRate) 'loopNum'];save([fName '0.mat']);%return\ntotalCircle=5;%80\nstepNum=1;%100\nd.mo.setGPU('auto');\ndis=0.025;%total distance\ndDis=dis/totalCircle/stepNum;%distance of each step\nd.tic(totalCircle*stepNum);\nfigure;\nd.figureNumber=d.show('mAZ');%\u7ed8\u56fe\u7684\u7a97\u53e3\u53f7\uff0c\u53ef\u6307\u5b9a\u5728\u67d0\u4e00\u7a97\u53e3\u7ed8\u56fe\n%save([fName num2str(0) '.mat']);\nfor i=1:totalCircle\n    for j=1:stepNum\n        d.toc();%show the note of time\n        d.moveGroup('Ring',dDis,0,0,'mo');\n        d.balance('Standard',0.03);%\n       d.show('XDisplacement');\n    end\n    d.clearData(1);%clear data in d.mo\n    %save([fName num2str(i) '.mat']);\n    d.calculateData();\nend\nd.mo.setGPU('off');\nfigure;plot(d.status.Ts,d.status.SET.PROP.Point_mAZ(:),'ro-');\nd.clearData(1);\n%figure;d.showFilter('SlideY',0.45,0.05,'aR');\n</code></pre>"},{"location":"examples/examples2021/SandPenetration/","title":"SandPenetration","text":"Step 1Step 2Step 3 user_SandPenetration1.m<pre><code>%step1: packing the elements\nclear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='Sand_Penetration';\n\n%--------------initial model------------\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.001;\nB.isShear=1;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=0.25;%width, length, height, average radius\nB.sampleL=0;%when L is zero, it is a 2-dimensional model\nB.sampleH=0.06;\nB.BexpandRate=4;%boundary is 4-ball wider than sample\nB.PexpandRate=0;\n% B.type='topPlaten';%add a top platen to compact model\nB.isSample=1;\nB.setType();\nB.buildInitialModel();;\nd=B.d;\n\n%---------- gravity sedimentation\nB.gravitySediment();\nd.mo.aMUp(:)=1;   \n\n%------------return and save result--------------\nd.status.dispEnergy();\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_SandPenetration2.m<pre><code>%set the material of the model\nclear\nload('TempModel/Sand_Penetration1.mat');\nB.setUIoutput();%set the output\nd=B.d;\nd.calculateData();%calculate data\nd.mo.setGPU('off');%close the GPU calculation\nd.getModel();%get xyz from d.mo\n\n%---------------delele the box boundary and topelement\nd.delElement(d.GROUP.lefB);\nd.delElement(d.GROUP.rigB);\nd.delElement(d.GROUP.botB);\nd.delElement(d.GROUP.topB);\nmZ=d.mo.aZ(1:d.mNum);%get the Z of elements\ntopLayerFilter=mZ&gt;max(mZ)*0.8;\nd.delElement(find(topLayerFilter));%delete elements according to id\nmX=d.mo.aX(1:d.mNum);%get the Z of elements\nrigLayerFilter=mX&gt;max(mX)*0.8;\nd.delElement(find(rigLayerFilter));%delete elements according to id\nB=mfs.move(B,0,0,-0.024);\n\n%--------------assign new material\nmatTxt=load('Mats\\Soil1.txt');\nMats{1,1}=material('Soil1',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\Brass.txt');\nMats{2,1}=material('Brass',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nd.Mats=Mats;\nd.setGroupMat('sample','Soil1');\nd.groupMat2Model({'sample'},2);\n\n%----------make ProjectileObj------------\nProjectileObj=mfs.denseModel(0.8,@mfs.makeDisc,0.006,0.001);\nProjectileObj=mfs.rotate(ProjectileObj, 'YZ', 90);\nProjectileObj.Y(:)=0;\nProjectileObj=mfs.move(ProjectileObj,0.2,0,0.018);\n\n%----------import bulletObj to model------------\nProjectileId=d.addElement(2,ProjectileObj);\nd.addGroup('Projectile',ProjectileId);\nd.setClump('Projectile');\nd.mo.zeroBalance();\nd.balance('Standard');\nd.balanceBondedModel();%\u8d4b\u6750\u6599\u540e\uff0c\u81ea\u52a8\u80f6\u7ed3\u548c\u5e73\u8861\u6a21\u578b\uff0c\u6709\u5355\u5143\u95f4\u6469\u64e6\u529b\n\nd.show('aR');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_SandPenetration3.m<pre><code>clear;\nload('TempModel/Sand_Penetration2.mat');\nd.calculateData();\nd.mo.setGPU('off');\nB.setUIoutput();\nd=B.d;\nd.getModel();\nd.status=modelStatus(d);\n\nd.mo.isHeat=1;\nvisRate=0.0001;\nd.mo.mVis=d.mo.mVis*visRate;\nProjectileId=d.GROUP.Projectile;\nd.mo.mVX(ProjectileId)=-200;\nd.setStandarddT();\n\ngpuStatus=d.mo.setGPU('auto');\n\ntotalCircle=20;%default value is 500, use 20 to increase speed\nd.tic(totalCircle);\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\n\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    d.balance(50,2);\n    d.figureNumber=1;\n    d.showB=0;\n    d.show('mV');\n    axis([0 0.25 -1 1 -0.05 0.1]);\n    axis manual\n\n    d.mo.setGPU('off');\n    d.clearData(1);\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.toc()\nend\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '3.mat'],'d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre>"},{"location":"examples/examples2021/TwoPore/","title":"TwoPore","text":"Step 1 user_TwoPore.m<pre><code>clear\nR=1e-4;r=R./cosd(30);h=sqrt((2*R).^2-r.^2);\ntheta=linspace(0,360,4);theta=theta(1:end-1).';\nmX=r.*[0;cosd(theta);0];mY=r.*[0;sind(theta);0];mZ=h.*[-1;zeros(3,1);1];\nmR=ones(size(mX)).*R;\nMo=struct('X',mX,'Y',mY,'Z',mZ,'R',mR);\n%fs.showObj(Mo);\n\np=pore3d(mX,mY,mZ,mR);\np.setInitialPores();\npre0=p.pPressure(1);\np.pPressure(1)=pre0+1e4*2*R;\np.pDen=pfs3d.setDensity(p.pPressure);\n\nrate=1;\np.dT=1e-11/rate;steps=50*rate;\nt=p.dT*(0:steps);\npre=zeros(steps+1,2);pre(1,:)=p.pPressure;\n\nfigure;\nAL1=animatedline('Color','b','LineWidth',1);\nAL2=animatedline('Color','r','LineWidth',1);\nxlabel('\\fontname{Times New Roman}Time / s');\nylabel('\\fontname{Times New Roman}Pressure / Pa');\ntic\nfor ii=1:steps\n    p.balance();\n    pre(ii+1,:)=p.pPressure;\n    %if std(p.pPressure)/mean(p.pPressure)&lt;1e-6,disp(ii);return;end\n    if any(isnan(p.pPressure))\n        error('Boom Shakalaka in step %d',ii);\n    end\n\n    addpoints(AL1,t(ii),pre(ii,1)-pre0);\n    addpoints(AL2,t(ii),pre(ii,2)-pre0);\n    drawnow;\nend\ntoc\n%plot(t,pre-1e5,'-*')\n</code></pre>"},{"location":"examples/examples2021/xJoint/","title":"xJoint","text":"Step 1Step 2Step 3 user_X_Joint1.m<pre><code>clear;\nfs.randSeed(2);%build random model\nB=obj_Box;%build a box object\nB.name='X_Joint1';\nB.GPUstatus='auto';\nB.ballR=50;%\u5355\u5143\u5e73\u5747\u534a\u5f84\nB.isClump=0;\nB.distriRate=0.2;%\u9897\u7c92\u76f4\u5f84\u5206\u6563\u7cfb\u6570\uff0c\u6700\u5927\u76f4\u5f84\u4e0e\u6700\u5c0f\u76f4\u5f84\u6bd4\u503c\u4e3a(1+rate)^2\nB.sampleW=7e3;%\u6a21\u578b\u7bb1\u5b50\u5185\u90e8\u7684\u5bbd\nB.sampleL=0;%\u6a21\u578b\u7bb1\u5b50\u5185\u90e8\u7684\u957f\nB.sampleH=10e3;%\u6a21\u578b\u7bb1\u5b50\u5185\u90e8\u7684\u9ad8\nB.BexpandRate=10;%\u8fb9\u754c\u7684\u5ef6\u4f38\u5355\u5143\u6570\nB.PexpandRate=10;%\u538b\u529b\u677f\u7684\u5ef6\u4f38\u5355\u5143\u6570\nB.type='TriaxialCompression';%\u6839\u636e\u6a21\u578b\u7c7b\u578b\uff08B.type\uff09\u8bbe\u7f6e\u4e09\u8f74\u538b\u529b\u677f\nB.setType();\nB.buildInitialModel();%\u5efa\u7acb\u521d\u59cb\u6a21\u578b\nB.show();\nB.setUIoutput();\nd=B.d;\n\nd.mo.setGPU('auto');\n%--------------end initial model------------\nB.gravitySediment();%\u8ba9\u5355\u5143\u968f\u673a\u8fd0\u52a8\uff0c\u5e76\u5728\u91cd\u529b\u4f5c\u7528\u4e0b\u5806\u79ef\nB.compactSample(1);%input is compaction time%\u5229\u7528\u4e0a\u538b\u529b\u677f\u6765\u538b\u5b9e\u6837\u54c1\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('Box1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_X_Joint2.m<pre><code>clear\nload('TempModel/X_Joint11.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\nd.connectGroup();\n%StressXX=5e6;\n%StressZZ=5e6;\n%B.setPlatenFixId()\n\n%B.setPlatenStress(StressXX,0,0,B.ballR*5);\nd.showB=2;\ntopPartId=[d.GROUP.topB;d.GROUP.topPlaten];%\u5c06\u4e0a\u538b\u529b\u677f\u4e0e\u4e0a\u8fb9\u754c\u7ec4\u5408\nd.addGroup('topPart',topPartId);%\u6784\u5efa\u7ec4\nd.show;\nmatTxt2=load('Mats\\XRock.txt');%load a un-trained material file\nMats{1,1}=material('XRock',matTxt2,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\nd.groupMat2Model({'sample'},1);    %\u8d4b\u4e88\u6750\u6599\u5c5e\u6027\n\nd.mo.mGZ(:)=0;%\u6d88\u9664z\u65b9\u5411\u4f53\u529b\uff0c\u5373\u6d88\u9664\u91cd\u529b\nstressXX=5e6;\nstressZZ=5e6;\nd.mo.setShear('off');\nB.setPlatenStress(-stressXX,0,-stressZZ,B.ballR*5);\nd.mo.mGX(d.GROUP.lefPlaten)=-d.mo.mGX(d.GROUP.rigPlaten);%\u6a21\u578b\u5de6\u62c9\u53f3\u538b\n\nd.breakGroup();%\u65ad\u5f00\u6240\u6709\u5355\u5143\u7684\u8fde\u63a5\nd.mo.setGPU('auto');\nd.balance('Standard',1);\n\nd.connectGroup();%\u80f6\u7ed3\u6240\u6709\u8fde\u63a5\nd.removePrestress();%\u5c06\u5355\u5143\u7684\u6297\u62c9\u529b\u4e34\u65f6\u51cf\u5c0f\uff0c\u65ad\u5f00\u80f6\u7ed3\uff0c\u6d88\u9664\u5355\u5143\u95f4\u7684\u5f20\u529b\uff08\u9884\u5e94\u529b\nd.deleteConnection('boundary');%\u5220\u9664\u80f6\u7ed3\n%\u6d88\u9664\u5185\u5e94\u529b\n%B.compactSample(1);\nd.balance('Standard',1);\n\nddis=d.mo.aZ(d.GROUP.topPlaten);\ndddis=d.mo.aZ(d.GROUP.topB);\nd.moveGroup('topB',0,0,ddis-dddis+2*B.ballR);\nd.moveGroup('lefB',-200,0,0);\nd.moveGroup('rigB',200,0,0);\n%C=Tool_Cut(d);%cut the model\n%lSurf=load('slope/IntermittentX3.txt');%load the surface data\n%C.addSurf(lSurf);%add the sur faces to the cut \u5bfc\u5165\u79bb\u6563\u70b9\u6570\u636e\n%C.getSurfTri(1,1);\n%C.getTriangle(1);\n%C.setBondByTriangle('break');\n\n%C=Tool_Cut(d);%cut the model\n%lSurf=load('slope/IntermittentX4.txt');%load the surface data\n%C.addSurf(lSurf);%add the sur faces to the cut\n%C.getSurfTri(1,1);%\u83b7\u53d6\u79bb\u6563\u5143\u4e09\u89d2\u9762\u4fe1\u606f\n%C.getTriangle(1); %\u83b7\u53d6\u4e09\u89d2\u9762\u9876\u70b9\u5750\u6807\n%C.setBondByTriangle('break');%\u4f7f\u4e09\u89d2\u9762\u7834\u88c2\n%d.show('--');\nd.show('aR')\n\n\n%---------------5. save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxModel2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_X_Joint3.m<pre><code>clear;\nload('TempModel/X_Joint12.mat');\nd.calculateData();\nd.mo.setGPU('off');\nB.setUIoutput();\nd=B.d;\nd.mo.isCrack=1;\n\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\nd.mo.isHeat=1;%calculate heat in the model\n\nd.mo.setShear('on');\ngpuStatus=d.mo.setGPU('auto');\ntotalCircle=50;\nd.tic(totalCircle);\nfName=['data\\step\\' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nd.mo.aBF=d.mo.aBF;\nd.mo.aMUp(d.GROUP.lefPlaten)=0;\nd.mo.aMUp(d.GROUP.rigPlaten)=0;\n%d.mo.aMUp=d.mo.aMUp*0;\nd.balance('Standard',1);\n\ndis=800;\nstepNum=16000\nrecordNum=800;\ndDis=dis/stepNum;\nnum=0;\nfor i=1:stepNum\n    d.moveGroup('topPart',0,0,-dDis);\n    d.balance(2,1);\n    if mod(i,recordNum)==0\n        num=num+1;\n        save([fName num2str(num) '.mat']);\n    end\nend\nd.show('Displacement');\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxCrush3Finish');\nsave(['TempModel/' B.name '3.mat'],'d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examplesModel/BoxFiberCouple/","title":"BoxFiberCouple","text":"Step 1Step 2Step 3 user_BoxFiberCouple1.m<pre><code>%make a box model, which will be put on a slope\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='FiberCouple';\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.01;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=0.9;%width, length, height, average radius\nB.sampleL=0.4;%when L is zero, it is a 2-dimensional model\nB.sampleH=0.6;\nB.setType('topPlaten');\nB.buildInitialModel();%B.show();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(2);%input is compaction time\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n%d.showFilter('Group',{'sample'});\nd.mo.setGPU('off');\n\n%save the soil particles in struct object\nsampleObj=d.group2Obj('sample');\nsampleObj.ballR=B.ballR;\nsampleObj.sampleW=B.sampleW;\nsampleObj.sampleL=B.sampleL;\nsampleObj.sampleH=B.sampleH;\ntopPlatenObj=d.group2Obj('topPlaten');\nsave('TempModel/FiberCoupleSample.mat','sampleObj','topPlatenObj');\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_BoxFiberCouple2.m<pre><code>%Pipeline Dislocation Deformation\nclear\nload('TempModel/FiberCoupleSample.mat');\nouterFiber=1;%fiber outside the tube\nballR=sampleObj.ballR*0.596;\nisSoil=0;%when is Soil is 1, filled with soil particles\nB=obj_Box;%build a box object\nB.name='FiberCouple';\nB.GPUstatus='auto';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=ballR;\nB.isShear=0;\nB.isSample=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=0.9;%width, length, height, average radius\nB.sampleL=0.4;%when L is zero, it is a 2-dimensional model\nB.sampleH=0.6;\n%zB.platenStatus(:)=1;\n%when isSoil is 1, make a full box that will be filled with soil\nif isSoil==0\nB.boundaryStatus=[1,1,0,0,1,0];\nB.platenStatus=[0,0,0,0,1,0];\nelse\nB.boundaryStatus=[1,1,1,1,1,0];\nB.platenStatus=[0,1,0,1,0,1];\nend\n\nB.buildInitialModel();%B.show();\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\nd.mo.setGPU('off');\nminBallR=ballR*0.8;\ninnerR=0.05;\nlayerNum=2;\nRrate=0.8;\nlengthRate=1;\ntubeLength=B.sampleW/2*lengthRate;\n\n%make the tube (tunnel) object\nringObj=f.run('fun/makeRing.m',innerR,layerNum,minBallR,Rrate);\nringElementNum=length(ringObj.X)/layerNum;\nmaxBallR=max(ringObj.ballRs);\nballRrate=minBallR/maxBallR;\ncutDis=maxBallR*(ballRrate*2-1)*2;%distance between two tubes\nsZ=sampleObj.Z;\ntubeZ=(max(sZ)+min(sZ))/2;%position of tube\n%define the tube properties (PVC material)\nmatTxt=load('Mats\\pvc.txt');\nMats{1,1}=material('pvc',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;\n\n%define object for the model\ntube_dL=(ringObj.ballRs(end)-ringObj.ballRs(1))*2;%\ntubeObj=mfs.make3Dfrom2D(ringObj,tubeLength-tube_dL,minBallR);\n\ntubeObj=mfs.rotate(tubeObj,'XZ',90);%rotate the group along XZ plane\ntube1Obj=mfs.move(tubeObj,B.sampleW/4-cutDis/2,B.sampleL/2,tubeZ);\ntube2Obj=mfs.move(tubeObj,B.sampleW/4+tubeLength+cutDis/2,B.sampleL/2,tubeZ);\n\nfiberObjLeft.X=tubeObj.zList;\nfiberObjLeft.Y=zeros(size(tubeObj.zList));\nfiberObjLeft.Z=zeros(size(tubeObj.zList));\nfiberObjLeft.R=ones(size(tubeObj.zList))*maxBallR;\n\nfiberObjLeft=mfs.alignObj('right',fiberObjLeft,tube1Obj);\nfiberObjRight=mfs.alignObj('right',fiberObjLeft,tube2Obj);\n\nfiberObjC.X=(max(fiberObjLeft.X)+min(fiberObjRight.X))/2;\nfiberObjC.Y=0;\nfiberObjC.Z=0;\nfiberObjC.R=maxBallR;\n\nfiberObj=mfs.combineObj(fiberObjLeft,fiberObjC,fiberObjRight);\nfiberObj=mfs.move(fiberObj,0,B.sampleL/2,tubeZ);\n\nfiberAngle=[90,270]*pi/180;\nrate=0.96;\nfiberR1=ringObj.outerR+minBallR;\nfiberY=fiberR1*cos(fiberAngle).*rate;\nfiberZ=fiberR1*sin(fiberAngle).*rate;\n\nfiber1Obj=mfs.move(fiberObj,0,fiberY(1),fiberZ(1));\nfiber2Obj=mfs.move(fiberObj,0,fiberY(2),fiberZ(2));\n%here, we can use fs.showObj to see the objects\n%fs.showObj(fiber1Obj,'add');fs.showObj(tube1Obj,'add');fs.showObj(tube2Obj);return\n\n%import the objects to the model\n[tube1Id,tube2Id,fiber1Id,fiber2Id]=d.addElement(1,{tube1Obj,tube2Obj,fiber1Obj,fiber2Obj});%add a slope boundary\nd.addGroup('tube1',tube1Id);%add a new group\nd.addGroup('tube2',tube2Id);%add a new group\nd.addGroup('fiber1',fiber1Id);%add a new group\nd.addGroup('fiber2',fiber2Id);%add a new group\n\n%d.show('aR');view(90,0);%check the position of fiber\n\nG=d.GROUP;\nd.addGroup('tubeFiber',[G.tube1;G.tube2;G.fiber1;G.fiber2]);\nd.setClump([G.tube1;G.tube2;G.fiber1;G.fiber2;G.lefB;G.rigB]);%set the pile clump\nd.mo.zeroBalance();\n\n%\nif isSoil==1\n    sampleId=d.addElement(1,sampleObj);\n    d.addGroup('sample',sampleId);\n    sX=d.mo.aX(sampleId);sY=d.mo.aY(sampleId);sZ=d.mo.aZ(sampleId);\n    dipD=90;dipA=90;radius=ringObj.outerR;height=B.sampleW;\n    columnFilter=f.run('fun/getColumnFilter.m',sX,sY,sZ,dipD,dipA,radius+B.ballR,height);\n    d.delElement([sampleId(columnFilter);d.GROUP.botPlaten]);\n    d.minusGroup('sample','tubeFiber',0.5);\n\n    topId=d.GROUP.topPlaten;\n    d.mo.aZ(topId)=mean(topPlatenObj.Z);\nend\nd=f.run('fun/setGroupId.m',d);\n%d.show('groupId');return\n\n%-------------------apply stress, and balance model------------------\nif isSoil==1\n    B.SET.stressXX=-6e3;\n    B.SET.stressYY=-6e3;\n    B.SET.stressZZ=-10e3;\n    B.setPlatenFixId();\n    B.setPlatenStress(B.SET.stressXX,B.SET.stressYY,B.SET.stressZZ,B.ballR*5);\n    d.balanceBondedModel0(1);\nend\n\nd.showB=2;\nd.resetStatus();\nd.mo.setGPU('auto');\nd.mo.dT=d.mo.dT*4;%increase the dT to increase the speed of balance\nd.balance('Standard',0.5);\nd.mo.dT=d.mo.dT/4;\n\nd.show();\nfigure;\nd.showFilter('Group',{'fiber1','fiber2'},'StressXX');\n%-------------------end apply stress, and balance model------------------\n\n%--------------------save data-----------------------\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\n%--------------------end save data-----------------------\nd.calculateData();\n</code></pre> user_BoxFiberCouple3.m<pre><code>clear;\nload('TempModel/FiberCouple2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\nd.mo.isHeat=1;%calculate heat in the model\nd.setStandarddT();\n\n%apply body force on tube\ntube2X=d.mo.aX(d.GROUP.tube2);\ntube2LeftId=d.GROUP.tube2(tube2X&lt;min(tube2X)+0.1);\naddWeight=-100;\nd.addGroup('tube2Left',tube2LeftId);\nd.mo.mGZ(tube2LeftId)=d.mo.mGZ(tube2LeftId)+addWeight/length(tube2LeftId);\n\nd.mo.setGPU('auto');\nd.mo.dT=2*d.mo.dT;\nd.balance('Standard',0.5);\nd.show('Displacement');\n\n%show the results\nfigure\nfX=d.mo.aX(d.GROUP.fiber1);\nsX=d.data.StrainXX(d.GROUP.fiber1);\nsubplot(2,2,1);\nplot(fX,sX);\ntitle(['top fiber, maximum strain: ' num2str(max(sX))]);\n\nfX=d.mo.aX(d.GROUP.fiber2);\nsX=d.data.StrainXX(d.GROUP.fiber2);\nsubplot(2,2,2);\nplot(fX,sX);\ntitle(['bottom fiber, maximum strain: ' num2str(max(sX))]);\n\nfX=d.mo.aX(d.GROUP.fiber1);\nsX=d.data.ZDisplacement(d.GROUP.fiber2);\nsubplot(2,2,3);\nplot(fX,sX);\ntitle(['top fiber, displacement']);\n\nfX=d.mo.aX(d.GROUP.fiber2);\nsX=d.data.ZDisplacement(d.GROUP.fiber2);\nsubplot(2,2,4);\nplot(fX,sX);\ntitle(['bottom fiber, displacement']);\n\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxSlope3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examplesModel/BoxLayer/","title":"BoxLayer","text":"Step 1Step 2 user_BoxLayer1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='BoxLayer';\nB.GPUstatus='auto';\nwidth=0.1;length=0;height=0.1;ballR=0.001;%width, length, height, radius\ndistriRate=0.2;%define distribution of ball radius, \nisClump=0;\n%--------------initial model------------\nB.ballR=ballR;\nB.isClump=isClump;\nB.distriRate=distriRate;\nB.sampleW=width;\nB.sampleL=length;\nB.sampleH=height;\n%B.BexpandRate=4;%expand boundaries\n%B.PexpandRate=4;%expand platens\n%B.type='GeneralSlope';\nB.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nB.setUIoutput();\n\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(2);%input is compaction time\nd=B.d;\nmfs.reduceGravity(d,5);\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxLayer1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_BoxLayer2.m<pre><code>%set the material of the model\nclear\nload('TempModel/BoxLayer1.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\nmatTxt=load('Mats\\StrongRock.txt');\nMats{1,1}=material('StrongRock',matTxt,B.ballR);\nMats{1,1}.Id=1;\nmatTxt2=load('Mats\\WeakRock.txt');\nMats{2,1}=material('WeakRock',matTxt2,B.ballR);\nMats{2,1}.Id=2;\nmatTxt3=load('Mats\\Water.txt');\nMats{3,1}=material('Water',matTxt3,B.ballR);\nMats{3,1}.Id=3;\nd.Mats=Mats;\n\ndipD=90;dipA=20;strongT=0.01;weakT=0.01;\nweakFilter=mfs.getWeakLayerFilter(d.mo.aX,d.mo.aY,d.mo.aZ,dipD,dipA,strongT,weakT);\nstrongFilter=~weakFilter;\nsampleId=d.getGroupId('sample');\naWFilter=false(size(weakFilter));\naWFilter(sampleId)=true;\nsampleWfilter=aWFilter&amp;weakFilter;\nd.addGroup('WeakLayer',find(sampleWfilter));\nsX=d.mo.aX(sampleId);sY=d.mo.aY(sampleId);sZ=d.mo.aZ(sampleId);\nRrate=0.2;\n\nr=(min(max(sX)-min(sX))/2)*Rrate;\ncenterFilter=mfs.getSphereFilter(sX,sY,sZ,r);\nd.addGroup('Pore',find(centerFilter));\nB.setPlatenFixId();\nd.setGroupMat('WeakLayer','WeakRock');\nd.setGroupMat('Pore','Water');\nd.groupMat2Model({'WeakLayer','Pore'},1);\nd.getModel();%d.setModel();%reset the initial status of the model\nd.resetStatus();%initialize model status, which records running information\n\nd.mo.bFilter(:)=0;\nd.connectGroup('Pore');\nfs.setPlatenStress(d,-1e6,-1e6,-1e6,B.ballR*5);\nd.mo.zeroBalance();\nd.deleteConnection('boundary');\nStandardBalanceNum=2;\nd.balance('Standard',StandardBalanceNum);\nmoveDis=mean(d.TAG.modelWHT)*0.1;\nd.moveBoundary('right',moveDis,0,0);%declare moving right boundary\nd.moveBoundary('back',0,moveDis,0);\nd.moveBoundary('top',0,0,moveDis);\n\nd.balance('Standard',StandardBalanceNum);\nd.balanceBondedModel0();%balance the bonded model without friction\nd.balanceBondedModel();%balance the bonded model with friction\n\nd.showFilter('SlideY',0.5,1,'aMatId');\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxLayer2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examplesModel/BoxWord/","title":"BoxWord","text":"Step 1Step 2Step 3 user_BoxWord1.m<pre><code>clear;\nfs.randSeed(1);%build random model\nB=obj_Box;%build a box object\nB.name='BoxWord';\nB.GPUstatus='auto';\nB.ballR=0.005;\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=1;\nB.sampleL=0.016;\nB.sampleH=0.6;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='topPlaten';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(1);%input is compaction time\nmfs.reduceGravity(d,2);%reduce the gravity of element\n\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\nd.show('aR');\n\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();%because data is clear, it will be re-calculated\n</code></pre> user_BoxWord2.m<pre><code>%set the material of the model\nclear;\nload('TempModel/BoxWord1.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%-----------------draw word\npictureName='slope/MatDEM.png';%word should be in black color\nsX=d.mo.aX(1:d.mNum);sZ=d.mo.aZ(1:d.mNum);\nimH=1200;imW=800;%image will be resized to imW*imH\n%read the image and change the size,image is in black and white color\nregionFilter=mfs.image2RegionFilter(pictureName,imH,imW);%white is true\nsFilter=f.run('fun/applyRegionFilter.m',regionFilter,sX,sZ);\nsId=find(sFilter);\nsId(sId&gt;d.mNum)=[];\nd.addGroup('word',sId);\n\nd.makeModelByGroups({'word'});\n%d.mo.bFilter(:)=true;d.mo.zeroBalance();\nd.setClump('word');\n%d.showFilter('Group',{'word'},'aR');\nd.show('aR');\nview(0,-10);\n\n%-----------save the model\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxStep2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_BoxWord3.m<pre><code>clear;\nload('TempModel/BoxWord2.mat');\nB.setUIoutput();\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%d.setModel();%reset the initial status of the model\nd.status=modelStatus(d);%initialize model status, which records running information\n\nd.mo.isShear=0;\nd.mo.isHeat=1;%calculate heat in the model\nd.addFixId('Y',d.GROUP.word);\nd.moveBoundary('front',0,-B.ballR,0);\nd.moveBoundary('back',0,B.ballR,0);\nvisRate=0;\nd.mo.mVis=d.mo.mVis*visRate;\ngpuStatus=d.mo.setGPU('auto');\nd.setStandarddT();\nd.mo.dT=d.mo.dT*4;\n\ntotalCircle=50;\nd.tic(totalCircle);\nfName=['data/step/' B.name  num2str(B.ballR) '-' num2str(B.distriRate) 'loopNumHappy'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    d.balance('Standard',0.1);\n    d.clearData(1);\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\n    d.toc();%show the note of time\nend\n\nd.show('aR');\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('Step3Finish');\nsave(['TempModel/' B.name '3.mat'],'B','d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examplesModel/Cable/","title":"Cable","text":"Step 1 user_Cable.m<pre><code>%the code shows how to make noodles object from 2D disc\n%step 1.1: define the parameters of modeling\nclear;\ndAngle1=360/14;%rotation angle of disc in each copy\ncurveR=0.003;\ncurveH=0.02;\ncircle=5;\ndiscR=0.001;\nballR=0.00025;\ndDis=ballR*1.2;%displacement of disc in each copy\n\nLwidth=ballR*6;\nLheight=ballR*6;\ndAngle2=10;%rotation angle of L shape in each copy\n\n%step 1.2: define the path of the noodles\nt=0:0.01:(circle*2*pi);\nX1=curveR*sin(t);%path X, Y, Z\nY1=curveR*cos(t);\nZ1=curveH*(t/max(t));\n%plot3(X1,Y1,Z1);axis equal;%show the path\n\nt=0:0.01:(circle*2*pi);\nX2=curveR*sin(t);%path X, Y, Z\nY2=curveR*cos(t);\nZ2=curveH*(t/max(t));\nplot3(X2,Y2,Z2);axis equal;%show the path\n\n%step 1.3: make 3D noodles object according to a disc and a path\ndiscObj0=f.run('fun/makeDisc.m',discR,ballR);%define the basic disc\n%allObj=mfs.make3DalongPath(discObj0,X,Y,Z,dDis,dAngle);\nallDiscObj=f.run('fun/make3DalongPath.m',discObj0,X1,Y1,Z1,dDis,dAngle1);\n\nRrate=0.8;\nLObj=mfs.makeLShape(Lwidth, Lheight, ballR*0.8);\nLObj=mfs.rotate(LObj,'YZ',-90);\nLObj=mfs.moveObj2Origin(LObj);\nLObj.R=LObj.R/Rrate;\nallLObj=f.run('fun/make3DalongPath.m',LObj,X1,Y1,Z1,dDis,dAngle2);\n\nallDiscObj=mfs.align2Value('bottom',allDiscObj,0);\nsampleH=mfs.getObjEdge('top',allDiscObj);\nsampleW=sampleH;sampleL=sampleH;\nallDiscObj1=mfs.move(allDiscObj,sampleW/4,sampleH/4,0);\n\nallLObj2=mfs.move(allLObj,sampleW/2,sampleH*3/4,0);\nallLObj2=mfs.align2Value('bottom',allLObj2,0);\n\n%step 2: make a box and import the objects\nB=obj_Box;%declare a box object\nB.name='Cable';\nB.ballR=ballR;%element radius\nB.sampleW=sampleW;%width, length, height\nB.sampleL=sampleL;%when L is zero, it is a 2-dimensional model\nB.sampleH=sampleH;\nB.isSample=0;%\nB.boundaryStatus=[1,1,1,1,1,0];%left, right, front, back, bottom and top sides\nB.setType('botPlaten');%add a top platen to compact model\nB.buildInitialModel();\nB.setUIoutput();\nd=B.d;\nd.mo.setGPU('off');\n\n[cableId1,cableId2]=d.addElement(1,{allDiscObj1,allLObj2});\nd.addGroup('Cable1',cableId1);\nd.setClump('Cable1');\nd.addGroup('Cable2',cableId2);\nd.setClump('Cable2');\nd.mo.setShear('off');\nd.mo.zeroBalance();\nd.resetStatus();\nd.mo.mVis=d.mo.mVis*0.01;\n\n%step 3: drop of the two noodles\nfName=['data/step/' B.name num2str(B.ballR) '-2,' num2str(B.distriRate) 'loopNum'];\nd.mo.setGPU('auto');\nd.mo.dT=d.mo.dT*4;\nfor i=1:10\n    d.balance('Standard',0.2);\n    d.figureNumber=d.show('Displacement');\n    view(10*i,30);\n    save([fName num2str(i) '.mat']);\nend\n</code></pre>"},{"location":"examples/examplesModel/Columns/","title":"Columns","text":"Step 1Step 2Step 3 user_Columns1.m<pre><code>%This code show the mixture of clumps and basic elements\nclear;\n%-----------step0: make object (struct data)------------\ns=0.1;%size of the model\nsampleW=s;sampleL=s;sampleH=s;\nisSample=0;%defines whether including basic elements\nballR=0.0025;%radius of element\ncolumnR=0.01;%size of a column\ncolumnH=0.03;\nRrate=0.8;\ncolumnObj=f.run('fun/makeColumn.m',columnR,columnH,ballR,Rrate);%make a column object\ncellSide=sqrt(columnR*columnR*4+columnH*columnH);%define cell size of grid\nxNum=floor(sampleW/cellSide);%define the number of cell along x\nyNum=floor(sampleL/cellSide);\nzNum=floor(sampleH/cellSide);\n\n%make an empty initial object\nallObj.X=[];allObj.Y=[];allObj.Z=[];allObj.R=[];allObj.groupId=[];\ngroupId=-10;%the groupId of a clump starts from -11\n%making a series of columns\nfor i=1:xNum\n    for j=1:yNum\n        for k=1:zNum\n            columnx=i*cellSide-cellSide/2;\n            columny=j*cellSide-cellSide/2;\n            columnz=k*cellSide-cellSide/2;\n            newObj=columnObj;\n            newObj=mfs.rotate(newObj,'YZ',rand()*360);\n            newObj=mfs.rotate(newObj,'XY',rand()*360);\n            newObj=mfs.move(newObj,columnx,columny,columnz);\n            groupId=groupId-1;\n            newObj.groupId=ones(size(newObj.X))*groupId;\n            allObj=mfs.combineObj(allObj,newObj);\n        end\n    end\nend\nframe=mfs.getObjFrame(allObj);\nallObj=mfs.move(allObj,(sampleW-frame.width)/2,(sampleL-frame.length)/2,(sampleH-frame.height)/2);\n\nfs.showObj(allObj);\n%-----------step1: build model------------\nB=obj_Box;%declare a box object\nB.name='Column';\nB.ballR=ballR;%element radius\nB.sampleW=sampleW;%width, length, height\nB.sampleL=sampleL;%when L is zero, it is a 2-dimensional model\nB.sampleH=sampleH;\nB.isSample=isSample;%\nB.setType('topPlaten');%add a top platen to compact model\nB.buildInitialModel();\nB.setUIoutput();\nd=B.d;\nd.mo.setGPU('off');\ncolumnsId=d.addElement(1,allObj);\nd.addGroup('columns',columnsId);\nd.setClump();\n\n%when isSample is 0, only clumps in the model\nif isSample==0\n    d.addGroup('sample',columnsId);\n    d.mo.setShear('off');\n    B.gravitySediment(10);%\nelse\n    %when isSample is 1, basic elements are included\n    d.minusGroup('sample','columns',0.8);\n    d.mo.setShear('off');\n    B.gravitySediment();%\nend\n\nd.setData();\nf.run('fun/mixGroupId.m',d);%mix the groupId\nd.showFilter('SlideZ',0.05,0.75);\nd.showFilter('SlideY',0.05,0.85);\nd.showFilter('SlideX',0.05,0.85);\nfigure;\nd.show('StressZZ');\nfigure;\nd.show('groupId');\n\nd.status.dispEnergy();%display the energy of the model\nd.mo.setGPU('off');\nd.clearData(1);%clear dependent data\nd.recordCalHour('Step1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_Columns2.m<pre><code>%set the material of the model\nclear\nload('TempModel/Column1.mat');\nB.setUIoutput();%set the output\nd=B.d;\nd.calculateData();%calculate data\nd.mo.setGPU('off');%close the GPU calculation\nd.getModel();%get xyz from d.mo\n\nd.delElement('topPlaten');\nd.delElement('topB');\n\nvisRate=0.0001;\nd.mo.mVis=d.mo.mVis*visRate;\nd.mo.setShear('off');\n%add all elements to the AllSample group\nd.addGroup('AllSample',(1:d.mNum)');\nd.moveGroup('AllSample',0,0,B.sampleH/2);\n\nshowType='mV';\nd.mo.dT=d.mo.dT*4;\ngpuStatus=d.mo.setGPU('auto');\ntotalCircle=30;\nd.tic(totalCircle);\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    d.balance('Standard',0.1);\n    d.show(showType);\n    pause(0.05);\n\n    d.clearData(1);%clear data in d.mo\n    save([fName num2str(i) '.mat']);\n    d.calculateData()\nend\n\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxCrush3Finish');\nsave(['TempModel/' B.name '3.mat'],'d');\nsave(['TempModel/' B.name '3R' num2str(B.ballR) '-' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre> user_ColumnShow.m<pre><code>d.setData();\nf.run('fun/mixGroupId.m',d);%mix the groupId\nd.showFilter('SlideZ',0.05,0.75);\nd.showFilter('SlideY',0.05,0.85);\nd.showFilter('SlideX',0.05,0.85);\nfigure;\nd.show('StressZZ');\nfigure;\nd.show('groupId');\n</code></pre>"},{"location":"examples/examplesModel/DropOnNet/","title":"DropOnNet","text":"Step 1Step 2 user_createSurfaceNet.m<pre><code>clear;\n%The function signature of mfs.create3Dsurface is: obj=mfs.create3Dsurface(x,y,z,ballR,Rrate,varargin),\n%while the meanings of the input parameters are:\n%x,y,z: digital elelvation model (DEM) scattered data.\n%ballR: the uniform radius of elements.\n%Rrate: the ratio of the distance between two elements to their diameter. use 0.5~0.8, when it is 0.7, no gap between elements\n%varargin: 1 parameter, the uniform width of the margins to be clipped;\n%          2 parameters, the widths of the margins to be clipped, left and right, top and bottom, respectively;\n%          4 parameters, the widths of the margins to be clipped, left, right, top, bottom, respectively.\n%Tiancheng Le\n\nvalleyData=load('slope/valley.txt');\nvalleyX=valleyData(:,1);\nvalleyY=valleyData(:,2);\nvalleyZ=valleyData(:,3);\n[valleyX,valleyY]=mfs.rotateIJ(valleyX,valleyY,29);\nballR=500;Rrate=0.6;\nvalleyObj=mfs.createSurfaceNet(valleyX,valleyY,7*valleyZ,ballR,Rrate,6000,8000,10000,12000); %4 additional input parameters.\nballR=500;Rrate=3;\nvalleyObj2=mfs.createSurfaceNet(valleyX,valleyY,7*valleyZ,ballR,Rrate,6000,8000,10000,12000); %4 additional input parameters.\n\nvalleyObj.Value=valleyObj.Z;\nvalleyObj2.Value=valleyObj2.Z;\n\n%Display the 4 objects created with the function createSurfaceNet.\nfigure(1);\nsubplot(1,2,1);\nfs.showObj(valleyObj);\nsubplot(1,2,2);\nfs.showObj(valleyObj2);\n\nreturn\nlpsData=load('slope/lps1.txt');\nlpsX=lpsData(:,1);\nlpsY=lpsData(:,2);\nlpsZ=lpsData(:,3);\n[lpsX,lpsY]=mfs.rotateIJ(lpsX,lpsY,-60);\nballR=7;Rrate=0.7;\nlpsObj.Value=lpsObj.Z;\nlpsObj=mfs.createSurfaceNet(lpsX,lpsY,lpsZ,ballR,Rrate,50,100); %2 additional input parameters.\nfs.showObj(lpsObj);\n</code></pre> user_DropOnNet.m<pre><code>%using functions to build objects, modify and import objects\nclear;\n%-----------step0: make object (struct data)------------\nballR=0.02;\nhobObj=f.run('fun/makeHob.m',0.2,0.1,1,ballR,0.8);%see the function file about the input parameters\ncolumnObj=f.run('fun/makeColumn.m',0.1,0.28,ballR,0.8);\nnetWidth=2;netHeight=2;cellW=0.1;cellH=0.1;\nnetObj=mfs.denseModel(0.8,@mfs.makeNet,netWidth, netHeight, cellW, cellH, ballR);\n\nhobObj2=mfs.move(hobObj,netWidth/2+0.2,netHeight/2,0.8);\ncolumnObj2=mfs.move(columnObj,netWidth/2-0.2,netHeight/2,0.8);\nnetObj2=mfs.rotate(netObj,'YZ',-90);\nnetObj2=mfs.move(netObj2,0,0,0.2);\n\nallObj=mfs.combineObj(hobObj2,columnObj2,netObj2);%combine the objects\n\n%fs.showObj(allObj);\n%return;\n\n%-----------step1: build model------------\nB=obj_Box;%declare a box object\nB.name='DropOnNet';\nB.ballR=ballR;%element radius\nB.sampleW=netWidth;%width, length, height\nB.sampleL=netHeight;%when L is zero, it is a 2-dimensional model\nB.sampleH=1;\nB.isSample=0;%an empty box without sample elements\nB.setType('botPlaten');%add a top platen to compact model\nB.boundaryStatus=[0,0,0,0,1,0];\nB.buildInitialModel();\n\nd=B.d;\nd.mo.setGPU('off');\n[netId,hobId,columnId]=d.addElement(1,{netObj2,hobObj2,columnObj2});\nd.addGroup('net',netId);\nd.addGroup('hob',hobId);\nd.addGroup('column',columnId);\nd.setClump(netId);\nd.setClump(hobId);\nd.setClump(columnId);\nd.delElement('botPlaten');\nd.GROUP.groupProtect=[];\nd.delElement('botB');\n\nnetX=d.mo.aX(d.GROUP.net);\nnetY=d.mo.aY(d.GROUP.net);\nfixId=(netX==min(netX))|(netX==max(netX))|(netY==min(netY))|(netY==max(netY));\nfixId=find(fixId);\nd.addFixId('X',fixId);\nd.addFixId('Y',fixId);\nd.addFixId('Z',fixId);\nd.setGroupId();\nd.show('FixXId');d.show('groupId');\n\n%-----------step2: assign material------------\nmatTxt=load('Mats\\rubber.txt');%load material file\nmatTxt(1)=matTxt(1)/1;\nMats{1,1}=material('rubber',matTxt,B.ballR);\nMats{1,1}.Id=1;\nd.Mats=Mats;%assign new material\nd.groupMat2Model({'sample'},1);%apply the new material\n\n%-----------step3: numerical simulation------------\nd.mo.mVis(:)=0;\nd.mo.isShear=0;\n\nshowType='mV';\nfigureNumber=d.show(showType);\nd.figureNumber=figureNumber;\nd.mo.setGPU('auto');\nd.mo.dT=d.mo.dT*4;\ntotalCircle=50;\nd.tic(totalCircle);\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    d.balance('Standard',0.1);\n    d.show(showType);\n    pause(0.05);\n\n    d.clearData(1);%clear data in d.mo\n    save([fName num2str(i) '.mat']);\n    d.calculateData();\nend\n%f.run('fun/makeGIF.m',fName,0,totalCircle,'mV');\n</code></pre>"},{"location":"examples/examplesModel/Functions/","title":"Functions","text":"Step 1Step 2 user_Functions.m<pre><code>%\u7528\u4e8e\u5c55\u793a\u81ea\u5b9a\u4e49\u51fd\u6570\u548c\u5168\u5c40\u53c2\u6570\u7684\u4f7f\u7528\n%show the use of functions and global parameters\nclear;\nf.clearFunction();%clear all defined functions\nf.define('examples/funTest.m');%define the function to increase the speed\nf.define('fun/makeColumn.m');\nf.define('fun/makeDisc.m');\n\nfunctionList=f.getFunctionList();%list of defined functions\ncolumnObj=f.run('fun/makeColumn.m',0.1,0.28,0.01,0.8);\nfigure;\nfs.showObj(columnObj);\n\nf.setGlobalData('data1',1234);\ndata=f.getGlobalData('data1');\n</code></pre> user_Function2Object.m<pre><code>%\u8fd9\u4e2a\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5229\u7528\u51fd\u6570\u6765\u751f\u6210\u548c\u4fee\u6539\u7269\u4f53\uff0c\u5e76\u5c06\u5176\u5bfc\u5165\u5230\u6a21\u578b\u4e2d\n%using functions to build objects, modify and import objects\nclear;\na1=f.run('examples/funtest.m',1,2,3);%sum of 1,2,3, a1 will be 6\n%step1: make object (struct data)\nhobObj=f.run('fun/makeHob.m',0.2,0.1,1,0.01,0.8);%see the function file about the input parameters\ncurveObj=f.run('fun/make3DCurve.m',[0;1;2;3],[2,3,5,3],[3,5,2,1],0.05,0.8);\ncolumnObj=f.run('fun/makeColumn.m',0.1,0.28,0.01,0.8);\nringObj=f.run('fun/makeRing.m',0.1,3,0.01,0.6);\nringObj3D=mfs.make3Dfrom2D(ringObj,0.6,0.01);\n\n%step2: modify and combine the object, more operations can be found in help-&gt;mfs\nringObj3D2=mfs.rotate(ringObj3D,'YZ',60);%rotate the object and then move it\nringObj3D2=mfs.move(ringObj3D2,0.5,0.5,0.5);\nhobObj2=mfs.move(hobObj,0.5,0.8,0.2);\ncolumnObj2=mfs.move(columnObj,0.5,0.5,0.3);\n[columnObj2,ringObj3D2]=mfs.alignObj('front',columnObj2,ringObj3D2);%align objects\nallObj=mfs.combineObj(ringObj3D2,hobObj2,columnObj2);%combine the objects\n%figure;fs.showObj(allObj);\n\nfigure;%draw objects\nsubplot(2,2,1);%use subplot to draw four figures\nfs.showObj(hobObj);\nsubplot(2,2,2);\nfs.showObj(curveObj);\nsubplot(2,2,3);\nfs.showObj(columnObj);\ntitle('This is a column');\nsubplot(2,2,4);\nfs.showObj(ringObj3D);\ntitle('This is a ring');\n\n%step3: make a Box, and import the objects to the box\nB=obj_Box;%declare a box object\nB.name='Objects';\nB.ballR=0.01;%element radius\nB.sampleW=1;%width, length, height\nB.sampleL=1;%when L is zero, it is a 2-dimensional model\nB.sampleH=1;\nB.isSample=0;%an empty box without sample elements\nB.setType('botPlaten');%add a top platen to compact model\nB.buildInitialModel();\n\nd=B.d;\n[ringId,hobId,columnId]=d.addElement(1,{ringObj3D2,hobObj2,columnObj2});\nd.addGroup('ring',ringId);\nd.addGroup('hob',hobId);\nd.addGroup('column',columnId);\n\nfigure;%show the model\nd.setGroupId();%set groupId for each group\nd.show('groupId');\nview(30,20);\n</code></pre>"},{"location":"examples/examplesModel/LineModel/","title":"LineModel","text":"Step 1 user_LineModel.m<pre><code>%this example includes:\n%1. use line segments to generate wall boundary\n%2. use d.getGroupForce to calculate force between groups\n%3. use d.status.recordCommand to record data\n%4. draw curves of forces according to recorded data\n%5. use d.addRecordProp to record data\n%6. use d.addTimeProp to generate seismic wave\nclear\nballR=0.005;%when it is 0.0005, 258k elements\nRrate=0.8;\nsampleW=1;sampleL=0;sampleH=1.2;\nstiffnessRate=0.001;%&gt;=0.001, use low stiffness to increase speed\n\n%-----------step0: make left and right lines\nlineX=[ballR;0.45;0.45;0.40];\nlineY=zeros(size(lineX));\nlineZ=[1;0.50;0.30;0.25];\ncurveObj1=f.run('fun/make3DCurve.m',lineX,lineY,lineZ,ballR,Rrate);\nlineX=[1-ballR;0.55;0.55;0.60];\nlineY=zeros(size(lineX));\nlineZ=[1;0.50;0.30;0.25];\ncurveObj2=f.run('fun/make3DCurve.m',lineX,lineY,lineZ,ballR,Rrate);\n\n%-----------step1: build model------------\nB=obj_Box;%declare a box object\nB.name='LineModel';\nB.ballR=ballR;%element radius\nB.sampleW=sampleW;%width, length, height\nB.sampleL=sampleL;%when L is zero, it is a 2-dimensional model\nB.sampleH=sampleH;\nB.GPUstatus='off';\nB.isSample=1;%\nB.distriRate=0;\nB.setType('none');%add a top platen to compact model\nB.buildInitialModel();\nB.setUIoutput();\nd=B.d;\nd.mo.setGPU('off');\n\ndiscR=sampleH/4.25;\nmX=d.mo.aX(1:d.mNum);\nmZ=d.mo.aZ(1:d.mNum);\ncx=sampleW/2;\ncz=sampleH*3/4;\nfilter=sqrt((mX-cx).^2+(mZ-cz).^2)&lt;discR;\nd.delElement(find(~filter));\n\n%-----------step2: import lines to the model------------\n[leftLineId,rightLineId]=d.addElement(1,{curveObj1,curveObj2});\nlineId=[leftLineId;rightLineId];\nd.addGroup('LeftLine',leftLineId);\nd.addGroup('RightLine',rightLineId);\nd.addGroup('Lines',lineId);\nd.setClump('Lines');\nd.addFixId('X',lineId);\nd.addFixId('Y',lineId);\nd.addFixId('Z',lineId);\n\nd.setModelStiffness(stiffnessRate);\nd.mo.mVis=d.mo.mVis*0.01;\nd.mo.aR(d.GROUP.sample)=d.mo.aR(d.GROUP.sample)*0.9;\nd.mo.dT=d.mo.dT*4;\nd.mo.setShear('off');\nd.mo.zeroBalance();\nd.resetStatus();\nd.recordStatus();\n\n%two methods are introduced to monitor the data of elements during\n%simulation. Data will be recorded in d.status.SET.PROP\n%---------------------the first method----------------------\n%record the mean Z and VZ of elements 2000 and 2001\nd.addGroup('TwoElement',[2000;2001]);%define a group\nd.addRecordProp('TwoElement','aZ');%declare recording aZ\nd.addRecordProp('TwoElement','mVZ');%declare recording mVZ\n\n%generating sine wave on the leftLine group, which shakes up and down\ntotalBalanceNum=10000;%data number of the wave\ntotalT=totalBalanceNum*d.mo.dT;%total time of the wave\n\nperiod=0.2;%period of the wave\nTs=(0:totalBalanceNum)*d.mo.dT;\nmaxA=500;%maximum acceleration\nValues=maxA*sin(Ts*(2*pi)/period);\nfigure;plot(Ts,Values);xlabel('Ts [second]');ylabel('Z acceleration of the LeftLine [m/s^2]');\ntitle('Wave on the LeftLine');\nd.addTimeProp('LeftLine','mAZ',Ts,Values);%assign the AZ to elements of LeftLine\n%d.removeTimeProp('LeftLine','mAZ');\n\nd.addGroup('LeftLine1',d.GROUP.LeftLine(1));%define a group\nd.addRecordProp('LeftLine1','aZ');%declare recording aZ\nd.addRecordProp('LeftLine1','mAZ');%declare recording mAZ\n%---------------------end the first method----------------------\n\n%---------------------the second method----------------------\n%@@@@@record force on a group, curves will be shown after the loop\nd.status.SET.leftFZ=[];%initilize the recorded parameters\nd.status.SET.leftFX=[];\nd.status.SET.rightFZ=[];\nd.status.SET.rightFX=[];\n%@@@@@two methods to record the force of a group\n%method1: use the force recorded in the d.status.nFnZ and nFnX\nleftCommand='obj.SET.leftFZ=[obj.SET.leftFZ;sum(sum(d.mo.nFnZ(d.GROUP.LeftLine,:)))];obj.SET.leftFX=[obj.SET.leftFX;sum(sum(d.mo.nFnX(d.GROUP.LeftLine,:)))];';\n%method2: use the d.getGroupForce, see the help for details\nrightCommand='d=obj.dem;rightF=d.getGroupForce(''RightLine'');obj.SET.rightFZ=[obj.SET.rightFZ;rightF.totalFZ];obj.SET.rightFX=[obj.SET.rightFX;rightF.totalFX];';\n\nd.status.recordCommand=[leftCommand rightCommand];\nd.status.runRecordCommand();%run the command to record the first value\n%record force on a group, curves will be shown after the loop\n%d.show('StressZZ');return;\n%---------------------end the second method----------------------\n\ntotalCircle=10;\nd.tic(totalCircle);\ngpuStatus=d.mo.setGPU('auto');\nfName=['data/step/' B.name num2str(B.ballR) '-' num2str(B.distriRate) 'loopNum'];\nsave([fName '0.mat']);%return;\nfor i=1:totalCircle\n    d.mo.setGPU(gpuStatus);\n    d.balance('Standard',0.04);\n    d.mo.setGPU('off');\n    d.figureNumber=d.show('mV');\n    d.toc();\n    d.clearData(1);%clear data in d.mo\n    save([fName num2str(i) '.mat']);\n    d.calculateData()\nend\n\nleftF=d.getGroupForce('LeftLine','sample');%force act on LeftLine (from sample)\nrightF=d.getGroupForce('RightLine');%get the force on the right line\n\n%draw curves of the first method\nfigure;\nsubplot(2,2,1);\nd.status.show('PROPTwoElement_aZ');\nsubplot(2,2,2);\nd.status.show('PROPTwoElement_mVZ');\nsubplot(2,2,3);\nd.status.show('PROPLeftLine1_aZ');\nsubplot(2,2,4);\nd.status.show('PROPLeftLine1_mAZ');\n\n%draw curves of the second method\nfigure;\nsubplot(2,2,1);\nd.status.show('SETleftFX');%X force of left line\nsubplot(2,2,2);\nd.status.show('SETrightFX');%X force of right line\nsubplot(2,2,3);\nd.status.show('SETleftFZ');\nsubplot(2,2,4);\nd.status.show('SETrightFZ');\n</code></pre>"},{"location":"examples/examplesModel/MicroParticle/","title":"MicroParticle","text":"Step 1Step 2 user_L2MicroParticle1.m<pre><code>%build the geometrical model\nclear;\nfs.randSeed(2);%build random model\nB=obj_Box;%build a box object\nB.name='BoxMicroParticle';\nB.GPUstatus='auto';\nB.ballR=2e-5;\nB.isClump=0;\nB.distriRate=0.2;\nB.sampleW=5e-3;\nB.sampleL=0;\nB.sampleH=5e-3;\n%B.BexpandRate=4;\n%B.PexpandRate=4;\nB.type='topPlaten';\n%B.type='TriaxialCompression';\nB.setType();\nB.buildInitialModel();%B.show();\n\nB.setUIoutput();\n\nd=B.d;%d.breakGroup('sample');d.breakGroup('lefPlaten');\n\nd.mo.setGPU('auto');\n\n%--------------end initial model------------\nB.gravitySediment();\nB.compactSample(1);%input is compaction time\n%------------return and save result--------------\nd.status.dispEnergy();%display the energy of the model\n\nd.clearData(1);%clear dependent data\nd.recordCalHour('BoxMicroParticle1Finish');\nsave(['TempModel/' B.name '1.mat'],'B','d');\nsave(['TempModel/' B.name '1R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\nd.show('aR');\n</code></pre> user_L2MicroParticle2.m<pre><code>%---------------1. load data\nclear\nload('TempModel/BoxMicroParticle1.mat');\nB.setUIoutput();%set output of message\nd=B.d;\nd.calculateData();\nd.mo.setGPU('off');\nd.getModel();%get xyz from d.mo\n\n%---------------2. get the gray rank matrix\nfileName='slope\\micro particle.PNG';%the file to \nsource=imread(fileName);%read image\nsource=double(source);%change to double data\nimH=size(source,1);imW=size(source,2);%the height and width of the image\nRGB=(source(:,:,1)*256+source(:,:,2))*256+source(:,:,3);%changed to RGB values\nRGB=flipud(RGB);%flip data along vertical direction\n[uColor,iA,iC]=unique(RGB);%find unique color\nGray=mean(source,3);%get gray level\nGray=flipud(Gray);%flip data along vertical direction\nuGray=Gray(iA);%unique gray level\n[v,grayI]=sort(uGray);%sort the groupId according to gray level\nGrayRank=reshape(grayI(iC),size(Gray));%gray rank matrix\n\n%---------------3. get the groupId of clump by image\nsampleId=d.GROUP.sample;%the sample group will be used\nsampleX=d.mo.aX(sampleId);\nsampleZ=d.mo.aZ(sampleId);\nsampleR=d.mo.aR(sampleId);\n\nx1=min(sampleX-sampleR);%get the four limits of the model\nx2=max(sampleX+sampleR);\nz1=min(sampleZ-sampleR);\nz2=max(sampleZ+sampleR);\nsFilter=false(d.mNum,1);\nsFilter(d.GROUP.sample)=true;%filter of elements\n\ndX=(x2-x1)/imW;\ndZ=(z2-z1)/imH;\nimageXI=ceil((sampleX-x1)/dX);%get the location of element in image\nimageZI=ceil((sampleZ-z1)/dZ);\n\nstartId=min([d.GROUP.groupId;-10])-1;%clump starts from -11 or lowest groupId-1\nGrayGId=-GrayRank+1+startId;%change gray rank to groupId\nimageIndex=(imageXI-1)*imH+imageZI;%element index in image\nimageGId=GrayGId(imageIndex);%element groupId in image\n\n%---------------4. set the clump by groupId\nd.GROUP.groupId(sFilter)=imageGId;%assing groupId to the group\nd.setClump();%set clump for groupId&lt;=-11\ndelFilter=d.GROUP.groupId==startId;%groupId of pores is startId\nd.delElement(find(delFilter));%delete pores\n\nfigure\nsubplot(1,2,1);\nimshow(fileName);\nsubplot(1,2,2);\nd.showData('groupId');\ncolorbar off;\n\n%---------------5. save the data\nd.mo.setGPU('off');\nd.clearData(1);\nd.recordCalHour('BoxModel2Finish');\nsave(['TempModel/' B.name '2.mat'],'B','d');\nsave(['TempModel/' B.name '2R' num2str(B.ballR) '-distri' num2str(B.distriRate)  'aNum' num2str(d.aNum) '.mat']);\nd.calculateData();\n</code></pre>"},{"location":"examples/examplesModel/models/","title":"models","text":"Step 1Step 2Step 3 user_modelAnchor.m<pre><code>clear;\nballR=0.001;\ndiscR=0.01;\nholeR=0.006;\npoleL=0.1;\nRrate=0.8;\ndiscObj0=f.run('fun/makeDisc.m',discR,ballR*0.8);%define the basic disc\ndiscObj0.R=discObj0.R/0.8;\ndiscObj0=mfs.cutBoxObj(discObj0,discR*2.1,discR*1.5,1);\nf=sqrt(discObj0.X.^2+discObj0.Y.^2)&gt;holeR;\ndiscObj0=mfs.filterObj(discObj0, f);\nfs.showObj(discObj0);\n\ndDis=ballR*2*Rrate;\nnum=ceil(poleL/dDis);\ndDis=poleL/num;\ndAngle=360/num;\n\nallObj.X=[];allObj.Y=[];allObj.Z=[];allObj.R=[];\nfor i=1:num\n    discObjNew=mfs.rotate(discObj0,'XY',dAngle*i);\n    discObjNew=mfs.move(discObjNew,0,0,dDis*i);\n    allObj=mfs.combineObj(allObj,discObjNew);\nend\nfigure;\nfs.showObj(allObj);\n</code></pre> user_modelExample.m<pre><code>clear\nfigure\nballR=0.02;Rrate=0.4;\n%create a hob, define the size of a hob\nhobR=0.2;hobT=0.1;cutRate=2;\nhob=f.run('fun/makeHob.m',hobR,hobT,cutRate,ballR,Rrate);%run function with internal functions\nsubplot(2,2,1);\nfs.showObj(hob);%show the hob\n\ncolumnR=0.05;columnHeight=0.1;\ncolumn=f.run('fun/makeColumn.m',columnR,columnHeight,ballR,Rrate);%run function with internal functions\nsubplot(2,2,2);\nfs.showObj(column);%show the hob\n\nmoveDis=(hobT+columnHeight)/2-ballR*(1-Rrate);\ncolumn=mfs.move(column,0,0,moveDis);\nhobColumn=mfs.combineObj(hob,column);\nsubplot(2,2,3);\nfs.showObj(hobColumn);%show the hob\n\nhobWidth=0.3;hobLength=0.5;hobHeight=1;\nhobColumn2=mfs.cutBoxObj(hobColumn,hobWidth,hobLength,hobHeight);\nhobColumn2=mfs.rotate(hobColumn2,'YZ',90);\nhobColumn2=mfs.rotate(hobColumn2,'XY',30);\nsubplot(2,2,4);\nfs.showObj(hobColumn2);%show the hob\n</code></pre> user_modelFiber.m<pre><code>clear;\nfs.randSeed(1);%random model seed, 1,2,3...\nB=obj_Box;%declare a box object\nB.name='BoxFiber';\nB.GPUstatus='off';%program will test the CPU and GPU speed, and choose the quicker one\nB.ballR=0.01;\nB.isShear=0;\nB.isClump=0;%if isClump=1, particles are composed of several balls\nB.distriRate=0.2;%define distribution of ball radius, \nB.sampleW=0.9;%width, length, height, average radius\nB.sampleL=0.4;%when L is zero, it is a 2-dimensional model\nB.sampleH=0.6;\nB.BexpandRate=2;%boundary is 4-ball wider than \nB.PexpandRate=0;\nB.type='botPlaten';%add a top platen to compact model\nB.isSample=0;\nB.setType();\n\n%make objects\nminBallR=B.ballR/2;\ninnerR=0.05;\nlayerNum=2;\nRrate=0.8;\nringObj=f.run('fun/makeRing.m',innerR,layerNum,minBallR,Rrate);\ntubeObj=mfs.make3Dfrom2D(ringObj, B.sampleW/2,minBallR);\ntubeObj=mfs.rotate(tubeObj,'XZ',90);%rotate the group along XZ plane\ntube1Obj=mfs.move(tubeObj,B.sampleW/4,B.sampleL/2,B.sampleH/2);\ntube2Obj=mfs.move(tubeObj,B.sampleW*3/4,B.sampleL/2,B.sampleH/2);\nfiberObj=f.run('fun/make3DLine.m',[minBallR/2,B.sampleW-minBallR/2],[0,0],[0,0],minBallR,0.8);\nfiberObj=mfs.move(fiberObj,0,B.sampleL/2,B.sampleH/2);\n\nfiberAngle=[30,150,270]*pi/180;\nrate=[0.99,0.99,0.99]*0.99;\nfiberR1=ringObj.outerR+minBallR;\nfiberY=fiberR1*cos(fiberAngle).*rate;\nfiberZ=fiberR1*sin(fiberAngle).*rate;\n\nfiber1Obj=mfs.move(fiberObj,0,fiberY(1),fiberZ(1));\nfiber2Obj=mfs.move(fiberObj,0,fiberY(2),fiberZ(2));\nfiber3Obj=mfs.move(fiberObj,0,fiberY(3),fiberZ(3));\n\n%add the objects to the box model\nB.buildInitialModel();d=B.d;\n[tube1Id,tube2Id,fiber1Id,fiber2Id,fiber3Id]=d.addElement(1,{tube1Obj,tube2Obj,fiber1Obj,fiber2Obj,fiber3Obj});\nd.addGroup('tube1',tube1Id);%add a new group\nd.setClump('tube1');%set the pile clump\nd.addGroup('tube2',tube2Id);%add a new group\nd.setClump('tube2');%set the pile clump\nd.addGroup('fiber1',fiber1Id);%add a new group\nd.setClump('fiber1');%set the pile clump\nd.addGroup('fiber2',fiber2Id);%add a new group\nd.setClump('fiber2');%set the pile clump\nd.addGroup('fiber3',fiber3Id);%add a new group\nd.setClump('fiber3');%set the pile clump\n\nd.delElement('botPlaten');\nd=f.run('fun/setGroupId.m',d);\nd.show('groupId');\nxlswrite('abc.xls',d.aX);\n%\n</code></pre>"},{"location":"help/Help_showC/","title":"showC","text":"<p>\u53ef\u89c6\u5316d\u5bf9\u8c61\u7684\u8fde\u63a5\u6570\u636e</p>"},{"location":"help/Help_showC/#_1","title":"\u80f6\u7ed3","text":"<pre>load('Test2D.mat');\nd.calculateData();\nd.setUIoutput();\n\nd.mo.bFilter(:)=true;\nd.mo.bFilter(1:5:end)=false;\nd.mo.zeroBalance();\n\nshowC(d, 'bFilter');\nsnapnow\n</pre> <pre>UI output message box is not set in build.setUIoutput\n</pre>"},{"location":"help/Help_showC/#_2","title":"\u4e8c\u7ef4\u529b\u94fe","text":"<pre>load('Test2D.mat');\nd.calculateData();\nd.setUIoutput();\nh = showC(d, 'ForceChain');\nsnapnow\n\n% \u8c03\u6574\u914d\u8272\u53ca\u7740\u8272\u65b9\u5f0f\nset(h, 'FaceColor', 'flat');\nsnapnow;\n</pre> <pre>UI output message box is not set in build.setUIoutput\nData is set in build.showData\n</pre>"},{"location":"help/Help_showC/#_3","title":"\u4e09\u7ef4\u529b\u94fe","text":"<pre>load('Test3D.mat');\nd.calculateData();\nd.setUIoutput();\n\nh = showC(d, 'ForceChain');\n</pre> <pre>UI output message box is not set in build.setUIoutput\n</pre> <p> <p>\u8c03\u6574colormap</p></p> <pre>colormap(\"jet\");snapnow;\n</pre> <p> </p>"},{"location":"help/Help_showC/#_4","title":"\u5176\u4ed6\u5c5e\u6027\u6570\u636e","text":"<pre>load('Test3D.mat');\nd.calculateData();\nd.setUIoutput();\n\nh = showC(d, 'nFnX');\ncolormap(\"jet\")\n</pre> <pre>UI output message box is not set in build.setUIoutput\n</pre> <p> <p>Published with MATLAB\u00ae R2023a</p></p> <p></p>"},{"location":"help/Help_showConnData/","title":"showConnData","text":"<p>\u53ef\u89c6\u5316\u9897\u7c92\u7fa4\u7684\u8fde\u63a5\u72b6\u6001</p>"},{"location":"help/Help_showConnData/#_1","title":"\u8bed\u6cd5","text":"<pre>showConnData(mPos,cList,cW,cC)\nshowConnData(mPos,cList)\nshowConnData(mPos,cList,cW)\nshowConnData(...,M)\nshowConnData(AX,...)\nH = showConnData(...)</pre>"},{"location":"help/Help_showConnData/#_2","title":"\u63cf\u8ff0","text":"<p>showConnData(mPos, cList) visualize connections defined by the points (mPos) and point pairs(cList). Mark with LINE, with the same width and black color.</p> <p>showConnData(mPos, cList, cW) visualize connections, mark with a narrow RECTANGLE or TUBE of different width. The width varies with cW.</p> <p>showConnData(mPos, cList, cW, cC) visualize connections, mark with a narrow RECTANGLE or TUBE of different width and different color. The width varies with cW, the color varies with cC. TODO: interp color along each connection.</p> <p>showConnData(__, M) visualize with the marker M('line','rect','tube')</p> <p>showConnData(AX, __) plots into AX instead of GCA</p> <p>H = showConnData(__) returns a PATCH or SURFACE handle in H.</p> <p>__ = showConnData(__, pvpairs) sets the value of the specified surface property.  Multiple property values can be set with a single statement.</p>"},{"location":"help/Help_showConnData/#_3","title":"\u793a\u4f8b\u2014\u2014\u57fa\u672c\u56fe\u5143\u4e0e\u6570\u636e\u53ef\u89c6\u5316","text":""},{"location":"help/Help_showConnData/#1","title":"\u7ebf\u6761(1\u7ef4)","text":"<p>\u65e0\u7ebf\u5bbd\uff0c \u6570\u636e\u53ef\u89c6\u5316\u65f6\u4ec5\u6620\u5c04\u4e3a\u989c\u8272</p> <pre>mPos = [zeros(1,3);[sqrt(8)/3*cosd(30:120:270)',sqrt(8)/3*sind(30:120:270)',zeros(3,1)-1/3];0,0,1];\ncList = [1,2;1,3;1,4;1,5];\nmValue = rand(5,1);\ncValue = rand(4,1);\n\nnexttile\nshowConnData(mPos, cList, 'line');\ntitle('\u7ebf\u6761\uff0c \u7edf\u4e00\u7740\u8272\uff08\u9ed8\u8ba4\u4e3a\u7eff\u8272\uff09');\nnexttile\nshowConnData(mPos, cList, 0, cValue, 'EdgeColor', 'flat');\ncolormap(gca, [0,1,0;1,0,0]);\ntitle('\u7ebf\u6761\uff0c \u57fa\u4e8e\u8fde\u63a5\u5c5e\u6027\u5355\u4e00\u7740\u8272');\nnexttile\nshowConnData(mPos, cList, 0, mValue);\ntitle('\u7ebf\u6761\uff0c \u57fa\u4e8e\u9897\u7c92\u5c5e\u6027\u5355\u4e00\u7740\u8272');\nnexttile\nshowConnData(mPos, cList, 0, mValue,'EdgeColor','interp');\ntitle('\u7ebf\u6761\uff0c \u57fa\u4e8e\u9897\u7c92\u5c5e\u6027\u63d2\u503c\u7740\u8272');\n</pre> <p> </p>"},{"location":"help/Help_showConnData/#2","title":"\u77e9\u5f62\uff082\u7ef4\uff09","text":"<p>\u6570\u636e\u53ef\u89c6\u5316\u65f6\u53ef\u6620\u5c04\u4e3a\u5bbd\u5ea6\u3001\u989c\u8272\u6216\uff08\u900f\u660e\u5ea6\uff09</p> <pre>mPos = [zeros(1,3);[sqrt(8)/3*cosd(30:120:270)',sqrt(8)/3*sind(30:120:270)',zeros(3,1)-1/3];0,0,1];\ncList = [1,2;1,3;1,4;1,5];\nmValue = rand(5,1);\ncValue = rand(4,1);\n\nfigure;\nnexttile\nshowConnData(mPos, cList, 'rect');\ntitle('\u77e9\u5f62, \u7ebf\u5bbd + \u9ed1\u8272');\nnexttile\nshowConnData(mPos, cList, 1, cValue, 'rect', 'FaceColor', 'flat');\ntitle('\u77e9\u5f62\uff0c \u56fa\u5b9a\u7ebf\u5bbd + \u5355\u4e00\u7740\u8272');\nnexttile\nshowConnData(mPos, cList, 1, mValue, 'rect');\ntitle('\u77e9\u5f62\uff0c \u56fa\u5b9a\u7ebf\u5bbd + \u63d2\u503c\u7740\u8272');\nnexttile\nshowConnData(mPos, cList, cValue, mValue, 'rect','FaceColor','interp');\ntitle('\u77e9\u5f62\uff0c \u7ebf\u5bbd + \u63d2\u503c\u7740\u8272');\nsnapnow;\n</pre> <p> </p>"},{"location":"help/Help_showConnData/#_4","title":"\u5706\u67f1","text":"<p>\u6570\u636e\u53ef\u89c6\u5316\u65f6\u53ef\u6620\u5c04\u4e3a\u5bbd\u5ea6\u3001\u989c\u8272\u6216\uff08\u900f\u660e\u5ea6\uff09 \u4e09\u7ef4\u65f6\u53ef\u8003\u8651\u5149\u7167\u589e\u5f3a\u7acb\u4f53\u611f</p> <pre>figure;\nmPos = [zeros(1,3);[sqrt(8)/3*cosd(30:120:270)',sqrt(8)/3*sind(30:120:270)',zeros(3,1)-1/3];0,0,1];\ncList = [1,2;1,3;1,4;1,5];\nmValue = rand(5,1);\ncValue = rand(4,1);\n\nnexttile\nshowConnData(mPos, cList, cValue);\ncamlight;\ntitle('\u5706\u67f1, \u7ebf\u5bbd');\nnexttile\nshowConnData(mPos, cList, 1, cValue,'FaceColor', 'flat');\ncamlight;\ntitle('\u5706\u67f1\uff0c \u56fa\u5b9a\u7ebf\u5bbd + \u57fa\u4e8e\u8fde\u63a5\u5c5e\u6027\u5355\u4e00\u7740\u8272');\nnexttile\nshowConnData(mPos, cList, 1, mValue);\ncamlight;\ntitle('\u5706\u67f1\uff0c \u56fa\u5b9a\u7ebf\u5bbd + \u57fa\u4e8e\u9897\u7c92\u5c5e\u6027\u4e24\u6bb5\u7740\u8272');\nnexttile\nshowConnData(mPos, cList, cValue, mValue,'FaceColor','interp');\ncamlight;\ntitle('\u5706\u67f1\uff0c \u7ebf\u5bbd + \u57fa\u4e8e\u9897\u7c92\u5c5e\u6027\u63d2\u503c\u7740\u8272');\nsnapnow;\n</pre> <p> </p>"},{"location":"help/Help_showConnData/#ch4","title":"CH4\u7403\u68cd\u6a21\u578b","text":"<pre>mPos = [zeros(1,3);[sqrt(8)/3*cosd(30:120:270)',sqrt(8)/3*sind(30:120:270)',zeros(3,1)-1/3];0,0,1];\ncList = [1,2;1,3;1,4;1,5];\nmValue = [2,1,1,1,1]';\n\nfigure\ns = struct('X',mPos(:,1),'Y',mPos(:,2),'Z',mPos(:,3),'R',0.2*[1.5;ones(4,1)],'groupId',mValue);\nbfs.show(s);\n\nhold on\nshowConnData(mPos, cList, 1, mValue, 'tube','FaceLighting','gouraud');\ncolormap([1,0,0;1,1,1]);axis off;\nhold off;\n% snapnow;\n</pre>"},{"location":"help/Help_showConnData/#nacl","title":"NaCl\u7403\u68cd\u6a21\u578b","text":"<pre>n=3;\n[mX,mY,mZ]=ndgrid(1:n);\nmPos=[mX(:),mY(:),mZ(:)];\n\nmI=reshape(1:length(mPos),size(mX));\ncList=[reshape(mI(1:end-1,:,:),[],1),reshape(mI(2:end,:,:),[],1);\n    reshape(mI(:,1:end-1,:),[],1),reshape(mI(:,2:end,:),[],1);\n    reshape(mI(:,:,1:end-1),[],1),reshape(mI(:,:,2:end),[],1)];\n\nmValue =  mod(mI(:),2)+1;\ns = struct('X',mPos(:,1),'Y',mPos(:,2),'Z',mPos(:,3),'R',0.2*(mValue/2+0.5),'groupId',mValue);\n\n% subplot(1,2,1)\nbfs.show(s);\nhold on\nshowConnData(mPos, cList, 1/2, mValue,'FaceLighting','gouraud');\ncolormap([1,0,1;0,1,0]);axis off;\nhold off;\nsnapnow;\n\n% subplot(1,2,2)\nbfs.show(s);\nhold on\nh = showConnData(mPos, cList, 1/2, 3,'FaceLighting','gouraud');\ncolormap([1,0,1;0,1,0;1,1,1]);axis off;\nhold off;\nsnapnow;\n\n%}\n</pre>"},{"location":"help/Help_showConnData/#_5","title":"\u53e6\u8bf7\u53c2\u9605","text":"<p>coneplot, scatter, scatter3</p> <p>Copyright 2018-2024 The MatDEM teams.</p> <p>Published with MATLAB\u00ae R2023a</p> <p></p>"}]}